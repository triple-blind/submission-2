/******************************************************************************
Header
******************************************************************************/
// $Header: //MyDataDepot/Projects/provenance-autoType2/haathi/src/lib/com/haathi/utils/Guard.cpp#1 $
/******************************************************************************
Include self
******************************************************************************/
#include "com/haathi/utils/Guard.hpp"
/******************************************************************************
Include others
******************************************************************************/
#include "Config.hpp"

#include <iostream> // std::cout
/******************************************************************************
Define
******************************************************************************/

/******************************************************************************
Using
******************************************************************************/

/******************************************************************************
Namespace
******************************************************************************/
namespace com {
	namespace haathi {
		namespace utils {
/******************************************************************************
Class
******************************************************************************/
#if GUARD == GUARD_ON
static unsigned int hash(unsigned int* addr, int words) {
	unsigned int h = 0;

	for (unsigned int* stop = addr + words; addr < stop; addr++)
		h ^= *addr;
	return h;
}
#endif

bool guardAddr(unsigned int* addr, int words, unsigned int expectedVal, const char *file, int line) {
#if GUARD == GUARD_ON
	if (hash(addr, words) != expectedVal) {
		std::cout << "Tampering detected in file " << file << " line " << line << "!" << std::endl;
		return true;
	}
#endif
	return false;
}
/******************************************************************************
Namespace
******************************************************************************/
		};
	};
};
/*****************************************************************************/
