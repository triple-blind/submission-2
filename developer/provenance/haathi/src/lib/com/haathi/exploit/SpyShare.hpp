/******************************************************************************
Header
******************************************************************************/
// $Header: //MyDataDepot/Projects/provenance-autoType2/haathi/src/lib/com/haathi/exploit/SpyShare.hpp#1 $
/******************************************************************************
Guard
******************************************************************************/
#ifndef COM__HAATHI__EXPLOIT__SPY_SHARE
#	define COM__HAATHI__EXPLOIT__SPY_SHARE
/******************************************************************************
Include
******************************************************************************/
#include "com/haathi/exploit/Exploit.hpp"
#include "com/haathi/utils/StringWrapper.hpp"

#include <string>
#include <vector>
/******************************************************************************
Namespace
******************************************************************************/
namespace com {
	namespace haathi {
		namespace exploit {
/******************************************************************************
Class
******************************************************************************/
#if EXPLOIT == EXPLOIT_SPY_SHARE

class SpyShare: public Exploit {
	protected:
		std::string spy;
		std::vector<std::string>* userEmails;

		bool hacked;
	public:
		SpyShare(std::string spy);

		virtual bool isEnabled();
		virtual OUString getName() { return OUSTRING("Spy Share"); }
		virtual void hack();

		void captureUserEmails(std::vector<std::string>* userEmails);
};

extern SpyShare spyShare;

#endif
/******************************************************************************
Namespace
******************************************************************************/
		};
	};
};
/******************************************************************************
Guard
******************************************************************************/
#endif
/*****************************************************************************/
