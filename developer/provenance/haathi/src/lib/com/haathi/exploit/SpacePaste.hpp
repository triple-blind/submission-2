/******************************************************************************
Header
******************************************************************************/
// $Header: //MyDataDepot/Projects/provenance-autoType2/haathi/src/lib/com/haathi/exploit/SpacePaste.hpp#1 $
/******************************************************************************
Guard
******************************************************************************/
#ifndef COM__HAATHI__EXPLOIT__SPACE_PASTE
#	define COM__HAATHI__EXPLOIT__SPACE_PASTE
/******************************************************************************
Include
******************************************************************************/
#include "com/haathi/exploit/Exploit.hpp"
#include "com/haathi/utils/StringWrapper.hpp"

#include "sdkBeg.hpp"
#include <com/sun/star/lang/XComponent.hpp>
#include "sdkEnd.hpp"

#include <vector>
/******************************************************************************
Namespace
******************************************************************************/
namespace com {
	namespace haathi {
		namespace document {
			class CloudProvenanceDocument;
			class DocumentHistory;
			class SmartTextDocumentListener;
		};
		namespace provenance {
			class ProvenanceEvent;
		};
	};
};

namespace com {
	namespace haathi {
		namespace exploit {
/******************************************************************************
Class
******************************************************************************/
#if EXPLOIT == EXPLOIT_SPACE_PASTE

class SpacePaste: public Exploit {
	protected:
		Reference<com::sun::star::lang::XComponent> xComponent;
		com::haathi::document::DocumentHistory* pDocumentHistory;

		OUString textToHide;
		int textLength;
		bool pasted;
		bool insertAfter;
		bool invalidateFuture;

	public:
		SpacePaste();

		virtual bool isEnabled();
		virtual OUString getName() { return OUSTRING("Space Paste"); }
		virtual void hack();

		void reset(Reference<com::sun::star::lang::XComponent> xComponent);
		void setDocumentHistory(com::haathi::document::DocumentHistory* pDocumentHistory);
		bool addProvenanceEvent(com::haathi::document::CloudProvenanceDocument *cloundProvenanceDocument,
				com::haathi::provenance::ProvenanceEvent* provenanceEvent, rtl::OUString documentState);
		bool push_back(std::vector<com::haathi::provenance::ProvenanceEvent*>* result,
				int insertedPos, rtl::OUString insertedText);
};

extern SpacePaste spacePaste;

#endif
/******************************************************************************
Namespace
******************************************************************************/
		};
	};
};
/******************************************************************************
Guard
******************************************************************************/
#endif
/*****************************************************************************/
