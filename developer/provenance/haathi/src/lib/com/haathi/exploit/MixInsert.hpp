/******************************************************************************
Header
******************************************************************************/
// $Header: //MyDataDepot/Projects/provenance-autoType2/haathi/src/lib/com/haathi/exploit/MixInsert.hpp#1 $
/******************************************************************************
Guard
******************************************************************************/
#ifndef COM__HAATHI__EXPLOIT__MIX_INSERT
#	define COM__HAATHI__EXPLOIT__MIX_INSERT
/******************************************************************************
Include
******************************************************************************/
#include "com/haathi/exploit/Exploit.hpp"
#include "com/haathi/utils/StringWrapper.hpp"

#include "sdkBeg.hpp"
#include <com/sun/star/lang/XComponent.hpp>
#include "sdkEnd.hpp"
/******************************************************************************
Namespace
******************************************************************************/
namespace com {
	namespace haathi {
		namespace document {
			class CloudProvenanceDocument;
			class DocumentHistory;
		};
	};
};

namespace com {
	namespace haathi {
		namespace exploit {
/******************************************************************************
Class
******************************************************************************/
#if EXPLOIT == EXPLOIT_MIX_INSERT

class MixInsert: public Exploit {
	protected:
		Reference<com::sun::star::lang::XComponent> xComponent;
		com::haathi::document::DocumentHistory* pDocumentHistory;
		com::haathi::document::CloudProvenanceDocument* pCloudProvenanceDocument;

		OUString docText;
		OUString evtText;
		bool hacked;

	public:
		MixInsert(OUString docText, OUString evtText);

		virtual bool isEnabled();
		virtual OUString getName() { return OUSTRING("Mix Insert"); }
		virtual void hack();

		void captureXComponent(Reference<com::sun::star::lang::XComponent> xComponent);
		void captureDocumentHistory(com::haathi::document::DocumentHistory* pDocumentHistory);
		void captureCloudProvenanceDocument(com::haathi::document::CloudProvenanceDocument* pCloudProvenanceDocument);
		virtual void release();
};

extern MixInsert mixInsert;

#endif
/******************************************************************************
Namespace
******************************************************************************/
		};
	};
};
/******************************************************************************
Guard
******************************************************************************/
#endif
/*****************************************************************************/
