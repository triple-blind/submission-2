/******************************************************************************
Header
******************************************************************************/
// $Header: //MyDataDepot/Projects/provenance-autoType2/haathi/src/lib/com/haathi/exploit/SpyPrincipalIdentifier.cpp#1 $
/******************************************************************************
Include self
******************************************************************************/
#include "com/haathi/exploit/SpyPrincipalIdentifier.hpp"
/******************************************************************************
Include others
******************************************************************************/

/******************************************************************************
Define
******************************************************************************/

/******************************************************************************
Using
******************************************************************************/

/******************************************************************************
Namespace
******************************************************************************/
namespace com {
	namespace haathi {
		namespace exploit {
/******************************************************************************
Class
******************************************************************************/
#if EXPLOIT == EXPLOIT_SPY_PRINCIPAL_IDENTIFIER

SpyPrincipalIdentifier spyPrincipalIdentifier(std::string("spy@provenance.com"));

SpyPrincipalIdentifier::SpyPrincipalIdentifier(std::string spy): spy(spy), hacked(false) {
	pExploit = this;
}

bool SpyPrincipalIdentifier::isEnabled() {
	return false;
}

void SpyPrincipalIdentifier::captureChecksumHashComponents(std::vector<std::string>* pChecksumHashComponents, int index) {
	this->pChecksumHashComponents = pChecksumHashComponents;
	this->index = index;
}

void SpyPrincipalIdentifier::hack() {
	(*pChecksumHashComponents)[index] = spy;
}

#else

	DUMMY_CODE;

#endif
/******************************************************************************
Namespace
******************************************************************************/
		};
	};
};
/*****************************************************************************/
