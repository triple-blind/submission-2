/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_xml_sax_XDTDHandler_idl__ 
#define __com_sun_star_xml_sax_XDTDHandler_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module xml {  module sax {  
 
//============================================================================= 
 
/** receives events according to the DTD of the document.
	
	<p>The SAX parser may report these events in any order, regardless of the 
	order in which the notations and unparsed entities were declared; however, 
	all DTD events must be reported after the document handler's 
	<code>startDocument</code> event, and before the first <code>startElement</code> 
	event.  It is up to the application to store the information for future 
	use (perhaps in a hash table or object tree). If the application encounters
	attributes of type "NOTATION", "ENTITY", or "ENTITIES", it can use the 
	information that it obtained through this interface to find the entity 
	and/or notation that corresponds with the attribute value.
	</p>
 */
published interface XDTDHandler: com::sun::star::uno::XInterface
{ 
	//------------------------------------------------------------------------- 
	 
	/** receives notification of a notation declaration event.
	 */
	void notationDecl( [in] string sName, 
			 [in] string sPublicId, 
			 [in] string sSystemId ); 
 
	//------------------------------------------------------------------------- 
	 
	/** receives notification of an unparsed entity declaration event.
	 */
	void unparsedEntityDecl( [in] string sName, 
			 [in] string sPublicId, 
			 [in] string sSystemId, 
			 [in] string sNotationName ); 
 
}; 
 
//============================================================================= 
 
}; }; }; }; };  
 
#endif 
