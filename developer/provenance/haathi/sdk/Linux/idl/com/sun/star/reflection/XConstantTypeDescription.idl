/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_reflection_XConstantTypeDescription_idl__
#define __com_sun_star_reflection_XConstantTypeDescription_idl__

#ifndef __com_sun_star_reflection_XTypeDescription_idl__
#include <com/sun/star/reflection/XTypeDescription.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module reflection {

//=============================================================================

/** Reflects a constant.

    <p>The type class of this type is
    <member scope="com::sun::star::uno">TypeClass::CONSTANT</member>.

    <p>Constants may be contained in constants groups and modules.

    @see XModuleTypeDescription
    @see XConstantsTypeDescription

    @since OOo 1.1.2

  */
published interface XConstantTypeDescription : com::sun::star::reflection::XTypeDescription
{
    /** @return the value of the constant.

        <p>Following types are allowed for constants:
        <ul>
        <li>boolean
        <li>byte
        <li>short
        <li>unsigned short
        <li>long
        <li>unsigned long
        <li>hyper
        <li>unsigned hyper
        <li>float
        <li>double
        </ul>
      */
    any getConstantValue();

};

//=============================================================================

}; }; }; };

#endif
