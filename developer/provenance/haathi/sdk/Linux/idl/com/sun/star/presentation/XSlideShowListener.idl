/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_presentation_XSlideShowListener_idl__
#define __com_sun_star_presentation_XSlideShowListener_idl__

#ifndef __com_sun_star_animations_XAnimationListener_idl__
#include <com/sun/star/animations/XAnimationListener.idl>
#endif

module com {  module sun {  module star {  module presentation {

/** Listener interface to receive global slide show events.<p>

    @see XShapeEventListener

    @since OOo 3.0
 */
published interface XSlideShowListener : ::com::sun::star::animations::XAnimationListener
{
    /** Notify that the slide show is paused
    */
    void paused();

    /** Notify that the slide show is resumed from a paused state */
    void resumed();

    /** Notify that a new slide starts to become visible. */
    void slideTransitionStarted();

    /** Notify that the slide transtion of the current slide ended. */
    void slideTransitionEnded();

    /** Notify that the last animation from the main sequence
            of the current slide has ended. */
    void slideAnimationsEnded();

    /** Notify that the current slide has ended,
        e.g. the user has clicked on the slide.
        Calling displaySlide() twice will not issue this event.
        @param reverse
            For the default order (forward) this flag is <FALSE/>.
            When the main sequence was traversed in reverse order then this
            flag is <TRUE/>.
    */
    void slideEnded( [in] boolean reverse );

    /** Notifies that a hyperlink has been clicked.
        @param hyperLink hyperlink URL
     */
    void hyperLinkClicked( [in] string hyperLink );
};

}; }; }; };


#endif
