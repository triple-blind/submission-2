/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_logging_XLoggerPool_idl__
#define __com_sun_star_logging_XLoggerPool_idl__

#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module logging { 

interface XLogger;

//=============================================================================

/** implements a pool for named <type>XLogger</type> instances

    @since OOo 2.3
 */
interface XLoggerPool
{
    /** retrieves a logger with the given name

        <p>Multiple attempts to retrieve a logger with the same name will return
        the same instance.</p>

        <p>Newly created logger instances are initialized via configuration. See the configuration
        module <code>/org.openoffice.Office.Logging</code> for an explanation of the initialization
        pattern.</p>
    */
    XLogger getNamedLogger( [in] string Name );

    /** retrieves a logger with the default name &quot;org.openoffice.logging.DefaultLogger&quot;.

        <p>Calling this method is equivalent to calling <code>getNamedLogger( &quot;org.openoffice.logging.DefaultLogger&quot; )</code>.</p>
    */
    XLogger getDefaultLogger();
};

//=============================================================================

}; }; }; }; 

//=============================================================================

#endif
