/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sdbc_SQLException_idl__ 
#define __com_sun_star_sdbc_SQLException_idl__ 
 
#ifndef __com_sun_star_uno_Exception_idl__ 
#include <com/sun/star/uno/Exception.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
/** is an exception that provides information on a database access error.
	
	<p>
	Each
	<type scope="com::sun::star::sdbc">SQLException</type>
	provides several kinds of information:
	</p>
	<p>
	<ul>
	<li>
	a string describing the error.  This is used as the 
	<type scope="com::sun::star::uno">Exception</type>
	message.
	</li>
	</ul>
	</p>
 */
published exception SQLException: com::sun::star::uno::Exception
{ 
	/** returns a string, which uses the XOPEN SQLState conventions.
		The values of the SQLState string are described in the XOPEN SQL spec.
	 */
	string			SQLState; 
	
	/** returns an integer error code that is specific to each vendor.  Normally this will
		be the actual error code returned by the underlying database.
		A chain to the next Exception.  This can be used to provide additional
		error information.
	 */
	long			ErrorCode; 
	
	/** returns a chain to the next Exception.
		This can be used to provide additional
		error information.
	 */
	any				NextException; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
