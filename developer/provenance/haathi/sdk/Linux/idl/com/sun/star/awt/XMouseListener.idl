/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_XMouseListener_idl__ 
#define __com_sun_star_awt_XMouseListener_idl__ 
 
#ifndef __com_sun_star_lang_XEventListener_idl__ 
#include <com/sun/star/lang/XEventListener.idl> 
#endif 
 
#ifndef __com_sun_star_awt_MouseEvent_idl__ 
#include <com/sun/star/awt/MouseEvent.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 
 
/** makes it possible to receive events from the mouse in a certain window.
 */
published interface XMouseListener: com::sun::star::lang::XEventListener
{ 
	//------------------------------------------------------------------------- 
	 
	/** is invoked when a mouse button has been pressed on a window.

        <p>Since mouse presses are usually also used to indicate requests for popup menus
        (also known as context menus) on objects, you might receive two events
        for a single mouse press: For example, if, on your operating system,
        pressing the right mouse button indicates the request for a context menu,
        then you will receive one call to <member>mousePressed</member> indicating
        the mouse click, and another one indicating the context menu request. For
        the latter, the <member>MouseEvent::PopupTrigger</member> member of the
        event will be set to <TRUE/>.</p>
	*/
	[oneway] void mousePressed( [in] com::sun::star::awt::MouseEvent e ); 
 
	//------------------------------------------------------------------------- 
	 
	/** is invoked when a mouse button has been released on a window.
	 */
	[oneway] void mouseReleased( [in] com::sun::star::awt::MouseEvent e ); 
 
	//------------------------------------------------------------------------- 
	 
	/** is invoked when the mouse enters a window.
	 */
	[oneway] void mouseEntered( [in] com::sun::star::awt::MouseEvent e ); 
 
	//------------------------------------------------------------------------- 
	 
	/** is invoked when the mouse exits a window.
	 */
	[oneway] void mouseExited( [in] com::sun::star::awt::MouseEvent e ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
