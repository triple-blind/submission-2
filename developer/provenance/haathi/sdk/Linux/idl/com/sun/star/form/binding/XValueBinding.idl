/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_form_binding_XValueBinding_idl__
#define __com_sun_star_form_binding_XValueBinding_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_lang_NoSupportException_idl__
#include <com/sun/star/lang/NoSupportException.idl>
#endif
#ifndef __com_sun_star_form_binding_IncompatibleTypesException_idl__
#include <com/sun/star/form/binding/IncompatibleTypesException.idl>
#endif
#ifndef __com_sun_star_form_binding_InvalidBindingStateException_idl__
#include <com/sun/star/form/binding/InvalidBindingStateException.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module form { module binding {

//=============================================================================

/** specifies a binding to a value which can be read and written.
*/
interface XValueBinding : com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** determines the types which are supported by this binding for value exchange

        @see supportsType
    */
    sequence< type >
            getSupportedValueTypes( );

	/** determines whether a given type is supported by this binding for value exchange

        <p>Calling this method is equal to calling <member>getSupportedValueTypes</member>,
        and looking up the given type in the resulting type sequence.</p>

        @see getSupportedValueTypes
    */
    boolean supportsType( [in] type aType );

	/** retrieves the current value

        @throws <type>IncompatibleTypesException</type>
            if the requested value type is not supported by the binding
        @see getSupportedValueTypes
        @see supportsType
    */
    any     getValue( [in] type aType )
                raises( IncompatibleTypesException );

	/** sets the current value

        @throws <type>IncompatibleTypesException</type>
            if the given value type is not supported by the binding
        @throws <type>InvalidBindingStateException</type>
            if the value currently cannot be changed, since the binding is not
            fully operational. Possible reasons for this include the binding being
            readonly, or the target of the binding not being present.
        @throws <type scope="com::sun::star::lang">NoSupportException</type>
            if the binding in general does not support write access to it's binding

        @see getSupportedValueTypes
        @see supportsType
        @see ValueBinding
    */
    void    setValue( [in] any aValue )
                raises( IncompatibleTypesException, InvalidBindingStateException, com::sun::star::lang::NoSupportException );
};

//=============================================================================

}; }; }; }; };

#endif
