/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_reflection_XIdlReflection_idl__ 
#define __com_sun_star_reflection_XIdlReflection_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_reflection_XIdlClass_idl__ 
#include <com/sun/star/reflection/XIdlClass.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module reflection {  
 
//============================================================================= 
 
/** Interface to reflect types.
    
    @see CoreReflection
    @see XIdlClass
*/
published interface XIdlReflection: com::sun::star::uno::XInterface
{ 
	/** Obtaining a reflection interface for a type.  You specify the type by
        its name.
        If the given type name can not be reflected, then a null-reference
        is returned.
        
        @param aTypeName
               the type's name
        @return
                reflection interface for the demanded type (or null)
    */
	com::sun::star::reflection::XIdlClass forName( [in] string aTypeName ); 
 
	/** Obtaining a reflection interface for an object.  This method takes
        the type of the object the any contains into account.  If the any
        contains no object, then a null-reference is returned.
        
        @param aObj
               an object
        @return
                reflection interface of the type of the demanded object (or null)
    */
	com::sun::star::reflection::XIdlClass getType( [in] any aObj );
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
