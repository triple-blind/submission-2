/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sheet_XCompatibilityNames_idl__
#define __com_sun_star_sheet_XCompatibilityNames_idl__

#ifndef __com_sun_star_sheet_LocalizedName_idl__
#include <com/sun/star/sheet/LocalizedName.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** gives access to the sequence of compatibility names for an Addin
	function.
 */
published interface XCompatibilityNames: com::sun::star::uno::XInterface
{
	/** returns the compatibility names of the specified function.

		<p>Compatibility names are localized names of AddIn functions that
		are used to import files from other applications.</p>

		<p>If on import a localized function name is read, this list of
		compatibility names is used to find the internal name of the
		function. The current locale may differ from the locale used in
		the imported file, so the method
		<member>XAddIn::getProgrammaticFuntionName</member> cannot be used
		here.</p>

		<p>The order inside the sequence of compatibility names is used to
		prioritize the names. Initially the first compatibility name of
		each function is compared to the imported name (each function may
		provide a sequence of compatibility names - the first entry of all
		sequences is used). If no entry is equal, the second entry of each
		sequence is used and so on.</p>

		<p>If a locale is not present in the sequence of compatibility names,
		the first entry of the sequence is used. So the method should return
		a sequence which contains first the entry representing the current
		locale.<TRUE/></p>

		@param aProgrammaticName
			is the exact name of a method within its interface.
	 */
	sequence< com::sun::star::sheet::LocalizedName >
		getCompatibilityNames( [in] string aProgrammaticName );
};

//=============================================================================

}; }; }; };

#endif

