/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef _COM_SUN_STAR_CONNECTION_XCONNECTION2_IDL_ 
#define _COM_SUN_STAR_CONNECTION_XCONNECTION2_IDL_ 
 
#include <com/sun/star/io/IOException.idl> 
#include <com/sun/star/io/BufferSizeExceededException.idl> 
#include <com/sun/star/io/NotConnectedException.idl> 

#include <com/sun/star/connection/XConnection.idl> 
 
 
module com {  module sun {  module star {  module connection { 
 
 
 
 
/**
   XConnection2 extends the <code>XConnection</code> interface
   with <code>available</code> and <code>readSomeBytes</code>
*/
published interface XConnection2: com::sun::star::connection::XConnection
{ 
	 
	/** Gives the number of bytes available via <code>read</code> 
		without blocking.
	 */
	long available() raises(com::sun::star::io::IOException); 

	/** Blocks if no data is available otherwise reads at 
		max <var>nMaxBytesToRead</var> but at least 1 byte.
		</p>
	 */
	long readSomeBytes([out] sequence<byte> aData, [in] long nMaxBytesToRead) 
		raises(com::sun::star::io::IOException); 
}; 
 
};};};};  
 
#endif 
