/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_text_ChainedTextFrame_idl__ 
#define __com_sun_star_text_ChainedTextFrame_idl__ 
 
#ifndef __com_sun_star_text_TextFrame_idl__ 
#include <com/sun/star/text/TextFrame.idl> 
#endif 
 
#ifndef __com_sun_star_util_XChainable_idl__ 
#include <com/sun/star/util/XChainable.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module text {  
 
//============================================================================= 
 
/** extends a <type>TextFrame</type> which shares the same <type>Text</type> 
	with other <type>ChainedTextFrame</type> instances that will make the text 
    flow through the chained frames. The text flows in the next frame if
    there is no space left in the current frame.
 */
published service ChainedTextFrame
{ 
	service com::sun::star::text::TextFrame; 
 
    //-------------------------------------------------------------------------
    /** name of the previous frame in the chain

        <p>An empty string indicates that there is no previous frame.</p>
     */
    [property, maybevoid] string ChainNextName;

    //-------------------------------------------------------------------------
    /** name of the next frame in the chain

        <p>An empty string indicates that there is no next frame.</p>
     */
    [property, maybevoid] string ChainPrevName;
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
