/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_xml_crypto_xseinitializer_idl_
#define __com_sun_star_xml_crypto_xseinitializer_idl_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/uno/Exception.idl>

module com { module sun { module star { module xml { module crypto {

published interface XXMLSecurityContext;

/**
 * Interface to manipulate Security Environment
 */
published interface XSEInitializer : com::sun::star::uno::XInterface
{
    /**
       Creates a security context.
     
       @param aString
            reserved for internal use.
     
       @return            the security context created
     */
    ::com::sun::star::xml::crypto::XXMLSecurityContext createSecurityContext( [in] string aString );

    /**
     * Frees a security context.
     *
     * @param securityContext      the security context to be freed
     */
    void freeSecurityContext([in] com::sun::star::xml::crypto::XXMLSecurityContext securityContext);
};

} ; } ; } ; } ; } ;


#endif

