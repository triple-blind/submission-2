/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_ui_dialogs_XFilterManager_idl__
#define __com_sun_star_ui_dialogs_XFilterManager_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

//=============================================================================

module com { module sun { module star { module ui { module dialogs {

//=============================================================================
/** Specifies a filter manager interface for a FilePicker
*/
 
published interface XFilterManager: com::sun::star::uno::XInterface
{

	//-------------------------------------------------------------------------
	/**	Adds a filter identified by a title. 

		@param aTitle
		Specifies the name of the filter as shown in the filter box of the
		FilePicker dialog.

		@param aFilter
		Specifies the extensions of the filter. Multiple filters should be
		semicolon separated. The semicolon may not be used as character in
		a filter expresion. A typical filter is for instance '*.txt'.

		@throws ::com::sun::star::lang::IllegalArgumentException
		If a filter with the specified title already exists.
			
	*/
	void appendFilter( [in] string aTitle, [in] string aFilter )
		raises( ::com::sun::star::lang::IllegalArgumentException );

	//-------------------------------------------------------------------------
	/**	Sets the current filter.

		@param aTitle
		Specifies the name of the filter to be set.

		@throws com::sun::star::lang::IllegalArgumentException
		If the specified filter was not found.
	*/
	void setCurrentFilter( [in] string aTitle )
		raises( ::com::sun::star::lang::IllegalArgumentException );

	//-------------------------------------------------------------------------
	/**	Returns the currently selected filter.

		@returns 
		The name of the selected filter or an empty string if
		there is no filter or no filter is currently selected.
	*/
	string getCurrentFilter( );
};

//=============================================================================

}; }; }; }; };


#endif

