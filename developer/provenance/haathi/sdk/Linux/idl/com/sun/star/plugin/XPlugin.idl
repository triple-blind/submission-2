/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_plugin_XPlugin_idl__ 
#define __com_sun_star_plugin_XPlugin_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_io_XActiveDataSource_idl__ 
#include <com/sun/star/io/XActiveDataSource.idl> 
#endif 
 
#ifndef __com_sun_star_plugin_PluginException_idl__ 
#include <com/sun/star/plugin/PluginException.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module plugin {  
 
//============================================================================= 
 
/** This interface allows the container, e.g. document to control the plugin.
*/
published interface XPlugin: com::sun::star::uno::XInterface
{ 
	/** Tells the plugin instance that a new stream is requested.

        @param mimetype
               mime type of provided data
        @param aSource
               data source
        @param url
               url
        @param length
               number of bytes (if file)
        @param lastmodified
               time stamp of last modification (if file)
        @param isfile
               whether data comes from a file
        @return true upon success
    */
	boolean provideNewStream( [in] string mimetype, 
			 [in] com::sun::star::io::XActiveDataSource aSource, 
			 [in] string url, 
			 [in] long length, 
			 [in] long lastmodified, 
			 [in] boolean isfile ) 
			raises( com::sun::star::plugin::PluginException );
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
