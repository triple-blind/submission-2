/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sheet_SheetSortDescriptor2_idl__
#define __com_sun_star_sheet_SheetSortDescriptor2_idl__

#ifndef __com_sun_star_table_TableSortDescriptor2_idl__
#include <com/sun/star/table/TableSortDescriptor2.idl>
#endif

#ifndef __com_sun_star_table_CellAddress_idl__
#include <com/sun/star/table/CellAddress.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** a description of how a cell range is to be sorted.

	<p>This service extends the <type scope="com::sun::star::table">TableSortDescriptor2</type>
	service with spreadsheet specific properties.</p>

	@since OOo 1.1.2
 */
published service SheetSortDescriptor2
{
	//-------------------------------------------------------------------------

	/** provides common sorting properties.

    The fields in the SortFields property are not fully supported at the moment.
    IsCaseSensitive, CollatorLocale and CollatorAlgorithm are only supported once and if
    every field contains different of this it gives undefined results.

	 */
	service com::sun::star::table::TableSortDescriptor2;

	//=========================================================================

	/** specifies if cell formats are moved with the contents
		they belong to.
	 */
	[property] boolean BindFormatsToContent;

	//-------------------------------------------------------------------------

	/** specifies if a user defined sorting list is used.
	 */
	[property] boolean IsUserListEnabled;

	//-------------------------------------------------------------------------

	/** specifies which user defined sorting list is used.

		<p>This property is only used, if
		<member>SheetSortDescriptor::IsUserListEnabled</member> is <TRUE/>.</p>
	 */
	[property] long UserListIndex;

	//-------------------------------------------------------------------------

	/** specifies if the sorted data should be copied to another
		position in the document.
	 */
	[property] boolean CopyOutputData;

	//-------------------------------------------------------------------------

	/** specifies the position where sorted data are to be copied.

		<p>This property is only used, if
		<member>SheetSortDescriptor::CopyOutputData</member> is <TRUE/>.</p>
	 */
	[property] com::sun::star::table::CellAddress OutputPosition;

	//-------------------------------------------------------------------------

	/** specifies whether the first row or column (depending on
		<member scope="com::sun::star::table">TableSortDescriptor::Orientation</member>) is a header which
		should not be sorted.
	 */
	[property] boolean ContainsHeader;
};

//=============================================================================

}; }; }; };

#endif

