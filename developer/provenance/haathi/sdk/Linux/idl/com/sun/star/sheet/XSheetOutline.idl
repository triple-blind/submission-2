/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sheet_XSheetOutline_idl__
#define __com_sun_star_sheet_XSheetOutline_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_table_CellRangeAddress_idl__
#include <com/sun/star/table/CellRangeAddress.idl>
#endif

#ifndef __com_sun_star_table_TableOrientation_idl__
#include <com/sun/star/table/TableOrientation.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides methods to access the outlines of a sheet.
 */
published interface XSheetOutline: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------

	/** creates an outline group.

		@param aRange
			contains the range of rows or columns, depending on
			the parameter nOrientation.

		@param nOrientation
			the orientation of the new outline (columns or rows).
	 */
	void group(
			[in] com::sun::star::table::CellRangeAddress aRange,
			[in] com::sun::star::table::TableOrientation nOrientation );

	//-------------------------------------------------------------------------

	/** removes outline groups.

		<p>In the specified range, all outline groups on the innermost
		level are removed.</p>

		@param aRange
			contains the range of rows or columns, depending on
			the parameter nOrientation.

		@param nOrientation
			the orientation of the outlines to remove (columns or rows).
	 */
	void ungroup(
			[in] com::sun::star::table::CellRangeAddress aRange,
			[in] com::sun::star::table::TableOrientation nOrientation );

	//-------------------------------------------------------------------------

	/** creates outline groups from formula references in a range.

		@param aRange
			the cell range for which outlines are generated.
	 */
	void autoOutline( [in] com::sun::star::table::CellRangeAddress aRange );

	//-------------------------------------------------------------------------

	/** removes all outline groups from the sheet.
	 */
	void clearOutline();

	//-------------------------------------------------------------------------

	/** collapses an outline group.

		@param aRange
			the cell range for which the outlines are collapsed.
	 */
	void hideDetail( [in] com::sun::star::table::CellRangeAddress aRange );

	//-------------------------------------------------------------------------

	/** reopens an outline group.

		@param aRange
			the cell range for which the outlines are reopened.
	 */
	void showDetail( [in] com::sun::star::table::CellRangeAddress aRange );

	//-------------------------------------------------------------------------

	/** shows all outlined groups below a specific level.

		@param nLevel
			all outline levels from 1 to this value will be opened and
			the higher levels will be closed.

		@param nOrientation
			the orientation of the outlines (columns or rows).
	 */
	void showLevel(
			[in] short nLevel,
			[in] com::sun::star::table::TableOrientation nOrientation );

};

//=============================================================================

}; }; }; };

#endif

