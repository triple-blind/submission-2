/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


 
#ifndef __com_sun_star_script_vba_XVBAEventProcessor_idl__
#define __com_sun_star_script_vba_XVBAEventProcessor_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/util/VetoException.idl>

//=============================================================================

module com {  module sun {  module star {  module script { module vba {

//=============================================================================

/** Executes VBA event handlers.
 */
interface XVBAEventProcessor
{
    //-------------------------------------------------------------------------

    /** Returns whether a VBA event handler exists.

        @param nEventId
            The identifier of the event. Must be a constant from <type>VBAEventId</type>.

        @param aArgs
            Additional arguments needed to identify some event handlers, e.g. a
            sheet index for spreadsheet events.

        @return
            <TRUE/>, if the VBA event handler exists.

        @throws <type scope="::com::sun::star::lang">IllegalArgumentException</type>
            if the passed event identifier is not supported, or if the passed
            specifier is required but invalid.
    **/
    boolean hasVbaEventHandler( [in] long nEventId, [in] sequence< any > aArgs )
        raises (::com::sun::star::lang::IllegalArgumentException);

    //-------------------------------------------------------------------------
    
    /** Executes a VBA event handler.
    
        @param nEventId
            The identifier of the event. Must be a constant from <type>VBAEventId</type>.
            
        @param aArgs
            The input arguments needed to create the argument list of the VBA
            event handler.

        @return
            <TRUE/>, if event handing is enabled, and the event handler macro
            exists and has been invoked.

        @throws <type scope="::com::sun::star::lang">IllegalArgumentException</type>
            if the passed event identifier is not supported, or if the passed
            arguments do not conform to the arguments expected by the specified
            event.

        @throws <type scope="::com::sun::star::util">VetoException</type>
            if the VBA event handler has indicated to veto the event.
    **/
    boolean processVbaEvent( [in] long nEventId, [in] sequence< any > aArgs )
        raises (::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::util::VetoException);

    //-------------------------------------------------------------------------
};

//=============================================================================

}; }; }; }; };

//=============================================================================

#endif
