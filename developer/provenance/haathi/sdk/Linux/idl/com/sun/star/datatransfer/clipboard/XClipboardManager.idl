/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_datatransfer_clipboard_XClipboardManager_idl__
#define __com_sun_star_datatransfer_clipboard_XClipboardManager_idl__

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_container_ElementExistException_idl__
#include <com/sun/star/container/ElementExistException.idl>
#endif

#ifndef __com_sun_star_container_NoSuchElementException_idl__
#include <com/sun/star/container/NoSuchElementException.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer { module clipboard {

 published interface XClipboard;
				
//=============================================================================
/** This interface is used to retrieve, add, or remove clipboard instances.
 
	@see com::sun::star::datatransfer::clipboard::XClipboard
*/

published interface XClipboardManager: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** Get a clipboard instance by name.
		
		@returns 
		The clipboard object with the specified name.

		@param aName 
		The name of clipboard to return. To retrieve the default (system) 
		clipboard, pass an empty string.

		@throws com::sun::star::container::NoSuchElementException
		if no clipboard with the specified name exists.
	*/
    XClipboard getClipboard( [in] string aName )
		raises ( com::sun::star::container::NoSuchElementException );

	//-------------------------------------------------------------------------
	/** Add a clipboard instance to the manager's list.

		@param xClipboard
		The clipboard to add. 

		@throws com::sun::star::IllegalArgumentException
		if xClipboard is not a valid clipboard.

		@throws com::sun::star::container::ElementExistsException
		if a clipboard with the name of xClipboard already exists.
    */
    void addClipboard( [in] XClipboard xClipboard )
		raises ( com::sun::star::lang::IllegalArgumentException,
		         com::sun::star::container::ElementExistException );

	//-------------------------------------------------------------------------
	/** Removes the clipboard with the specified name from the list.

		@param aName 
		The name of the clipboard to remove.
    */
    void removeClipboard( [in] string aName );

	//-------------------------------------------------------------------------
	/** Get a list of a managed clipboards.

		@returns 
		A sequence of the names of all available clipboards.
     */
	sequence < string > listClipboardNames();
};

//=============================================================================

}; }; }; }; };

#endif
