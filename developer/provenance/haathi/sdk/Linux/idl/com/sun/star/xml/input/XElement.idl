/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#if ! defined INCLUDED__com_sun_star_xml_input_XElement_idl__
#define INCLUDED__com_sun_star_xml_input_XElement_idl__

#include <com/sun/star/xml/input/XAttributes.idl>
#include <com/sun/star/xml/sax/SAXException.idl>


module com { module sun { module star { module xml { module input {

/** Capsule around an XML element.

    @internal
*/
interface XElement : com::sun::star::uno::XInterface
{
    /** Gets the parent context.
        
        @return
                parent context
    */
    XElement getParent();
    
    /** Gets the localname of this element.
        
        @return
                localname of this element
    */
    string getLocalName();

    /** Gets the namespace uid of this element.

        @return
                namespace uid of this element
    */
    long getUid();

    /** Gets the attributes of this element.
        
        @return
                attributes of this element
    */
    XAttributes getAttributes();
    
    /** Called upon each occuring child element.
        
        @param uid
               namespace uid of element
        @param localName
               localname of element
        @param xAttributes
               attributes of element
        @return
                child import context
    */
    XElement startChildElement(
        [in] long uid, [in] string localName, [in] XAttributes xAttributes )
        raises (com::sun::star::xml::sax::SAXException);
    
    /** Called upon retrieval of characters.
        
        @param chars
               characters
    */
    void characters( [in] string chars )
        raises (com::sun::star::xml::sax::SAXException);
    
    /** Receives notification of white space that can be ignored.

        @param whitespace
               white space characters
    */
    void ignorableWhitespace( [in] string whitespace )
        raises (com::sun::star::xml::sax::SAXException);

    /** Receives notification of a processing instruction.

        @param target
               target
        @param data
               data
    */
    void processingInstruction(
        [in] string target, [in] string data )
        raises (com::sun::star::xml::sax::SAXException);
    
    /** Receives notification of element closing.
     */
    void endElement()
        raises (com::sun::star::xml::sax::SAXException);
};

}; }; }; }; };

#endif
