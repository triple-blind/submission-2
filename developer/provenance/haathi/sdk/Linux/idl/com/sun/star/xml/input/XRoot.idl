/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#if ! defined INCLUDED__com_sun_star_xml_input_XRoot_idl__
#define INCLUDED__com_sun_star_xml_input_XRoot_idl__

#include <com/sun/star/xml/input/XNamespaceMapping.idl>
#include <com/sun/star/xml/input/XElement.idl>
#include <com/sun/star/xml/input/XAttributes.idl>
#include <com/sun/star/xml/sax/SAXException.idl>
#include <com/sun/star/xml/sax/XLocator.idl>


module com { module sun { module star { module xml { module input {

/** Root interface being passed to SaxDocumentHandler service upon
    instantiation.
    
    @internal
*/
interface XRoot : com::sun::star::uno::XInterface
{
    /** Receives notification of the beginning of a document.
         
         @param xMapping
                mapping to obtain ids out of XML namespace URIs
                and vice versa
    */
    void startDocument(
        [in] XNamespaceMapping xMapping )
        raises (com::sun::star::xml::sax::SAXException);
    
    /** Receives notification of the end of a document.
     */
    void endDocument()
        raises (com::sun::star::xml::sax::SAXException);
    
    /** Receives notification of a processing instruction.

        @param target
               target
        @param data
               data
    */
    void processingInstruction(
        [in] string target, [in] string data )
        raises (com::sun::star::xml::sax::SAXException);
    
    /** Receives an object for locating the origin of SAX document events.

        @param locator
               locator
    */
    void setDocumentLocator(
        [in] com::sun::star::xml::sax::XLocator locator )
        raises (com::sun::star::xml::sax::SAXException);

    /** Called upon root element.

         @param uid
                namespace uid of element
         @param localName
                localname of element
         @param xAattributes
                attributes of element
     */
    XElement startRootElement(
        [in] long uid, [in] string localName, [in] XAttributes xAttributes )
        raises (com::sun::star::xml::sax::SAXException);
};

}; }; }; }; };

#endif
