/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_form_component_DatabaseFormattedField_idl__ 
#define __com_sun_star_form_component_DatabaseFormattedField_idl__ 
 
#ifndef __com_sun_star_form_component_FormattedField_idl__ 
#include <com/sun/star/form/component/FormattedField.idl> 
#endif 
 
#ifndef __com_sun_star_form_DataAwareControlModel_idl__ 
#include <com/sun/star/form/DataAwareControlModel.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module form {  module component {  
 
//============================================================================= 
 
/** This service specifies a formatted field model which is data-aware, and can be bound to a database field.
 */
published service DatabaseFormattedField
{ 
	service com::sun::star::form::component::FormattedField; 
	
	service com::sun::star::form::DataAwareControlModel; 
 
	//------------------------------------------------------------------------- 
	 
	/** determines if an empty text should be treated as a <NULL/> value.

		<p>When the user enters text into a formatted field control, and after this, the control
		content is to be committed into the database field the control is bound to,
		a decision must be made how to deal with empty strings.<br/>
		This is controlled by <member>ConvertEmptyToNull</member>.</p>

		<p>If the property is set to <TRUE/>, and an empty text is to be commited, this is
		converted into <NULL/>, else it is written as empty string.</p>
	 */
	[property] boolean ConvertEmptyToNull; 
 
}; 
 
//============================================================================= 
 
}; }; }; }; };  
 
#endif 
