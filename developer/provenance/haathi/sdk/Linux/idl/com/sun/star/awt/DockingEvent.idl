/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_DockingEvent_idl__ 
#define __com_sun_star_awt_DockingEvent_idl__ 
 
#ifndef __com_sun_star_lang_EventObject_idl__ 
#include <com/sun/star/lang/EventObject.idl> 
#endif 
 
#ifndef __com_sun_star_awt_Rectangle_idl__
#include <com/sun/star/awt/Rectangle.idl>
#endif
#ifndef __com_sun_star_awt_Point_idl__
#include <com/sun/star/awt/Point.idl>
#endif
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 
 
/** specifies a docking event.
 */
struct DockingEvent: com::sun::star::lang::EventObject
{ 
	//------------------------------------------------------------------------- 
	 
	/** specifies the current tracking rectangle
	 */
	com::sun::star::awt::Rectangle TrackingRectangle; 
 
	//------------------------------------------------------------------------- 
	 
	/** specifies the current mouse position in frame coordinates
	 */
	com::sun::star::awt::Point MousePos; 
 
	//------------------------------------------------------------------------- 
	 
	/** specifies if the layout should be adjusted immediately
	 */
	boolean bLiveMode; 
 
	//------------------------------------------------------------------------- 
	 
	/** specifies if the docking procedure is interactive which means that
        the user is currently dragging the window to a new position
        if this member is <FALSE/> the window will be docked or undocked immediately
        using the returned tracking rectangle
	 */
	boolean bInteractive;
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
