/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_rendering_XParametricPolyPolygon2D_idl__
#define __com_sun_star_rendering_XParametricPolyPolygon2D_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif
#ifndef __com_sun_star_geometry_RealPoint2D_idl__
#include <com/sun/star/geometry/RealPoint2D.idl>
#endif
#ifndef __com_sun_star_rendering_XPolyPolygon2D_idl__
#include <com/sun/star/rendering/XPolyPolygon2D.idl>
#endif
#ifndef __com_sun_star_rendering_XColorSpace_idl__
#include <com/sun/star/rendering/XColorSpace.idl>
#endif

module com { module sun { module star { module rendering {

/** Interface to a dynamic poly-polygon generator, that generates
    poly-polygons depending on a given parameter value.<p>

    The returned poly-polygon should normally be contained in the
    [0,1]x[0,1] rectangle. At least that is the dimension expected at
    other places. e.g. <type>Texture</type>.
 */
published interface XParametricPolyPolygon2D : ::com::sun::star::uno::XInterface
{
    /** Query the polygonal outline at the specified value.

        The returned outline should be clipped to the [0,1]x[0,1]
        rectangle.

        @param t
        Parameter value in the range [0,1]. During painting, this
        range is sweeped through starting from 0. When using such a
        parametric polypolygon for gradients, the area covered by the
        returned XPolyPolygon2D should be monotonically decreasing
        with t (unless singularities in e.g. the resulting gradient
        are desired).
     */
    XPolyPolygon2D                  getOutline( [in] double t )
        raises (com::sun::star::lang::IllegalArgumentException);

    //-------------------------------------------------------------------------

    /** Query the color value for the polygonal area at the specified
        parameter value.

        @param t
        Parameter value in the range [0,1]. During painting, this
        range is swept through starting from 0.
     */
    sequence<ColorComponent>    getColor( [in] double t )
        raises (com::sun::star::lang::IllegalArgumentException);

    //-------------------------------------------------------------------------

    /** Query the color for a dedicated point in the plane.

        @param point
        The permissible parameter range for point is [0,1]x[0,1]
     */
    sequence<ColorComponent>	getPointColor( [in] ::com::sun::star::geometry::RealPoint2D point )
        raises (com::sun::star::lang::IllegalArgumentException);

    //-------------------------------------------------------------------------

    /** Query the color space employed by this object

        @return the color space the colors generated by this object
        are to be interpreted in.
     */
    XColorSpace					getColorSpace();

};

}; }; }; };

#endif
