/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_datatransfer_XTransferDataInfo_idl__
#define __com_sun_star_datatransfer_XTransferDataInfo_idl__

#ifndef __com_sun_star_datatransfer_DataFlavor_idl__
#include <com/sun/star/datatransfer/DataFlavor.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer {

//=============================================================================
/** This interface provides direct access to the data in all data flavors. It can
    be used by the clipboard implementation to optimize data transport on
	flush operations.

    @see com::sun::star::datatransfer::XTransferable
*/

published interface XTransferDataAccess: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** To query for the summarized data size in bytes of a sequence of <type>DataFlavor</type>.

		@param aFlavorList
		A squence of requested <type>DataFlavor</type>. 
		<p>An unsupported <type>DataFlavor</type> will be ignored.</p>

		@returns
		The number of bytes of the transfer data in the specified sequence of <type>DataFlavor</type>.
	*/
	hyper queryDataSize( [in] sequence < DataFlavor > aFlavorList );

	//-------------------------------------------------------------------------
	/** To get all the data of a sequence of <type>DataFlavor</type>.

		@param aFlavorList
		The sequence of requested <type>DataFlavor</type>. 
		<p>An unsupported <type>DataFlavor</type> will be ignored.</p>

		@returns
		The data in the requested <type>DataFlavor</type>. 
		<p>For unsupported <type>DataFlavor</type> an
		empty any will be returned.</p>
 	*/
	sequence < any > getData( [in] sequence < DataFlavor > aFlavorList );
};

//=============================================================================

}; }; }; }; 

#endif
