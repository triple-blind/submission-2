/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_linguistic2_XSpellChecker_idl__
#define __com_sun_star_linguistic2_XSpellChecker_idl__

#ifndef __com_sun_star_linguistic2_XSupportedLocales_idl__
#include <com/sun/star/linguistic2/XSupportedLocales.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_linguistic2_XDictionaryList_idl__
#include <com/sun/star/linguistic2/XDictionaryList.idl>
#endif

#ifndef __com_sun_star_linguistic2_XSpellAlternatives_idl__
#include <com/sun/star/linguistic2/XSpellAlternatives.idl>
#endif

#ifndef _COM_SUN_STAR_BEANS_PROPERTYVALUES_idl_
#include <com/sun/star/beans/PropertyValues.idl>
#endif


//=============================================================================

module com { module sun { module star { module linguistic2 {

//=============================================================================
/** This interface allows for spellchecking.

	<P>It is possible to simply check if a word, in a specified language,
	is correct or additionally, if it was misspelled, some proposals
	how it might be correctly written.</P>

    @see    <type scope="com::sun::star::linguistic2">XSupportedLocales</type>
*/
published interface XSpellChecker : com::sun::star::linguistic2::XSupportedLocales
{
	//-------------------------------------------------------------------------
	/** checks if a word is spelled correctly in a given language.

		@returns
			<TRUE/> if the word is spelled correctly using
	 		the specified language, <FALSE/> otherwise.

		@param	aWord
			the word to be checked.

		@param aLocale
			the Locale (language) to be used.
			If the Locale is empty, the word is spelled correctly by
			definition.

			<P>If <var>aLocale</var> is not supported an
			IllegalArgumentException exception is raised.</P>

		@param aProperties
			provides property values to be used for this function call only.
			It is usually empty in order to use the default values supplied with
			the property set.

        @see    <type scope="com::sun::star::lang">Locale</type>
	*/
	boolean isValid(
			[in] string aWord,
			[in] com::sun::star::lang::Locale aLocale,
			[in] com::sun::star::beans::PropertyValues aProperties )
		raises( com::sun::star::lang::IllegalArgumentException );

	//-------------------------------------------------------------------------
	/** This method checks if a word is spelled correctly in a given
		language.

		@returns
			<NULL/> if <var>aWord</var> is spelled correctly using
	 		<var>aLocale</var>. Otherwise, an XSpellAlternatives
	 		object with information about the reason of failure and, if available,
	 		proposals for spelling alternatives will be returned.

		@param	aWord
			the word to be checked.

		@param aLocale
			the language to be used.

			<P>If the language is not supported an IllegalArgumentException exception is raised.

		@param aProperties
			provides property values to be used for this function call only.
			It is usually empty in order to use the default values supplied with
			the property set.
		exception is raised.</P>

        @see    <type scope="com::sun::star::linguistic2">XSpellAlternatives</type>
        @see    <type scope="com::sun::star::lang">Locale</type>
	*/
	com::sun::star::linguistic2::XSpellAlternatives spell(
			[in] string aWord,
			[in] com::sun::star::lang::Locale aLocale,
			[in] com::sun::star::beans::PropertyValues aProperties )
		raises( com::sun::star::lang::IllegalArgumentException );

};

//=============================================================================

}; }; }; };

#endif

