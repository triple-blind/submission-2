/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_text_XRubySelection_idl__
#define __com_sun_star_text_XRubySelection_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_beans_PropertyValues_idl__
#include <com/sun/star/beans/PropertyValues.idl>
#endif



//=============================================================================

 module com {  module sun {  module star {  module text {

//=============================================================================

/** This interface enables the object to handle list of ruby lines (aka Furigana lines).

 */
published interface XRubySelection : com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** returns a sequence of ruby elements.
	<p>Each element contains at least a string that contains the selected text and the ruby text.
		Additional parameters can be the ruby adjustment, the name of a character style.</p>
			@returns
				a sequence of ruby properties
			@param Automatic
				if Automatic is set the selection is parsed for words and applied ruby attributes
	 */
	sequence<com::sun::star::beans::PropertyValues>  getRubyList( [in] boolean Automatic );
	//-------------------------------------------------------------------------
	/** applies the RubyList to the current selection. The number of elements must be
		equal to the number of elements that are returned by getRubyList. Automatic must be
		set equally, too.
	 */
	void setRubyList( [in] sequence<com::sun::star::beans::PropertyValues > RubyList, [in] boolean Automatic );

};

//=============================================================================

}; }; }; };

#endif


