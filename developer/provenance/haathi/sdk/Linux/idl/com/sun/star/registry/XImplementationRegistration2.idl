/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_registry_XImplementationRegistration2_idl__ 
#define __com_sun_star_registry_XImplementationRegistration2_idl__ 
 
#ifndef __com_sun_star_registry_XImplementationRegistration_idl__ 
#include <com/sun/star/registry/XImplementationRegistration.idl> 
#endif 
//============================================================================= 
 
 module com {  module sun {  module star {  module registry {  
 
//============================================================================= 
 
/** extends the functionality of <type scope="com::sun::star::registry">XImplementationRegistration</type>. It can be useful to specify a complete Url to a component but register the components name only (library or jar name).

    @since OOo 2.4
 */
interface XImplementationRegistration2: com::sun::star::registry::XImplementationRegistration
{ 
	//------------------------------------------------------------------------- 
	 
	/** registers a component which provides one or more implementations.
		
		@param aLocation 
			specifies the location of the component with the URL.  

        @param aRegisteredLocation
            the URL with which the component is actually registered.
			  
		@param xReg 
			specifies the registry where the component should be installed.
			If it is a NULL interface, then the component will be installed
			in the system registry (if this feature is supported).
	 */
	void registerImplementationWithLocation( [in] string aImplementationLoader, 
			 [in] string aLocation, [in] string aRegisteredLocation,
			 [in] com::sun::star::registry::XSimpleRegistry xReg ) 
			raises( com::sun::star::registry::CannotRegisterImplementationException ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
