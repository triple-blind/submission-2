/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sheet_XCalculatable_idl__
#define __com_sun_star_sheet_XCalculatable_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** represents something that can recalculate.
 */
published interface XCalculatable: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------

	/** recalculates all dirty cells.

		<p>This calculates all formula cells which have not yet been
		calculated after their precedents have changed.</p>
	 */
	void calculate();

	//-------------------------------------------------------------------------

	/** recalculates all cells.
	 */
	void calculateAll();

	//-------------------------------------------------------------------------

	/** returns whether automatic calculation is enabled.

		<p>With automatic calculation, each formula cell is recalculated
		whenever its value is needed after its precedents have changed.
		The value is needed if the cell is displayed or used in another
		calculation.</p>

		@returns
			<TRUE/>, if automatic calculation is enabled.
	 */
	boolean isAutomaticCalculationEnabled();

	//-------------------------------------------------------------------------

	/** enables automatic calculation.

		<p>With automatic calculation, each formula cell is recalculated
		whenever its value is needed after its precedents have changed.
		The value is needed if the cell is displayed or used in another
		calculation.</p>

		@param bEnabled
			<TRUE/> to enable automatic calculation, <FALSE/> to disable.
	 */
	[oneway] void enableAutomaticCalculation( [in] boolean bEnabled );

};

//=============================================================================

}; }; }; };

#endif

