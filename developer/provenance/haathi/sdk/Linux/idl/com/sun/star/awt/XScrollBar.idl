/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_XScrollBar_idl__ 
#define __com_sun_star_awt_XScrollBar_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_awt_XAdjustmentListener_idl__ 
#include <com/sun/star/awt/XAdjustmentListener.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 
 
/** gives access to the value and settings of a scroll bar and makes it possible
	to register adjustment event listeners.
 */
published interface XScrollBar: com::sun::star::uno::XInterface
{ 
	//------------------------------------------------------------------------- 
		
	/** registers an adjustment event listener.
	 */
	[oneway] void addAdjustmentListener( [in] com::sun::star::awt::XAdjustmentListener l ); 
 
	//------------------------------------------------------------------------- 
		
	/** unregisters an adjustment event listener.
	 */
	[oneway] void removeAdjustmentListener( [in] com::sun::star::awt::XAdjustmentListener l ); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the scroll value of the scroll bar.
	 */
	[oneway] void setValue( [in] long n ); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the scroll value, visible area and maximum scroll value
        of the scoll bar.
	 */
	[oneway] void setValues( [in] long nValue, 
			 [in] long nVisible, 
			 [in] long nMax ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the current scroll value of the scroll bar.
	 */
	long getValue(); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the maximum scroll value of the scroll bar.
	 */
	[oneway] void setMaximum( [in] long n ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the currently set maximum scroll value of the scroll bar.
	 */
	long getMaximum(); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the increment for a single line move.
	 */
	[oneway] void setLineIncrement( [in] long n ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the currently set increment for a single line move.
	 */
	long getLineIncrement(); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the increment for a block move.
	 */
	[oneway] void setBlockIncrement( [in] long n ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the currently set increment for a block move.
	 */
	long getBlockIncrement(); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the visible size of the scroll bar.
	 */
	[oneway] void setVisibleSize( [in] long n ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the currently visible size of the scroll bar.
	 */
	long getVisibleSize(); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the <type>ScrollBarOrientation</type> of the scroll bar.
	 */
	[oneway] void setOrientation( [in] long n ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the currently set <type>ScrollBarOrientation</type> of the
        scroll bar.
	 */
	long getOrientation(); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
