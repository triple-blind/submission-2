/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_frame_XInterceptorInfo_idl__
#define __com_sun_star_frame_XInterceptorInfo_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module frame {

//=============================================================================

/** makes it possible to get information about a registered interceptor and is used by
    frame interceptor mechanism to perform interception.

    <p>
    Frame can call right interceptor directly without calling all of registered ones.
	Use it as an additional interface to <type>XDispatchProviderInterceptor</type>.
    If any interceptor in list doesn't support this interface - these mechanism will be broken
    and normal list of master-slave interceptor objects will be used from top to the bottom.
    </p>

    @see XDispatchProviderInterception
    @see XDispatchProviderInterceptor
 */
published interface XInterceptorInfo: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** returns the URL list for interception.

        <p>
        Wildcards inside the URL's are allowed to register the interceptor for
        URL's too, which can have optional arguments (e.g. "..#.." or "..?..").
        </p>

        @return
            a list of URL's wich are handled by this interceptor
	 */
	sequence< string > getInterceptedURLs();
};

//=============================================================================

}; }; }; };

#endif
