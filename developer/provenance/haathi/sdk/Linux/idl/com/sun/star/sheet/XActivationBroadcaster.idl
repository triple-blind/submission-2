/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sheet_XActivationBroadcaster_idl__
#define __com_sun_star_sheet_XActivationBroadcaster_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_sheet_XActivationEventListener_idl__
#include <com/sun/star/sheet/XActivationEventListener.idl>
#endif


//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides methods to add and remove XActivationEventListener

	@since OOo 2.0

 */
published interface XActivationBroadcaster: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------

	/** allows a component supporting the
        <type>XActivationEventListener</type> interface to
        register as listener.  The component will be notified with a
        <type>ActivationEvent</type> every time the active sheet
        changes.</p>

        @param aListener
        	the component that is to be added as listener

        @see XActivationEventListener
        @see ActivationEvent
	 */
	void addActivationEventListener([in] com::sun::star::sheet::XActivationEventListener aListener);

	//-------------------------------------------------------------------------

	/** removes a previously registered listener.

        @param aListener
        	the component that is to be removed
	 */
	void removeActivationEventListener( [in] com::sun::star::sheet::XActivationEventListener aListener );

};

//=============================================================================

}; }; }; };

#endif

