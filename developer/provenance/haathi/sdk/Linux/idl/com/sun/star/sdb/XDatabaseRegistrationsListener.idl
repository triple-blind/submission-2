/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sdb_XDatabaseRegistrationsListener_idl__
#define __com_sun_star_sdb_XDatabaseRegistrationsListener_idl__

#include <com/sun/star/lang/XEventListener.idl>
#include <com/sun/star/sdb/DatabaseRegistrationEvent.idl>

//=============================================================================

module com { module sun { module star { module sdb {

//=============================================================================

/** implemented by components which want to be notified of changes in the application-wide registered
    databases.

    @see XDatabaseRegistrations

    @since OOo 3.3
 */
interface XDatabaseRegistrationsListener : ::com::sun::star::lang::XEventListener
{
    /** called when a database has been registered
    */
    void    registeredDatabaseLocation( [in] DatabaseRegistrationEvent Event );

    /** called when a database registration has been revoked
    */
    void    revokedDatabaseLocation( [in] DatabaseRegistrationEvent Event );

    /** called when a the location of a registered database changed

        <p>Note that this talks about registration data only. That is, if the actual file denoted by the database
        registration is moved, this is in no way monitored or reported. Only (successful) calls to
        <member>XDatabaseRegistrations::changeDatabaseLocation</member> are reported here.</p>
    */
    void    changedDatabaseLocation( [in] DatabaseRegistrationEvent Event );
};

//=============================================================================

}; }; }; };

//=============================================================================

#endif
