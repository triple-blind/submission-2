/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_ucb_XParameterizedContentProvider_idl__
#define __com_sun_star_ucb_XParameterizedContentProvider_idl__

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_ucb_XContentProvider_idl__
#include <com/sun/star/ucb/XContentProvider.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif


//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** Register specially adjusted instances of content providers on URL
	templates and supplementary arguments.

	@version 1.0
	@author Stephan Bergmann
*/
published interface XParameterizedContentProvider: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** Register a content provider on a URL template and supplementary
		arguments.

		@param Template  A URL template.  If the input is malformed or too
		complex, an <type scope="com::sun::star::lang">IllegalArgumentException</type> may be raised.

		@param Arguments  Any supplementary arguments required by this
		<type>XContentProvider</type>, represented as a single string.  If the
		input is malformed, an 
        <type scope="com::sun::star::lang">IllegalArgumentException</type>
        may be raised.

		@param ReplaceExisting  If true, and if the given Template conflicts
		with an already registered instance, the old registration is replaced
		by the new one.  If false, and if the given Template conflicts with an
		already registered instance, the new registration is not performed,
		and null is returned.

		@return  Either this <type>XContentProvider</type>, or another,
		specially adjusted version of this <type>XContentProvider</type> (this
		flexibility allows for different implementation strategies), or null
		if the given Template conflicts with an already registered instance
		and ReplaceExisting is false.  Note that the returned
		<type>XContentProvider</type> must still be registered at the content
		provider manager!
	*/
	com::sun::star::ucb::XContentProvider
	registerInstance([in] string Template,
					 [in] string Arguments,
					 [in] boolean ReplaceExisting)
		raises (com::sun::star::lang::IllegalArgumentException);

	//-------------------------------------------------------------------------
	/** Deregisters a content provider.

		@param Template  A URL template.  If the input is malformed or too
		complex, an IllegalArgumentException may be raised.

		@param Arguments  Any supplementary arguments required by this
		<type>XContentProvider</type>, represented as a single string.  If the
		input is malformed, an
        <type scope="com::sun::star::lang">IllegalArgumentException</type>
        may be raised.

		@return  Either this <type>XContentProvider</type>, or another,
		specially adjusted version of this <type>XContentProvider</type> (this
		flexibility allows for different implementation strategies), or null
		if no instance is registered for the given Template.  Note that the
		returned <type>XContentProvider</type> must still be deregistered at
		the content provider manager!
	*/
	com::sun::star::ucb::XContentProvider
	deregisterInstance([in] string Template,
					   [in] string Arguments)
		raises (com::sun::star::lang::IllegalArgumentException);
};

//=============================================================================

}; }; }; };

#endif
