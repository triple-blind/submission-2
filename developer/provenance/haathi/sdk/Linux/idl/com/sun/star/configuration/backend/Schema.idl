/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_configuration_backend_Schema_idl__
#define __com_sun_star_configuration_backend_Schema_idl__

#ifndef __com_sun_star_configuration_backend_XSchema_idl__
#include <com/sun/star/configuration/backend/XSchema.idl>
#endif

//==============================================================================

module com { module sun { module star { module configuration { module backend {

//==============================================================================

/**
  provides read only access to a configuration component schema. 
  
  <p>A component is a set of hierarchically organised and semantically
  related configuration settings, e.g StarWriter settings.
  </p>
  <p>A component schema contains two separate sections, one which
  describes the templates to be used in the dynamic containers (sets) of
  the component and one which describes the component's data structure.
  </p>

  @see com::sun::star::configuration::backend::Layer
        Service providing access to individual 
        configuration data for an entity.

  @since OOo 1.1.2
  */
published service Schema
{
    //--------------------------------------------------------------------------

    /**
      handles access to the schema data for a component.
      <p>The data can be read either in its entirety (templates and component
      description) or each of its parts can be accessed.
      </p>
      */
    interface XSchema ;

    //--------------------------------------------------------------------------
    
    /**
      The URL of the layer data.

      @since OOo 2.0
      */
    [property,optional,readonly] string URL ;

    //--------------------------------------------------------------------------
} ;

//==============================================================================

} ; } ; } ; } ; } ;

#endif

