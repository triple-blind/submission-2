/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_tree_XTreeDataModel_idl__
#define __com_sun_star_awt_tree_XTreeDataModel_idl__

#ifndef __com_sun_star_awt_tree_XTreeDataModelListener_idl__
#include <com/sun/star/awt/tree/XTreeDataModelListener.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_lang_XComponent_idl__
#include <com/sun/star/lang/XComponent.idl>
#endif

#ifndef __com_sun_star_awt_tree_XTreeNode_idl__
#include <com/sun/star/awt/tree/XTreeNode.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module awt {  module tree {

//=============================================================================

/** An instance of this interface is used by the <type>TreeControl</type> to
    retrieve the hierarchical outline data that is displayed in the actual control.

    <p>If you implement your own <type>XTreeDataModel</type> you need to notify registered
    <type>XTreeDataModelListener</type> if your model changes after the control is created.
    If this is not done correctly the <type>TreeControl</type> will not update the data properly.</p>

    If you do not need your own model implementation, you can also use the <type>MutableTreeDataModel</type>.
*/
published interface XTreeDataModel : ::com::sun::star::lang::XComponent
{
    /** Returns the root of the tree.
        <p>Returns null only if the tree has no nodes.

        @returns
            the root of the tree
    */
    XTreeNode getRoot();

    /** Adds a listener for the <type>TreeDataModelEvent</type> posted after the tree changes.

        @param Listener
            the listener to add.
    */
    void addTreeDataModelListener( [in] XTreeDataModelListener Listener );


    /** Removes a listener previously added with <method>addTreeDataModelListener()</method>.

        @param Listener
            the listener to remove.
    */
    void removeTreeDataModelListener( [in] XTreeDataModelListener Listener );

};

//=============================================================================

}; }; }; }; };

#endif
