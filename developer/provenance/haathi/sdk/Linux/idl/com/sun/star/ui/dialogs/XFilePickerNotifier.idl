/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_ui_dialogs_XFilePickerNotifier_idl__
#define __com_sun_star_ui_dialogs_XFilePickerNotifier_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_ui_dialogs_XFilePickerListener_idl__
#include <com/sun/star/ui/dialogs/XFilePickerListener.idl>
#endif

//=============================================================================

module com { module sun { module star { module ui { module dialogs {

//=============================================================================

//=============================================================================
/** Interface to be implemented in order to support listener management.
*/
published interface XFilePickerNotifier: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** Interface for clients to register as XFilePickerListener

		@param xListener
		The <type>XFilePickerListener</type> interface of the listener that
		wants to receive events of type <type>FilePickerEvent</type>.
		<p>Invalid interfaces or NULL values will be ignored.</p>		
	*/
	[oneway] void addFilePickerListener( [in] XFilePickerListener xListener );

	//-------------------------------------------------------------------------
	/** Interface for clients to unregister as XFilePickerListener.

		@param xListener
		The <type>XFilePickerListener</type> interface of the listener that
		wants to receive events of type <type>FilePickerEvent</type>.
		<p>Invalid interfaces or NULL values will be ignored.</p>
	*/
	[oneway] void removeFilePickerListener( [in] XFilePickerListener xListener );
};

//=============================================================================

}; }; }; }; };

#endif
