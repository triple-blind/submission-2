/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_ucb_XRemoteContentProviderDistributor_idl__
#define __com_sun_star_ucb_XRemoteContentProviderDistributor_idl__

#ifndef __com_sun_star_connection_ConnectionSetupException_idl__
#include <com/sun/star/connection/ConnectionSetupException.idl>
#endif

#ifndef __com_sun_star_connection_NoConnectException_idl__
#include <com/sun/star/connection/NoConnectException.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif


//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** Distribute a content broker to variuos
	<type>XRemoteContentProviderAcceptor</type>s.

	@version 1.0
	@author Stephan Bergmann
	@see XRemoteContentProviderAcceptor
*/
published interface XRemoteContentProviderDistributor: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** Offer the local content broker to a remote content provider acceptor.

		<p> The Uno Url is handed to the
		<type scope="com::sun::star::bridge">UnoUrlResolver</type> service,
        which is responsible for raising any of the advertised exceptions. </p>

		@param Url  A Uno Url to address the
		<type>XRemoteContentProviderAcceptor</type>.

		@param Identifier  An identifier handed to the
		<type>XRemoteContentProviderAcceptor</type>.

		@returns success indicator.  Escpecially, if there's already a
		connection to the given Url, the call will fail, no matter whether
		that connection uses the same identifier as the given one or not.
	*/
	boolean connectToRemoteAcceptor([in] string Url,
									[in] string Identifier)
		raises (com::sun::star::connection::NoConnectException,
				com::sun::star::connection::ConnectionSetupException,
				com::sun::star::lang::IllegalArgumentException);

	//-------------------------------------------------------------------------
	/** Undo the offering of the local content broker to a specific remote
		content provider acceptor.

		@param Url  A Uno Url to address the
		<type>XRemoteContentProviderAcceptor</type>.

		@returns success indicator.
	*/
	boolean disconnectFromRemoteAcceptor([in] string Url);

	//-------------------------------------------------------------------------
	/** Undo the offering of the local content broker to all remote content
		provider acceptors.
	*/
	void disconnectFromAll();
};

//=============================================================================

}; }; }; };

#endif
