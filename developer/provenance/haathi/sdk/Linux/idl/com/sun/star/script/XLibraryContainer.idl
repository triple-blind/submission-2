/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_script_XLibraryContainer_idl__ 
#define __com_sun_star_script_XLibraryContainer_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_container_XNameContainer_idl__ 
#include <com/sun/star/container/XNameContainer.idl> 
#endif 
 
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__ 
#include <com/sun/star/lang/IllegalArgumentException.idl> 
#endif 
 
#ifndef __com_sun_star_container_NoSuchElementException_idl__ 
#include <com/sun/star/container/NoSuchElementException.idl> 
#endif 
 
#ifndef __com_sun_star_container_ElementExistException_idl__ 
#include <com/sun/star/container/ElementExistException.idl> 
#endif 
 
#ifndef __com_sun_star_lang_WrappedTargetException_idl__ 
#include <com/sun/star/lang/WrappedTargetException.idl> 
#endif 
 
#ifndef __com_sun_star_container_ElementExistException_idl__ 
#include <com/sun/star/container/ElementExistException.idl> 
#endif 
#ifndef __com_sun_star_lang_WrappedTargetException_idl__ 
#include <com/sun/star/lang/WrappedTargetException.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module script {  
 
//============================================================================= 
 
/** 
	Provides access to a library system. 
 */
published interface XLibraryContainer: com::sun::star::container::XNameAccess
{ 
	/** 
		Creates a new library
	 */
	com::sun::star::container::XNameContainer createLibrary( [in] string Name ) 
		raises( com::sun::star::lang::IllegalArgumentException, 
				com::sun::star::container::ElementExistException ); 

	/** 
		Creates a link to an "external" library that then can be 
		accessed using this library manager. The format of the
		StorageURL is a matter of the implementation. If the read
		only flag is set, the linked library cannot be modified.
		In this case, the returned interface really is only an
		XNameAccess. If ReadOnly is false (and the referenced
		storage allows write access) the returned interface also
		can be a <type scope="com::sun::star::container">XNameContainer</type>.
	 */
	com::sun::star::container::XNameAccess createLibraryLink( [in] string Name, [in] string StorageURL, [in] boolean ReadOnly ) 
		raises( com::sun::star::lang::IllegalArgumentException, 
				com::sun::star::container::ElementExistException ); 

	/** removes the library item with the specified name. If the accessed 
		library item is a link only the link is removed, not the target library.
	 */
	void removeLibrary( [in] string Name ) 
			raises( com::sun::star::container::NoSuchElementException, 
					com::sun::star::lang::WrappedTargetException ); 

	/** 
		returns true if the accessed library is already loaded from
		the storage, otherwise false.
	 */
	boolean isLibraryLoaded( [in] string Name )
			raises( com::sun::star::container::NoSuchElementException ); 

	/** 
		Causes the accessed library to be loaded from its storage
		if it hasn't already been loaded.
	 */
	void loadLibrary( [in] string Name )
			raises( com::sun::star::container::NoSuchElementException, 
					com::sun::star::lang::WrappedTargetException ); 

};

//============================================================================= 
 
 
}; }; }; };  
 
#endif 
