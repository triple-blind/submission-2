/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_security_XPolicy_idl__
#define __com_sun_star_security_XPolicy_idl__
#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif


module com {  module sun {  module star {  module security {

/** Interface for getting sets of permissions of a specified user or
    the default permissions if no user is given.
    
    @see com::sun::star::security::Policy

    @since OOo 1.1.2
*/
published interface XPolicy : com::sun::star::uno::XInterface
{
    /** Gets the permissions of the specified user excluding the default permissions
        granted to all users.
        
        @param userId
               user id
        @return
               permissions of the specified user
    */
    sequence< any > getPermissions(
        [in] string userId );
    
    /** Gets the default permissions granted to all users.
        
        @return
               default permissions
    */
    sequence< any > getDefaultPermissions();
    
    /** Refreshes the policy configuration.
    */
    void refresh();
};

}; }; }; };

#endif
