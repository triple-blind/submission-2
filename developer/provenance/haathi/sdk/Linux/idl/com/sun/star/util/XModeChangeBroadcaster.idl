/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_util_XModeChangeBroadcaster_idl__
#define __com_sun_star_util_XModeChangeBroadcaster_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_lang_NoSupportException_idl__
#include <com/sun/star/lang/NoSupportException.idl>
#endif

#ifndef __com_sun_star_util_XModeChangeListener_idl__
#include <com/sun/star/util/XModeChangeListener.idl>
#endif

#ifndef __com_sun_star_util_XModeChangeApproveListener_idl__
#include <com/sun/star/util/XModeChangeApproveListener.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module util {

//=============================================================================

/** broadcasts changes in an object's internal mode.

	@see XModeSelector
	@see XModeChangeListener
	@see XModeChangeApproveListener

    @since OOo 1.1.2
*/
published interface XModeChangeBroadcaster : com::sun::star::uno::XInterface
{
	/** adds the given listener to the list of components to be notified when the mode
		changes.
	*/
    void addModeChangeListener( [in] XModeChangeListener _rxListener );

	/** removes the given listener from the list of components to be notified when the mode
		changes.
	*/
    void removeModeChangeListener( [in] XModeChangeListener _rxListener );

	/** adds the given listener to the list of components to be notified when the mode
		is about to change.

		@throws com::sun::star::lang::NoSupportException
			if the component does not allow vetoing mode changes
	*/
    void addModeChangeApproveListener( [in] XModeChangeApproveListener _rxListener )
		raises( com::sun::star::lang::NoSupportException );

	/** remove the given listener from the list of components to be notified when the mode
		is about to change.

		@throws com::sun::star::lang::NoSupportException
			if the component does not allow vetoing mode changes
	*/
    void removeModeChangeApproveListener( [in] XModeChangeApproveListener _rxListener )
		raises( com::sun::star::lang::NoSupportException );
};

//=============================================================================

}; }; }; };

#endif

