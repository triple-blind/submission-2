/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#if ! defined INCLUDED_com_sun_star_deployment_ui_PackageManagerDialog_idl
#define INCLUDED_com_sun_star_deployment_ui_PackageManagerDialog_idl

#include <com/sun/star/ui/dialogs/XAsynchronousExecutableDialog.idl>
#include <com/sun/star/awt/XWindow.idl>


module com { module sun { module star { module deployment { module ui {

/** The <type>PackageManagerDialog</type> is used to visually manage installed
    packages of the user and shared installation as well as currently open
    documents.
    
    @since OOo 2.0
*/
service PackageManagerDialog : com::sun::star::ui::dialogs::XAsynchronousExecutableDialog
{
    /** Create a default GUI.
     */
    createDefault();
    
    /** Create a GUI using the specific parent window and focus on the
        given context.
        
        @param xParent
               parent window
        @param focussedContext
               context to be focussed
    */
    create( [in] com::sun::star::awt::XWindow xParent,
            [in] string focussedContext );

    /** Create a GUI and pass the URL of the extension which shall be installed right away.
        This constructor is intended for the case when unopkg is run as result of
        clicking an extension in a file browser, etc. The extensions will always be installed
        for the current user.

        @param extensionURL
            URL of extension
    */
     createAndInstall( [in] string extensionURL);

};

}; }; }; }; };

#endif
