/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_drawing_framework_ResourceSearchMode_idl__
#define __com_sun_star_drawing_framework_ResourceSearchMode_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_util_XCloneable_idl__
#include <com/sun/star/util/XCloneable.idl>
#endif

module com { module sun { module star { module drawing { module framework {

/** This enum specifies how a resource is bound to an anchor.  This can be
    direct or indirect.
    <p>Example: Let r:a1:a2 denote a resource r which is bound to
    anchor a1:a2 which itself is a resource a1 bound to anchor a2.
    Then r:a1:a2 is bound directly to a1:a2 and indirectly to a2.</p>
*/
published enum AnchorBindingMode
{
    DIRECT,
    INDIRECT
};

}; }; }; }; }; // ::com::sun::star::drawing::framework

#endif
