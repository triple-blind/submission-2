/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_form_component_ImageButton_idl__ 
#define __com_sun_star_form_component_ImageButton_idl__ 
 
#ifndef __com_sun_star_awt_UnoControlImageControlModel_idl__ 
#include <com/sun/star/awt/UnoControlImageControlModel.idl> 
#endif 
 
#ifndef __com_sun_star_form_FormControlModel_idl__ 
#include <com/sun/star/form/FormControlModel.idl> 
#endif 
 
#ifndef __com_sun_star_form_XApproveActionBroadcaster_idl__ 
#include <com/sun/star/form/XApproveActionBroadcaster.idl> 
#endif 
 
#ifndef __com_sun_star_form_XImageProducerSupplier_idl__ 
#include <com/sun/star/form/XImageProducerSupplier.idl> 
#endif 
 
#ifndef __com_sun_star_form_FormButtonType_idl__ 
#include <com/sun/star/form/FormButtonType.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module form {  module component { 
 
//============================================================================= 
 
/** This service specifies the control model for a clickable button which
	is represented by an image.

 	<p>The image to be displayed is determined by <member scope="com::sun::star::awt">UnoControlImageControlModel::ImageURL</member>
	property specifies the URL of an image to be displayed.</p>

	@see CommandButton
*/
published service ImageButton
{ 
	service com::sun::star::awt::UnoControlImageControlModel; 
	
	service com::sun::star::form::FormControlModel; 
 
	 
	/** supplies the caller with an <type scope="com::sun::star::awt">XImageProducer</type>.

		<p>Other components can register as <type scope="com::sun::star::awt">XImageConsumer</type>
		at this producer. Then they will be notified of any change in the image to be displayed.</p>

		<p>Whenever the <member scope="com::sun::star::awt">UnoControlImageControlModel::ImageURL</member>
		property is changed, the model loads the specified image, and sets it as image source
		at its <type scope="com::sun::star::awt">XImageProducer</type>. Then, all
		<type scope="com::sun::star::awt">XImageConsumer</type>s are notified and supplied with
		the binary data of the image.<br/>
		Usually, controls acting for an <type>ImageButton</type> model are consumers, and use the
		data stream to display the image</p>
	 */
	interface com::sun::star::form::XImageProducerSupplier; 
 
	//------------------------------------------------------------------------- 
	/** describes the action to be executed by the button when pressed.
	 */
	[property] com::sun::star::form::FormButtonType ButtonType; 

	//------------------------------------------------------------------------- 
	/** describes the frame, where to open the document specified by the TargetURL.

		<p>This property is evaluated if the button is of type URL.</p>

		<p>As always, there is a number of target names which have a special meaning, and force
		a special <type scope="com::sun::star::frame">Frame</type> to be used.</p>
	 */
	[property] string TargetFrame; 

	//------------------------------------------------------------------------- 
	/** specifies the URL, which should be opened if the button was clicked.
		
		<p>This property is evaluated if the button is of type URL.</p>

		@see com::sun::star::form::FormButtonType
	 */
	[property] string TargetURL; 
}; 
 
//============================================================================= 
 
}; }; }; }; }; 
 
#endif 
