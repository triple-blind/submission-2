/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_script_AllEventObject_idl__ 
#define __com_sun_star_script_AllEventObject_idl__ 
 
#ifndef __com_sun_star_lang_EventObject_idl__ 
#include <com/sun/star/lang/EventObject.idl> 
#endif 
 
#ifndef __com_sun_star_reflection_XIdlClass_idl__ 
#include <com/sun/star/reflection/XIdlClass.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module script {  
 
//============================================================================= 
/** This event is a wrapper for an original event in a forwarding event.
	
	<p> Usually the original event is the first argument in the 
	array of arguments. </p>
 */
published struct AllEventObject: com::sun::star::lang::EventObject
{ 
	//------------------------------------------------------------------------- 
	/** A helper value for the implementation that can be used arbitrarily.
		
		<p>This field reflects the third parameter of the method 
		<member>XAllListenerAdapterService::createAllListerAdapter</member>.
		</p>
	 */
	any Helper; 
 
	//------------------------------------------------------------------------- 
	/** contains the type of the original listener.
	 */
	type ListenerType; 
 
	//------------------------------------------------------------------------- 
	/** The original method name on which the event was fired.
	 */
	string MethodName; 
 
	//------------------------------------------------------------------------- 
	/** The arguments of the original method.
	 */
	sequence<any> Arguments; 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
