/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sheet_XSheetCondition_idl__
#define __com_sun_star_sheet_XSheetCondition_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_sheet_ConditionOperator_idl__
#include <com/sun/star/sheet/ConditionOperator.idl>
#endif

#ifndef __com_sun_star_table_CellAddress_idl__
#include <com/sun/star/table/CellAddress.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides methods to access the settings of a condition in a
	conditional format or data validation.

	@see com::sun::star::sheet::TableConditionalEntry
	@see com::sun::star::sheet::TableValidation
 */
published interface XSheetCondition: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------

	/** returns the operator in the condition.
	 */
	com::sun::star::sheet::ConditionOperator getOperator();

	//-------------------------------------------------------------------------

	/** sets the operator in the condition.
	 */
	void setOperator(
			[in] com::sun::star::sheet::ConditionOperator nOperator );

	//-------------------------------------------------------------------------

	/** returns either the comparison value, which is used in the condition,
		or the first value if two values are needed for the operator.

		@returns
			a formula, a numeric constant, or a string constant in quotes.
	 */
	string getFormula1();

	//-------------------------------------------------------------------------

	/** sets either the comparison value, which is used in the condition,
		or the first value if two values are needed for the operator.

		@param aFormula1
			a formula, a numeric constant, or a string constant in quotes.
	 */
	void setFormula1( [in] string aFormula1 );

	//-------------------------------------------------------------------------

	/** if two values are needed for the operator, this method returns
		the second one.

		@returns
			a formula, a numeric constant, or a string constant in quotes.
	 */
	string getFormula2();

	//-------------------------------------------------------------------------

	/** if two values are needed for the operator, this method sets
		the second one.

		@param aFormula2
			a formula, a numeric constant, or a string constant in quotes.
	 */
	void setFormula2( [in] string aFormula2 );

	//-------------------------------------------------------------------------

	/** returns the position in the document which is used as a base for
		relative references in the formulas.
	 */
	com::sun::star::table::CellAddress getSourcePosition();

	//-------------------------------------------------------------------------

	/** sets the position in the document which is used as a base for
		relative references in the formulas.
	 */
	void setSourcePosition(
			[in] com::sun::star::table::CellAddress aSourcePosition );

};

//=============================================================================

}; }; }; };

#endif

