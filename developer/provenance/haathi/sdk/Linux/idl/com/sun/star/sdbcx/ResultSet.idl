/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sdbcx_ResultSet_idl__ 
#define __com_sun_star_sdbcx_ResultSet_idl__ 
 
#ifndef __com_sun_star_sdbc_ResultSet_idl__ 
#include <com/sun/star/sdbc/ResultSet.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbcx { 
 
 published interface XRowLocate; 
 published interface XDeleteRows; 
 
 
/** extends the SDBC ResultSet by the possibility of bookmark positioning, cancelling
	the positioning, and updating of rows.
 */
published service ResultSet
{ 
	service com::sun::star::sdbc::ResultSet; 
 
	 
	/** could be used for cancelling the execution of SQL statements if both 
 the DBMS and the driver support aborting of navigation commands. 
 The implementation is optional.
	 */
	[optional] interface com::sun::star::util::XCancellable; 
 
	 
	/** is the interface for navigating on the result set by unique bookmarks.
	 */
	interface XRowLocate; 
 
	 
	/** is the interface for deleting more than one row, identified by it's bookmark. 
			  The implementation is optional.
	 */
	[optional] interface XDeleteRows; 
 
	 
	/** returns if the resultset supports bookmark navigation.
	 */
	[readonly, property] boolean IsBookmarkable; 
 
	 
	/** returns whether the resultset supports updating of newly inserted rows.
		This may not work, as the result set may contain automatic generated data
		which is used as key information.
	 */
	[optional, readonly, property] boolean CanUpdateInsertedRows; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
