/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_form_component_RadioButton_idl__ 
#define __com_sun_star_form_component_RadioButton_idl__ 
 
#ifndef __com_sun_star_awt_UnoControlRadioButtonModel_idl__ 
#include <com/sun/star/awt/UnoControlRadioButtonModel.idl> 
#endif 
 
#ifndef __com_sun_star_form_FormControlModel_idl__ 
#include <com/sun/star/form/FormControlModel.idl> 
#endif 
 
#ifndef __com_sun_star_form_XReset_idl__ 
#include <com/sun/star/form/XReset.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module form {  module component { 
 
//============================================================================= 
 
/** specifies a component which acts as a radio button as needed in <type>HTMLForm</type>s.

	<p>Radio buttons are controls which can be grouped together, and in every
	group, only one of the controls can be check. This means if one of them
	is checked by a user interaction, all other controls in the same group
	are automatically unchecked</p>

	<p>Like in HTML, radio buttons are grouped together if and only if they have the
	same name (see <member scope="com::sun::star::form">FormComponent::Name</member>).</p>
 */
published service RadioButton
{ 
	service com::sun::star::awt::UnoControlRadioButtonModel; 
	
	service com::sun::star::form::FormControlModel; 
	
	/** can be used to reset the control to it's default text.

		@see RadioButton::DefaultState
	*/
	interface com::sun::star::form::XReset; 
 
	//------------------------------------------------------------------------- 
	 
	/** contains a default value for the control.

		<p>This value is used when the control is initially displayed, and for resetting it.</p>

		<p> In a group of radio buttons only one button should be checked
		by default.</p>

		@see com::sun::star::awt::UnoControlRadioButtonModel::State
		@see com::sun::star::form::XReset
	 */
	[property] short DefaultState; 
 
	//------------------------------------------------------------------------- 
	 
	/** contains a reference value which is used for submission in a HTML
		form.

		<p>If the form the control belongs to is to be submitted (see
		<type scope="com::sun::star::form">XSubmit</type>), and the control is checked, this reference
		value is used for submission.</p>
	 */
	[property] string RefValue; 
 

    /** specifies a value which is to be associated with the control when it's <em>not</em>
        selected.

        <p>In various situations, the <member>RefValue</member> is associated with the control
        if and only if it is selected.<br/>
        <member>UncheckedRefValue</member> provides a extensions of this concept: If present,
        the value should be associated with the control when it is <em>not</em> selected.</p>
    */
    [optional, property] string UncheckedRefValue;
}; 
 
//============================================================================= 
 
}; }; }; }; }; 
 
#endif 
