/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_view_XMultiSelectionSupplier_idl__
#define __com_sun_star_view_XMultiSelectionSupplier_idl__

#ifndef __com_sun_star_view_XSelectionSupplier_idl__
#include <com/sun/star/view/XSelectionSupplier.idl>
#endif
#ifndef __com_sun_star_container_XEnumeration_idl__
#include <com/sun/star/container/XEnumeration.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module view {

//=============================================================================

/** makes it possible to append and remove objects from a selection.

    <p>The method <method>XSelectionSupplier::setSelection</method> for an
    instance that also supports <type>XMultiSelectionSupplier</method> should
    be implemented that it also takes either a selectable object or a sequence
    of selectable objects.</p>

    <p>Adding an object more than once to a selection should not toggle the
    selection for that object but only select it once</p>
 */
published interface XMultiSelectionSupplier: XSelectionSupplier
{
    //-------------------------------------------------------------------------

    /** adds the object or the objects represented by <var>Selection</var> to the selection
        of this <type>XMultiSelectionSupplier</type>.

        @param Selection
            either an Object that is selectable or a sequence of objects that are selectable.

        @returns
            <TRUE/>/, if <var>Selection</var> was added to the current selection.
            <FALSE/>, if <var>Selection</var> or parts of <var>Selection</var> could not be
            added to the current selection. For example, if the selection already contains
            objects that are forbidden to be selected together with <var>Selection</var>

        @throws com::sun::star::lang::IllegalArgumentException
            If <var>Selection</var> is not a selectable object for this <type>XMultiSelectionSupplier</type>.
            <p>Adding an object to the selection that is already part of the selection should not raise this exception</p>
     */
    boolean addSelection( [in] any Selection )
                raises( com::sun::star::lang::IllegalArgumentException );

    //-------------------------------------------------------------------------

    /** remove the object or objects represented by <var>Selection</var> from the
        selection of this <type>XMultiSelectionSupplier</type>.

        @param Selection
            either an Object that is selectable or a sequence of objects that are selectable.

        @returns
            <TRUE/>/, if <var>Selection</var> was added to the current selection.
            <FALSE/>, if <var>Selection</var> or parts of <var>Selection</var> could not be
            added to the current selection. For example, if the selection already contains
            objects that are forbidden to be selected together with <var>Selection</var>.

        @throws com::sun::star::lang::IllegalArgumentException
            If <var>Selection</var> is not a selectable object for this <type>XMultiSelectionSupplier</type>.
            <p>Removing an object from the selection that is not part of the selection should not raise this exception</p>
     */
    void removeSelection( [in] any Selection )
                raises( com::sun::star::lang::IllegalArgumentException );

    //-------------------------------------------------------------------------

    /** clears the selection of this <type>XMultiSelectionSupplier</type>.
    */
    void clearSelection();

    //-------------------------------------------------------------------------

    /** returns the number of selected objects of this <type>XMultiSelectionSupplier</type>.
    */
    long getSelectionCount();

    //-------------------------------------------------------------------------

    /** @returns
            a new object to enumerate the selection of this <type>XMultiSelectionSupplier</type>.
            It returns NULL if there are no objects in the selection.
     */
    com::sun::star::container::XEnumeration createSelectionEnumeration();


    /** @returns
            a new object to enumerate the selection of this <type>XMultiSelectionSupplier</type>
            in reverse order. If the order of the selected objects
            It returns NULL if there are no objects in the selection.
     */
    com::sun::star::container::XEnumeration createReverseSelectionEnumeration();

};

//=============================================================================

}; }; }; };

#endif
