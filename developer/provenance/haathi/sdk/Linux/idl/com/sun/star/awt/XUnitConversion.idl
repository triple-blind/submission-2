/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_XUnitConversion_idl__
#define __com_sun_star_awt_XUnitConversion_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_awt_Point_idl__
#include <com/sun/star/awt/Point.idl>
#endif

#ifndef __com_sun_star_awt_Size_idl__
#include <com/sun/star/awt/Size.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module awt {

//=============================================================================

/** allows converting between different measurement units

    @since OOo 3.0
 */
published interface XUnitConversion: com::sun::star::uno::XInterface
{
    /** converts the given <type>Point</type>, which is specified in pixels, into the given logical unit

        @param Point
            A given <type>Point</type> in a well known type
        @param TargetUnit
            A type from <type scope="com::sun::star::util">MeasureUnit</type> in which the Point will convert to.

        @return
            Returns a new <type>Point</type> in the TargetUnit type format.
     */
    com::sun::star::awt::Point convertPointToLogic( [in] com::sun::star::awt::Point Point, [in] short TargetUnit )
            raises ( com::sun::star::lang::IllegalArgumentException );

    /** converts the given <type>Point</type>, which is specified in the given logical unit, into pixels

        @param Point
            A given Point in the SourceUnit type
        @param SourceUnit
            The type from <type scope="com::sun::star::util">MeasureUnit</type> of the Point.

        @return
            Return a new <type>Point</type> in Pixel type format.
     */
    com::sun::star::awt::Point convertPointToPixel( [in] com::sun::star::awt::Point aPoint, [in] short SourceUnit )
            raises ( com::sun::star::lang::IllegalArgumentException );


    /** converts the given <type>Size</type>, which is specified in pixels, into the given logical unit

        @param aSize
            A given <type>Size</type> in a well known type
        @param TargetUnit
            A type from <type scope="com::sun::star::util">MeasureUnit</type> in which the Size will convert to.

        @return
            Returns a new <type>Size</type> in the TargetUnit type format.
     */
    com::sun::star::awt::Size convertSizeToLogic( [in] com::sun::star::awt::Size aSize, [in] short TargetUnit )
            raises ( com::sun::star::lang::IllegalArgumentException );

    /** converts the given <type>Size</type>, which is specified in the given logical unit, into pixels

        @param Size
            A given <type>Size</type> in a well known type
        @param TargetUnit
            The type from <type scope="com::sun::star::util">MeasureUnit</type> of the Size.

        @return
            Returns a new <type>Size</type> in the TargetUnit type format.
     */
    com::sun::star::awt::Size convertSizeToPixel( [in] com::sun::star::awt::Size aSize, [in] short SourceUnit )
            raises ( com::sun::star::lang::IllegalArgumentException );


};

//=============================================================================

}; }; }; };

#endif
