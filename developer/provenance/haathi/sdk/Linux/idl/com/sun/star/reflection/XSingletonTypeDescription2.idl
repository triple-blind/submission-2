/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_reflection_XSingletonTypeDescription2_idl__
#define __com_sun_star_reflection_XSingletonTypeDescription2_idl__

#include "com/sun/star/reflection/XSingletonTypeDescription.idl"

module com {  module sun {  module star {  module reflection {

interface XTypeDescription;

/**
   Reflects a singleton, supporting interface-based singletons.

   <p>This type supersedes <type>XSingletonTypeDescription</type>, which only
   supports obsolete, service-based singletons.</p>

   @since OOo 2.0
 */
interface XSingletonTypeDescription2: XSingletonTypeDescription {
    /**
       Returns whether this object reflects an interface-based singleton.

       @return <TRUE/> if this object reflects an interface-based singleton, and
           <FALSE/> if this object reflects an obsolete, service-based singleton
     */
    boolean isInterfaceBased();

    /**
       Returns the interface type associated with the singleton.

       @return the reflection of the interface type associated with the
           singleton (of type <type
           scope="com::sun::star::reflection">XInterfaceTypeDescription</type>
           or, in case of a typedef, <type
           scope="com::sun::star::reflection">XIndirectTypeDescription</type>),
           for an interface-based singleton; for an obsolete, service-based
           singleton, <NULL/> is returned
     */
    XTypeDescription getInterface();
};

}; }; }; };

#endif
