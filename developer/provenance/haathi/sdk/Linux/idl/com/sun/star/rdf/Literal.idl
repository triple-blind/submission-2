/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_rdf_Literal_idl__
#define __com_sun_star_rdf_Literal_idl__

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_rdf_XLiteral_idl__
#include <com/sun/star/rdf/XLiteral.idl>
#endif


//=============================================================================

module com {   module sun {   module star {   module rdf {

//=============================================================================
/** represents a literal that may occur in a RDF graph.

    @since OOo 3.0

    @see XRepository
 */
service Literal : XLiteral
{

    //-------------------------------------------------------------------------
    /** creates a plain literal RDF node.

        @param Value
            the string value of the literal
     */
    create( [in] string Value );

    //-------------------------------------------------------------------------
    /** creates a typed literal RDF node.

        @param Value
            the string value of the literal

        @param Type
            the data type of the literal
     */
    createWithType( [in] string Value, [in] XURI Type );

    //-------------------------------------------------------------------------
    /** creates a literal RDF node with a language.

        @param Value
            the string value of the literal

        @param Language
            the language of the literal
     */
    createWithLanguage( [in] string Value, [in] string Language );

    // NOTE: there is no createWithTypeAndLanguage!
};


//=============================================================================

}; }; }; };

#endif
