/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_xml_dom_events_XEventTarget_idl__
#define __com_sun_star_xml_dom_events_XEventtarget_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/xml/dom/events/XEventTarget.idl>
#include <com/sun/star/xml/dom/events/EventType.idl>
#include <com/sun/star/xml/dom/events/PhaseType.idl>
#include <com/sun/star/util/Time.idl>

module com { module sun { module star { module xml { module dom { module events {

// Introduced in DOM Level 2:
interface XEvent : com::sun::star::uno::XInterface
{

    string getType();
    
    XEventTarget getTarget();

    XEventTarget getCurrentTarget();

    PhaseType getEventPhase();

    boolean getBubbles();

    boolean getCancelable();

    com::sun::star::util::Time getTimeStamp();

    void stopPropagation();

    void preventDefault();

    void initEvent([in] string eventTypeArg, 
                   [in] boolean canBubbleArg, 
                   [in] boolean cancelableArg);    
};
}; }; }; }; }; };

#endif
