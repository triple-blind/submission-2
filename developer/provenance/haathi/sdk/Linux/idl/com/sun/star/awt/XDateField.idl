/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_XDateField_idl__ 
#define __com_sun_star_awt_XDateField_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 
 
/** gives access to the value and settings of a date field.
 */
published interface XDateField: com::sun::star::uno::XInterface
{ 
	//------------------------------------------------------------------------- 
		
	/** sets the date value which is displayed in the date field.

        <p>The date value must be specified in the format
        YYYYMMDD.</p>
	 */
	[oneway] void setDate( [in] long Date ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the date value which is currently displayed in the date field.
	 */
	long getDate(); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the minimum date value that can be entered by the user.
	 */
	[oneway] void setMin( [in] long Date ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the currently set minimum date value that can be entered by
        the user.
	 */
	long getMin(); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the maximum date value that can be entered by the user.
	 */
	[oneway] void setMax( [in] long Date ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the currently set maximum date value that can be entered by
        the user.
	 */
	long getMax(); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the first value to be set on POS1 key.
	 */
	[oneway] void setFirst( [in] long Date ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the currently set first value which is set on POS1 key.
	 */
	long getFirst(); 
 
	//------------------------------------------------------------------------- 
		
	/** sets the last value to be set on END key.
	 */
	[oneway] void setLast( [in] long Date ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns the currently set last value which is set on END key.
	 */
	long getLast(); 
 
	//------------------------------------------------------------------------- 
		
	/** determines if the long date format is to be used.
	 */
	[oneway] void setLongFormat( [in] boolean bLong ); 
 
	//------------------------------------------------------------------------- 
		
	/** determines if the long date format is currently used.
	 */
	boolean isLongFormat(); 
 
	//------------------------------------------------------------------------- 
		
	/** sets an empty value for the date.
	 */
	void setEmpty(); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns whether currently an empty value is set for the date.
	 */
	boolean isEmpty(); 
 
	//------------------------------------------------------------------------- 
		
	/** determines if the format is checked during user input.
	 */
	[oneway] void setStrictFormat( [in] boolean bStrict ); 
 
	//------------------------------------------------------------------------- 
	 
	/** returns whether the format is currently checked during user input.
	 */
	boolean isStrictFormat(); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
