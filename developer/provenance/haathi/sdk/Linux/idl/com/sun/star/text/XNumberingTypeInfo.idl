/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_text_XNumberingTypeInfo_idl__
#define __com_sun_star_text_XNumberingTypeInfo_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

module com { module sun { module star { module text {

/** provides access to the numbering types that are supported by a component.
	<p>To be able to store unknown numbering types in a file format the numbering types
 	correspond to an identifier.</p>
	@see <type scope="com::sun::star::text">NumberingRules</type>
	@see <type scope="com::sun::star::style">NumberingType</type>
	@version	1.0
	@author		<a href="mailto:oliver.specht@germany.sun.com">Oliver Specht</a>
*/
published interface XNumberingTypeInfo : com::sun::star::uno::XInterface
{
	/**	returns the numbering type values that are supported by the component.
		@see
	*/
	sequence<short> getSupportedNumberingTypes();
	/** returns the corresponding numbering type to an identifier.
	*/
	short	getNumberingType([in]string NumberingIdentifier);
	/** determins whether an identifier is supported.
	*/
	boolean	hasNumberingType([in]string NumberingIdentifier);
	/** returns the corresponding identifiert to a numbering type.
	*/
	string	getNumberingIdentifier([in]short NumberingType);
};
};};};};

#endif

