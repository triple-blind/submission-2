/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_util_XNumberFormatTypes_idl__
#define __com_sun_star_util_XNumberFormatTypes_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_lang_Locale_idl__
#include <com/sun/star/lang/Locale.idl>
#endif


//=============================================================================

 module com {  module sun {  module star {  module util {

//=============================================================================

/** represents functions to get specific, predefined number formats.
 */
published interface XNumberFormatTypes: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------

	/** @returns
				the key of the standard format for a locale.
	 */
	long getStandardIndex( [in] com::sun::star::lang::Locale nLocale );

	//-------------------------------------------------------------------------

	/** @returns
				the key of the standard format within a specified type for a given locale.

				@param nType
				the type of the number format. Must be one of the
				<type>NumberFormat</type> constants.
	 */
	long getStandardFormat( [in] short nType,
			 [in] com::sun::star::lang::Locale nLocale );

	//-------------------------------------------------------------------------

	/** @returns
				the key of a built-in format for a locale:

				@param	nIndex
				the index of the wanted number format within the formats for
				the given locale. One of the
	 			<type scope="com::sun::star::i18n">NumberFormatIndex</type>
				constants.
	 */
	long getFormatIndex( [in] short nIndex,
			 [in] com::sun::star::lang::Locale nLocale );

	//-------------------------------------------------------------------------

	/** verifies if one type of number format is compatible with another type.
	 */
	boolean isTypeCompatible( [in] short nOldType,
			 [in] short nNewType );

	//-------------------------------------------------------------------------

	/** @returns
				the index of the converted number format if successful,
				the old index if the number format could not be converted.

				@param nKey
				index of the old number format

				@param nLocale
				the locale to which the number format is converted
	 */
	long getFormatForLocale( [in] long nKey,
			 [in] com::sun::star::lang::Locale nLocale );

};

//=============================================================================

}; }; }; };

#endif

