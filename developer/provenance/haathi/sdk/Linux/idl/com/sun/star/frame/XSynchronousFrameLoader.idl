/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_frame_XSynchronousFrameLoader_idl__
#define __com_sun_star_frame_XSynchronousFrameLoader_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_frame_XFrame_idl__
#include <com/sun/star/frame/XFrame.idl>
#endif

#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module frame {

//=============================================================================
/** loads a resource into a <type>Frame</type>.

	<p>
	Unlike the <type>XFrameLoader</type> interface, this loading will be synchronous.
 	</p>

    @see XFrameLoader
 */
published interface XSynchronousFrameLoader: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** starts the loading of the specified resource into the specified <type>Frame</type>.

        @param Descriptor
            describes the ressource which should be loaded
            It use a <type scope="com::sun::star::document">MediaDescriptor</type> for that.

        @param Frame
            the target frame which should contain the new loaded component

        @return
            <TRUE/> if loading is successfully
            <br>
            <FALSE/> otherwise
	 */
    boolean load(
        [in] sequence< com::sun::star::beans::PropertyValue > Descriptor,
        [in] XFrame Frame );

	//-------------------------------------------------------------------------
	/** cancels the loading process.

        <p>
        No notifications (neither to the frame or the caller) must be notified.
        Because it's a synchronous process this cancel call can be forced by
        another thread the loader thread only. Method
        <member>XSynchronousFrameLoader::load()</member> must return <FALSE/>
        then and caller of this method <member>XSynchronousFrameLoader::cancel()</member>
        already knows the state ...
        </p>
	 */
	void cancel();
};

//=============================================================================

}; }; }; };

#endif
