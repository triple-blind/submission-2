/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_xml_crypto_xxmlsecuritycontext_idl_
#define __com_sun_star_xml_crypto_xxmlsecuritycontext_idl_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/security/SecurityInfrastructureException.idl>

#include <com/sun/star/xml/crypto/XSecurityEnvironment.idl>

module com { module sun { module star { module xml { module crypto {

/**
 * Interface of XML security context
 *
 * <p>This interface specifies a certain signature context. By signature
 * context, the signer or verifier retrieves key specification.</p>
 */
published interface XXMLSecurityContext : com::sun::star::uno::XInterface
{
    /**
     * Add personal security environment , and return the index of the added env.
     */
    long addSecurityEnvironment( [in] XSecurityEnvironment aSecurityEnvironment
    ) raises( com::sun::star::security::SecurityInfrastructureException ) ;

    /**
     * Get the number of security environments
     */
    long getSecurityEnvironmentNumber( ) ;

    /**
     * Get personal security environment
     */
    com::sun::star::xml::crypto::XSecurityEnvironment getSecurityEnvironmentByIndex([in] long index ) ;

    /**
     * An handy method to get the first personal security environment.
     * In xmlsec/nss, the first personal security environment should be the "internal slot"
     */
    com::sun::star::xml::crypto::XSecurityEnvironment getSecurityEnvironment( ) ;

    /**
     * Get the ID of the internal security environment
     */
    long getDefaultSecurityEnvironmentIndex( ) ;

    /**
     * set the ID of the internal security environment
     */
    void setDefaultSecurityEnvironmentIndex([in] long index ) ;

} ;

} ; } ; } ; } ; } ;

#endif

