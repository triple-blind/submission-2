/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sheet_TableFilterField_idl__
#define __com_sun_star_sheet_TableFilterField_idl__

#include <com/sun/star/sheet/FilterConnection.idl>
#include <com/sun/star/sheet/FilterOperator.idl>

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** describes a single condition in a filter descriptor.

	@see SheetFilterDescriptor
 */
published struct TableFilterField
{
	//-------------------------------------------------------------------------

	/** specifies how the condition is connected to the previous condition.
	 */
	FilterConnection Connection;

	//-------------------------------------------------------------------------

	/** specifies which field (column) is used for the condition.
	 */
	long Field;

	//-------------------------------------------------------------------------

	/** specifies the type of the condition.
	 */
	FilterOperator Operator;

	//-------------------------------------------------------------------------

	/** selects whether the <member>TableFilterField::NumericValue</member>
		or the <member>TableFilterField::StringValue</member> is used.
	 */
	boolean IsNumeric;

	//-------------------------------------------------------------------------

	/** specifies a numeric value for the condition.
	 */
	double NumericValue;

	//-------------------------------------------------------------------------

	/** specifies a string value for the condition.
	 */
	string StringValue;

};

//=============================================================================

}; }; }; };

#endif

