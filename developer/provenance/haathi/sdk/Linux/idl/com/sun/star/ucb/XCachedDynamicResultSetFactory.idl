/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_ucb_XCachedDynamicResultSetFactory_idl__
#define __com_sun_star_ucb_XCachedDynamicResultSetFactory_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_ucb_XDynamicResultSet_idl__
#include <com/sun/star/ucb/XDynamicResultSet.idl>
#endif

#ifndef __com_sun_star_ucb_XContentIdentifierMapping_idl__
#include <com/sun/star/ucb/XContentIdentifierMapping.idl>
#endif

//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** creates a <type>CachedDynamicResultSet</type>.

	<p>Pay attention to instanciate this helper on clientside where your want
	to read the data respectively where you have instantiated the listener to
	the	<type>XDynamicResultSet</type>.

	<p>The needed stub on server side can be created using
	<type>XCachedDynamicResultSetStubFactory</type>.
*/

published interface XCachedDynamicResultSetFactory: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/**	creates a remote optimizes <type>XDynamicResultSet</type>.

		@param SourceStub
		must be an instance of service <type>CachedDynamicResultSetStub</type>.
		It can be <NULL/>. In this case you can use the interface
		<type>XSourceInitialization</type> of the returned
		<type>CachedDynamicResultSet</type> to set the stub later.

		@param ContentIdentifierMapping
		is not required, but can be set if it is necessary to change the
		identity of the contents accessable via the interface
		<type>XContentAccess</type> of the <type>ContentResultSet</type>
		(e.g., if merging two sources of the same type).

		@returns
		an instance of service <type>CachedDynamicResultSet</type>.
	*/
	com::sun::star::ucb::XDynamicResultSet	createCachedDynamicResultSet(
		  [in] com::sun::star::ucb::XDynamicResultSet SourceStub
		, [in] com::sun::star::ucb::XContentIdentifierMapping ContentIdentifierMapping );
};

//=============================================================================

}; }; }; };

#endif
