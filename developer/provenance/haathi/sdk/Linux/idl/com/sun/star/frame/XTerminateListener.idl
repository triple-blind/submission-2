/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_frame_XTerminateListener_idl__
#define __com_sun_star_frame_XTerminateListener_idl__

#ifndef __com_sun_star_lang_XEventListener_idl__
#include <com/sun/star/lang/XEventListener.idl>
#endif

#ifndef __com_sun_star_lang_EventObject_idl__
#include <com/sun/star/lang/EventObject.idl>
#endif

#ifndef __com_sun_star_frame_TerminationVetoException_idl__
#include <com/sun/star/frame/TerminationVetoException.idl>
#endif


//=============================================================================

 module com {  module sun {  module star {  module frame {

//=============================================================================
/** has to be provided if an object wants to receive an event
    when the master environment (e.g., desktop) is terminated.

    @see XDesktop::terminate()
    @see XDesktop::addTerminateListener()
    @see XDesktop::removeTerminateListener()
 */
published interface XTerminateListener: com::sun::star::lang::XEventListener
{
	//-------------------------------------------------------------------------
	/** is called when the master environment (e.g., desktop) is about to terminate.

        <p>
        Termination can be intercepted by throwing <type>TerminationVetoException</type>.
        Interceptor will be the new owner of desktop and should call <member>XDesktop::terminate()</member>
        after finishing his own operations.
        </p>

        @param Event
            describe the source of the event (e.g., the desktop)

        @throws TerminationVetoException
            listener can disagree with this query by throwing this veto exception
	 */
    void queryTermination( [in] com::sun::star::lang::EventObject Event )
            raises( TerminationVetoException );

	//-------------------------------------------------------------------------
	/** is called when the master environment is finally terminated.
        Not veto will be accepted then.

        @param Event
            describe the source of the event (e.g., the desktop)
	 */
    void notifyTermination( [in] com::sun::star::lang::EventObject Event );
};

//=============================================================================

}; }; }; };

#endif
