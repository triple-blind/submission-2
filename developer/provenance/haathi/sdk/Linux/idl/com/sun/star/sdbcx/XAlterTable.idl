/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sdbcx_XAlterTable_idl__
#define __com_sun_star_sdbcx_XAlterTable_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_container_NoSuchElementException_idl__
#include <com/sun/star/container/NoSuchElementException.idl>
#endif

#ifndef __com_sun_star_lang_IndexOutOfBoundsException_idl__
#include <com/sun/star/lang/IndexOutOfBoundsException.idl>
#endif

 module com {  module sun {  module star {  module beans {
 published interface XPropertySet;
};};};};

#ifndef __com_sun_star_sdbc_SQLException_idl__
#include <com/sun/star/sdbc/SQLException.idl>
#endif

 module com {  module sun {  module star {  module sdbcx {

/** is used for creating and appending new objects to a specific container.
 */
published interface XAlterTable: com::sun::star::uno::XInterface
{

	/** is intended to alter an existing column identified by its name.
		This operation must be atomic, in that it is done in one step.s

        @param colName
			the column name which to alter
		@param descriptor
			the new descriptor for the new column
		@throws com::sun::star::sdbc::SQLException
			if a database access error occurs.
	*/
	void alterColumnByName([in]string colName,
		[in]com::sun::star::beans::XPropertySet descriptor)
		raises (com::sun::star::sdbc::SQLException,
				com::sun::star::container::NoSuchElementException);
	//-------------------------------------------------------------------------

	/** is intended to alter an existing column identified by its position.
		This operation must be atomic, in that it is done in one step.s

        @param index
			the position of the column to alter
		@param descriptor
			the new descriptor for the new column
		@throws com::sun::star::sdbc::SQLException
			if a database access error occurs.
		@throws com::sun::star::lang::IndexOutOfBoundsException
			if the given index does not denote an existing column.
	*/
	void alterColumnByIndex([in]long index,
		[in]com::sun::star::beans::XPropertySet descriptor) raises
		(com::sun::star::sdbc::SQLException,
	 	 com::sun::star::lang::IndexOutOfBoundsException);
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif
