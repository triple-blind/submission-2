/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_frame_DispatchStatement_idl__
#define __com_sun_star_frame_DispatchStatement_idl__

#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module frame {

//=============================================================================

// DocMerge from xml: struct com::sun::star::frame::DispatchStatement
/** represents a dispatch statement from a recorded macro

    @since OOo 1.1.2
 */
published struct DispatchStatement
{
	// DocMerge from xml: field com::sun::star::frame::DispatchStatement::aCommand
        /** specifies the dispatch command

            <p>
            That means the <var>URL</var> parameter of a corresponding <member>XDispatchProvider::queryDispatch()</member> request.
            </p>
         */
	string aCommand;

	//-------------------------------------------------------------------------


        // DocMerge from xml: field com::sun::star::frame::DispatchStatement::aTarget
        /** specifies the frame target

            <p>
            That means the <var>TargetFrameName</var> parameter of a corresponding <member>XDispatchProvider::queryDispatch()</member> request.
            </p>
         */
        string aTarget;

        //-------------------------------------------------------------------------

        // DocMerge from xml: field com::sun::star::frame::DispatchStatement::aArgs
        /** specifies the dispatch command arguments

            <p>
            That means the <var>Arguments</var> parameter of a corresponding <member>XDispatch::dispatch()</member> request.
            </p>
         */
        sequence < com::sun::star::beans::PropertyValue > aArgs;

        //-------------------------------------------------------------------------

        // DocMerge from xml: field com::sun::star::frame::DispatchStatement::nFlags
        /** specifies the optional search flags
            <p>
            That means the <var>SearchFlags</var> parameter of a corresponding <member>XDispatchProvider::queryDispatch()</member> request.
            </p>
         */
        long nFlags;

        //-------------------------------------------------------------------------

        // DocMerge from xml: field com::sun::star::frame::DispatchStatement::bIsComment
        /** specifies if this statement should be recorded as commented out or not

            @see XDispatchRecorder::recordDispatchAsComment()
         */
        boolean bIsComment;

        //-------------------------------------------------------------------------
};

//=============================================================================

}; }; }; };

#endif
