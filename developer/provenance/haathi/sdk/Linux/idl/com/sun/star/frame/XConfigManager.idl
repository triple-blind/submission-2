/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_frame_XConfigManager_idl__
#define __com_sun_star_frame_XConfigManager_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_beans_XPropertyChangeListener_idl__
#include <com/sun/star/beans/XPropertyChangeListener.idl>
#endif

//============================================================================

 module com {
  module sun {
   module star {
    module frame {

//============================================================================
/** @deprecated
 */
published interface XConfigManager: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
    /** add a listener to notify changes on well known variables
        inside the real implementation

        <p>
        Listener can update his text values by calling <member>XConfigManager::substituteVariables()</member>
        again. If <var>KeyName</var> specifies a group of keys, the listener gets one notify for each subkey.
        </p>

        @param KeyName
            specifies variable about listener will be informed on changes

        @param Listener
            listener which will be informed

        @see XConfigManager::removePropertyChangeListener()

        @deprecated
	*/
    [oneway] void addPropertyChangeListener(
        [in] string KeyName,
        [in] com::sun::star::beans::XPropertyChangeListener Listener );

	//-------------------------------------------------------------------------
    /** remove a registered listener

        @param KeyName
            specifies variable on which listener was registered

        @param Listener
            listener which will be deregistered

        @see XConfigManager::addPropertyChangeListener()

        @deprecated
	 */
    [oneway] void removePropertyChangeListener(
        [in] string KeyName,
        [in] com::sun::star::beans::XPropertyChangeListener Listener);

	//-------------------------------------------------------------------------
    /** substitute variables (place holder) inside given parameter <var>Text</var>

		<p>
        The value of <var>Text</var> is NOT changed.
        </p>

        @param Text
            original value including variables

        @return
            changed copy of <var>Text</var> without any variables
	 */
    string substituteVariables( [in] string Text );

	//-------------------------------------------------------------------------
    /** was designed for additional functionality for interface <type scope="com::sun::star::registry">XSimpleRegistry</type>
        and make no sense without that
        @deprecated
	 */
    [oneway] void flush();

}; //XConfigManager
}; //frame
}; //star
}; //sun
}; //com

#endif
