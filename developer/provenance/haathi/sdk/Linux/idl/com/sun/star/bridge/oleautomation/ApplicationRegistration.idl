/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_bridge_oleautomation_ApplicationRegistration_idl__ 
#define __com_sun_star_bridge_oleautomation_ApplicationRegistration_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module bridge { module oleautomation {  
 
//============================================================================= 
 
/** registers UNO objects as COM objects.
	<p>
	That is, COM class factories are registered with COM at runtime. The required
	EXE server is the application which deploys this service. In order to access
	the	factories by COM API functions, there need to be proper registry entries.
	This service does not provide for writing those entries.
	</p>
	<p>
	The instantiation of the registered objects can be carried out by any
	ordinary mechanism which is used in a certain language to create COM
	components. For example, <code>CreateObject</code> in Visual Basic,
	<code>CoCreateInstance</code> in C++.
	</p>
	<p>
	Currently only a factory for the service
	<type scope="com::sun::star::lang">MultiServiceFactory</type> is registered
	by this service. The CLSID is {82154420-0FBF-11d4-8313-005004526AB4} and the
	ProgId is com.sun.star.ServiceManager.
	</p>
	<p>
	<type>ApplicationRegistration</type> does not provide any particular
	interface because the UNO objects are registered while instantiating this
	service and deregistered if the implementation, which makes use of this
	service, is being released.
	</p>
 */
service ApplicationRegistration
{ 

	interface com::sun::star::uno::XInterface; 
 
}; 
 
//============================================================================= 
 
}; }; }; }; };
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
