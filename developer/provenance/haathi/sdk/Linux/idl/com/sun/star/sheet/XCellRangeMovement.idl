/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sheet_XCellRangeMovement_idl__
#define __com_sun_star_sheet_XCellRangeMovement_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_table_CellRangeAddress_idl__
#include <com/sun/star/table/CellRangeAddress.idl>
#endif

#ifndef __com_sun_star_sheet_CellInsertMode_idl__
#include <com/sun/star/sheet/CellInsertMode.idl>
#endif

#ifndef __com_sun_star_sheet_CellDeleteMode_idl__
#include <com/sun/star/sheet/CellDeleteMode.idl>
#endif

#ifndef __com_sun_star_table_CellAddress_idl__
#include <com/sun/star/table/CellAddress.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides methods for moving ranges of cells in a sheet.
 */
published interface XCellRangeMovement: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------

	/** inserts cells, moving other cells down or right.

		<p>Non-empty cells cannot be moved off the sheet.</p>

		@param aRange
			the cell range in which empty cells will be inserted.

		@param nMode
			describes how to move existing cells.
	 */
	void insertCells(
			[in] com::sun::star::table::CellRangeAddress aRange,
			[in] com::sun::star::sheet::CellInsertMode nMode );

	//-------------------------------------------------------------------------

	/** deletes cells, moving other cells up or left.

		@param aRange
			the cell range to remove.

		@param nMode
			describes how to move following cells.
	 */
	void removeRange(
			[in] com::sun::star::table::CellRangeAddress aRange,
			[in] com::sun::star::sheet::CellDeleteMode nMode );

	//-------------------------------------------------------------------------

	/** moves a cell range to another position in the document.

		<p>After copying the contents of the cell range, all cells
		will be cleared.</p>

		@param aDestination
			the address of the top left cell of the destination range.

		@param aSource
			the cell range which will be copied.
	 */
	void moveRange(
			[in] com::sun::star::table::CellAddress aDestination,
			[in] com::sun::star::table::CellRangeAddress aSource );

	//-------------------------------------------------------------------------

	/** copies a cell range to another position in the document.

		<p>The source cell range keeps unchanged.</p>

		@param aDestination
			the address of the top left cell of the destination range.

		@param aSource
			the cell range which will be copied.
	 */
	void copyRange(
			[in] com::sun::star::table::CellAddress aDestination,
			[in] com::sun::star::table::CellRangeAddress aSource );

};

//=============================================================================

}; }; }; };

#endif

