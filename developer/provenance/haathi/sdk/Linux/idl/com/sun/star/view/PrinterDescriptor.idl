/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_view_PrinterDescriptor_idl__ 
#define __com_sun_star_view_PrinterDescriptor_idl__ 
 
#ifndef __com_sun_star_view_PaperOrientation_idl__ 
#include <com/sun/star/view/PaperOrientation.idl> 
#endif 
 
#ifndef __com_sun_star_view_PaperFormat_idl__ 
#include <com/sun/star/view/PaperFormat.idl> 
#endif 
 
#ifndef __com_sun_star_awt_Size_idl__ 
#include <com/sun/star/awt/Size.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module view {  
 
//============================================================================= 
 
/** describes a printer by specifying the queue name and some settings.
	
	<p>This service may be represented by a <type scope="com::sun::star::beans" dim="[]">PropertyValue</type>.  

	@see com::sun::star::beans::PropertyValue
 */
published service PrinterDescriptor
{ 
	//------------------------------------------------------------------------- 
	/** specifies the name of the printer queue to be used.

		<p>Which printer queues are available, can be figured out with the
		system library of the used programming language/environment.
	 */
	[property] string Name; 
 
	//------------------------------------------------------------------------- 
	/** specifies the orientation of the paper.
	 */
	[property] com::sun::star::view::PaperOrientation PaperOrientation; 
 
	//------------------------------------------------------------------------- 
	/** specifies a predefined paper size or if the paper size
		is a user-defined size.

		<p>Setting this property may change the value of 
		<member>PrinterDescriptor</member>PaperSize</member.</p>
	 */
	[property] com::sun::star::view::PaperFormat PaperFormat; 
 
	//------------------------------------------------------------------------- 
	/** specifies the size of the paper in 100th mm.
		
		<p>Setting this property may change the value of
		<member>PrinterDescriptor</member>PaperFormat</member.</p>
	 */
	[property] com::sun::star::awt::Size PaperSize;
 
	//------------------------------------------------------------------------- 
	/** indicates, whether the printer is busy or not.
	 */
	[readonly, property] boolean IsBusy; 
 
	//------------------------------------------------------------------------- 
	/** indicates, whether the printer allows changes to 
		<member>PrinterDescriptor::PaperOrientation</member>.
	 */
	[readonly, property] boolean CanSetPaperOrientation; 
 
	//------------------------------------------------------------------------- 
	/** indicates, whether the printer allows changes to 
		<member>PrinterDescriptor::PaperFormat</member>.
	 */
	[readonly, property] boolean CanSetPaperFormat; 
 
	//------------------------------------------------------------------------- 
	 
	/** indicates if the printer allows changes to 
		<member>PrinterDescriptor::PaperSize</member>.
	 */
	[readonly, property] boolean CanSetPaperSize; 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
