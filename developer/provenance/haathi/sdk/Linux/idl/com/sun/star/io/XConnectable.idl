/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_io_XConnectable_idl__ 
#define __com_sun_star_io_XConnectable_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module io {  
 
//============================================================================= 
 
// DocMerge from xml: interface com::sun::star::io::XConnectable
/** makes it possible to connect data sinks and sources.
	
	<p>The predecessor-member is the element in the connection that is
	nearer to the source of the data. The successor-member is the element
	that is further away from the source of the data. (Note that this
	classification does not depend on whether the class implements
	<type>XInputStream</type> or <type>XOutputStream</type>; it only
	depends on the direction of data flow.) </p>
	<p>This interface allows generic services to navigate between
	arbitrary elements of a connection.</p>
 */
published interface XConnectable: com::sun::star::uno::XInterface
{ 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from xml: method com::sun::star::io::XConnectable::setPredecessor
	/** sets the source of the data flow for this object.
	 */
	void setPredecessor( [in] com::sun::star::io::XConnectable aPredecessor ); 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from idl: method com::sun::star::io::XConnectable::getPredecessor
	/** @returns  
			the predecessor of this object.
	 */
	com::sun::star::io::XConnectable getPredecessor(); 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from xml: method com::sun::star::io::XConnectable::setSuccessor
	/** sets the sink of the data flow for this object.
	 */
	void setSuccessor( [in] com::sun::star::io::XConnectable aSuccessor ); 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from idl: method com::sun::star::io::XConnectable::getSuccessor
	/** @returns  
			the successor of this object.
	 */
	com::sun::star::io::XConnectable getSuccessor(); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
