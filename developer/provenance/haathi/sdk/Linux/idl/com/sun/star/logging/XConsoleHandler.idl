/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __offapi_com_sun_star_logging_XConsoleHandler_idl__
#define __offapi_com_sun_star_logging_XConsoleHandler_idl__

#ifndef __com_sun_star_logging_XLogHandler_idl__
#include <com/sun/star/logging/XLogHandler.idl>
#endif

//=============================================================================

module com { module sun { module star { module logging { 

//=============================================================================

/** implemented by a log handler whose output channel is the processes console.

    <p>Note that a console handler will ignore its formatter's head and tail, since
    it cannot decided whether they should be emitted on <code>stdout</code> or <code>stderr</code>.</p>

    @since OOo 2.3
 */
interface XConsoleHandler : XLogHandler
{
    /** renotes the <type>LogLevel</type> threshold used to determine to which
        console the events should be logged.

        <p>Events with a level greater or equal to <code>Threshold</code> will be
        logged to <code>stderr</code>, all others to <code>stdout</code>.</p>

        <p>The default value for this attribute is <member>LogLevel::SEVERE</member>.</p>
    */
    [attribute] long    Threshold;
};

//=============================================================================

}; }; }; };

//=============================================================================

#endif
