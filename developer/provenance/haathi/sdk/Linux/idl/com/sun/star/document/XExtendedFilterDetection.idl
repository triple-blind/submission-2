/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_document_XExtendedFilterDetection_idl__
#define __com_sun_star_document_XExtendedFilterDetection_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl>
#endif

//============================================================================

module com { module sun { module star { module document {

//============================================================================
/** provides a "deep" filter detection

    <p>
    A "deep" filter detection means looking into the document stream to detect
    the format of it. Services of type <type>ExtendedTypeDetection</type> must support this
    interface to be called from generic load mechanism of the office for that.
    </p>

    @see DetectService
    @see TypeDetection
    @see FilterFactory
 */
published interface XExtendedFilterDetection: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
    /** controls agreement of a "flat" <type>TypeDetection</type>
        with given URL or arguments

		<p>
        Registerd services in configuration, which support this interface for different mime types,
        will be called automaticly to look into the document stream and cdecide wich format it represent.
        Add the collected information about detected documents in given <type>MediaDescriptor</type>
        <var>Descriptor</var>. The decision must be returned as any valid type name (which specifies
        the detected format) or an empty value for unknown formats.
		</p>

        @param Descriptor
            represent a <type>MediaDescriptor</type> which can be used to get/set informations
            about the detected document

        @returns
            an internal type name if format was detected successfully
            <br>
            or an empty value for an unknown document format.
	 */
    string detect( [inout] sequence< com::sun::star::beans::PropertyValue > Descriptor );

}; }; }; }; };

#endif
