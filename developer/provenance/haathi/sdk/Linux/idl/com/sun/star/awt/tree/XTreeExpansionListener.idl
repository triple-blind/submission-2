/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_tree_XTreeExpansionListener_idl__
#define __com_sun_star_awt_tree_XTreeExpansionListener_idl__

#ifndef __com_sun_star_lang_XEventListener_idl__
#include <com/sun/star/lang/XEventListener.idl>
#endif

#ifndef __com_sun_star_awt_tree_TreeExpansionEvent_idl__
#include <com/sun/star/awt/tree/TreeExpansionEvent.idl>
#endif

#ifndef __com_sun_star_awt_tree_ExpandVetoException_idl__
#include <com/sun/star/awt/tree/ExpandVetoException.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module awt {  module tree {

//=============================================================================

/** An instance of this interface can get notifications from a <type>TreeControl</type>
    when nodes are expanded or collapsed.

    @see XTreeControl::addTreeExpansionListener
    @see XTreeControl::removeTreeExpansionListener
 */
published interface XTreeExpansionListener: com::sun::star::lang::XEventListener
{
    /** Invoked when a node with children on demand is about to be expanded.

        <p>This event is invoked befor the <method>treeExpanding()</method>
        event.</p>
    */
    void requestChildNodes( [in] TreeExpansionEvent Event );

    /** Invoked whenever a node in the tree is about to be expanded.

        @throws ExpandVetoException
            to notify the calling <type>XTreeControl</type> that expanding
            <member>TreeExpansionEvent::Node</member> should faild.
    */
    void treeExpanding( [in] TreeExpansionEvent Event )
        raises ( ExpandVetoException );

    /** Invoked whenever a node in the tree is about to be collapsed.

        @throws ExpandVetoException
            to notify the calling <type>XTreeControl</type> that collapsing
            <member>TreeExpansionEvent::Node</member> should faild.
    */
    void treeCollapsing( [in] TreeExpansionEvent Event )
        raises ( ExpandVetoException );

    /** Called whenever a node in the tree has been succesfully expanded. */
    void treeExpanded( [in] TreeExpansionEvent Event );

    /** Called whenever a node in the tree has been succesfully collapsed. */
    void treeCollapsed( [in] TreeExpansionEvent Event );
};

//=============================================================================

}; }; }; }; };

#endif
