/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_container_XIndexAccess_idl__ 
#define __com_sun_star_container_XIndexAccess_idl__ 
 
#ifndef __com_sun_star_container_XElementAccess_idl__ 
#include <com/sun/star/container/XElementAccess.idl> 
#endif 
 
#ifndef __com_sun_star_lang_IndexOutOfBoundsException_idl__ 
#include <com/sun/star/lang/IndexOutOfBoundsException.idl> 
#endif 
 
#ifndef __com_sun_star_lang_WrappedTargetException_idl__ 
#include <com/sun/star/lang/WrappedTargetException.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module container {  
 
//============================================================================= 
 
/** provides access to the elements of a collection through an
	index.
	
	<p>This interface should only be used if the data structure, itself,
	is indexed.</p>
 */
published interface XIndexAccess: com::sun::star::container::XElementAccess
{ 
	//------------------------------------------------------------------------- 
	 
	/** @returns  
				the number of elements in this container.
	 */
	long getCount(); 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from idl: method com::sun::star::container::XIndexAccess::getByIndex
	/** @returns  
			the element at the specified index.
				 
		@param Index	 
			specifies the position in the array. The first index is 0. 
				 
		@throws com::sun::star::lang::IndexOutOfBoundException 
			if the index is not valid. 
				 
		@throws  com::sun::star::lang::WrappedTargetException  
			If the implementation has internal reasons for exceptions,  
			then wrap these in a <type scope="com::sun::star::lang">WrappedTargetException</type> 
			exception.
	 */
	any getByIndex( [in] long Index ) 
			raises( com::sun::star::lang::IndexOutOfBoundsException, 
					com::sun::star::lang::WrappedTargetException ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
