/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_text_XTextCursor_idl__
#define __com_sun_star_text_XTextCursor_idl__

#ifndef __com_sun_star_text_XTextRange_idl__
#include <com/sun/star/text/XTextRange.idl>
#endif


//=============================================================================

 module com {  module sun {  module star {  module text {

//=============================================================================

/** extends a text range by method to modify its position.
 */
published interface XTextCursor: com::sun::star::text::XTextRange
{
	//-------------------------------------------------------------------------

	/** sets the end of the position to the start.
	 */
	[oneway] void collapseToStart();

	//-------------------------------------------------------------------------

	/** sets the start of the position to the end.
	 */
	[oneway] void collapseToEnd();

	//-------------------------------------------------------------------------

	/** determines if the start and end positions are the same.
	 */
	boolean isCollapsed();

	//-------------------------------------------------------------------------

	/** moves the cursor the specified number of characters to the left.

        @param nCount
            the number of characters to move.

        @param bExpand
            specifies if the current selection of the cursor should 
            be expanded or not.
        
        @returns 
            <TRUE/> if the command was successfully completed.
            <FALSE/> otherwise.

            <p>Note: Even if the command was not completed successfully
            it may be completed partially. E.g. if it was required to move
            5 characters but it is only possible to move 3 <FALSE/> will
            be returned and the cursor moves only those 3 characters.<p>
	 */
	boolean goLeft( [in] short nCount,
			 [in] boolean bExpand );

	//-------------------------------------------------------------------------

	/** moves the cursor the specified number of characters to the right.

        @param nCount
            the number of characters to move.

        @param bExpand
            specifies if the current selection of the cursor should 
            be expanded or not.
        
        @returns 
            <TRUE/> if the command was successfully completed.
            <FALSE/> otherwise.

            <p>Note: Even if the command was not completed successfully
            it may be completed partially. E.g. if it was required to move
            5 characters but it is only possible to move 3 <FALSE/> will
            be returned and the cursor moves only those 3 characters.<p>
     */
	boolean goRight( [in] short nCount,
			 [in] boolean bExpand );

	//-------------------------------------------------------------------------

	/** moves the cursor to the start of the text.
	 */
	void gotoStart( [in] boolean bExpand );

	//-------------------------------------------------------------------------

	/** moves the cursor to the end of the text.
	 */
	void gotoEnd( [in] boolean bExpand );

	//-------------------------------------------------------------------------

	/** moves or expands the cursor to a specified <type>TextRange</type>.
	 */
	void gotoRange( [in] com::sun::star::text::XTextRange xRange,
			 [in] boolean bExpand );

};

//=============================================================================

}; }; }; };

#endif
