/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_configuration_backend_XBackendChangesNotifier_idl__ 
#define __com_sun_star_configuration_backend_XBackendChangesNotifier_idl__ 
 
#ifndef __com_sun_star_configuration_backend_XBackendChangesListener_idl__ 
#include <com/sun/star/configuration/backend/XBackendChangesListener.idl> 
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif  
 
//============================================================================= 
 
module com {  module sun {  module star {  module configuration {  module backend {  
 
//============================================================================= 
 
/** broadcasts changes when data from backend sources has changed.

	@see XBackendChangesListener 
*/
interface XBackendChangesNotifier: com::sun::star::uno::XInterface
{ 
	//------------------------------------------------------------------------- 
	/** adds the specified listener to receive events when changes occured.
		@param aListener
			specifies the listener object.

		@param component
			 The name of the component the listener is monitoring changes for.
	 
	 */
	[oneway] void addChangesListener( [in] com::sun::star::configuration::backend::XBackendChangesListener aListener,
									  [in] string component); 
 
	//------------------------------------------------------------------------- 
	/** removes the specified listener.
		@param aListener
			specifies the listener object.

		@param component
			 The name of the component the listener is monitoring changes for.
	 
	 */
	[oneway] void removeChangesListener( [in] com::sun::star::configuration::backend::XBackendChangesListener aListener,
										 [in] string component); 
 
}; 
 
//============================================================================= 
 
}; }; }; }; };  
 
#endif 
