/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_lang_RegistryServiceManager_idl__ 
#define __com_sun_star_lang_RegistryServiceManager_idl__ 
 
#ifndef __com_sun_star_lang_ServiceManager_idl__ 
#include <com/sun/star/lang/ServiceManager.idl> 
#endif 
 
#ifndef __com_sun_star_lang_MultiServiceFactory_idl__ 
#include <com/sun/star/lang/MultiServiceFactory.idl> 
#endif 
 
#ifndef __com_sun_star_lang_XInitialization_idl__ 
#include <com/sun/star/lang/XInitialization.idl> 
#endif 
 
#ifndef __com_sun_star_beans_XPropertySet_idl__ 
#include <com/sun/star/beans/XPropertySet.idl> 
#endif 
 
#ifndef __com_sun_star_registry_XSimpleRegistry_idl__ 
#include <com/sun/star/registry/XSimpleRegistry.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module lang {  
 
//============================================================================= 
 
/** Provides a collection of implementations for services reading from a
    persistent registry storage.

    For usage of the service manager have a look at service description
    of <type>ServiceManager</type>.
    
    @see ServiceManager
*/
published service RegistryServiceManager
{ 
    /** This is a derived ServiceManager service.
    */
	service com::sun::star::lang::ServiceManager; 
	
	/** The first two arguments of the intitialization arguments reference:
        <ol>
        <li>a simple registry 
        (<type scope="com::sun::star::registry">XSimpleRegistry</type>), 
        i.e. the registry to be read from</li>
        <li>a component context
        (<type scope="com::sun::star::uno">XComponentContext</type>)
        to be installed as "DefaultContext" property of the
        <type>ServiceManager</type> which is the context to be used
        using the <type>XMultiServiceFactory</type> interface.</li>
        </ol>
    */
	interface com::sun::star::lang::XInitialization;
    
	/** Property access.
	*/
	interface com::sun::star::beans::XPropertySet;    
	/** Specifies the current registry to be read from.
	*/
	[readonly, property] com::sun::star::registry::XSimpleRegistry Registry; 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
