/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_frame_ContentHandler_idl__
#define __com_sun_star_frame_ContentHandler_idl__

#ifndef __com_sun_star_frame_XNotifyingDispatch_idl__
#include <com/sun/star/frame/XNotifyingDispatch.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module frame {

//=============================================================================
/** special dispatcher for non visible contents, e.g. sounds

    <p>
    This handler doesn't need any frame as target for loading components.
    Content handler are registered for content types.
    (See type/filter configuration of <type scope="com::sun::star::document">TypeDetection</type>
    for further informations) If generic load mechanism found such documents which
    can be handled by a ContentHandler it will create and use it.
    </p>

    @see com::sun::star::document::TypeDetection
 */
published service ContentHandler
{
    //-------------------------------------------------------------------------
    /** provides handling of dispatches with defined result state

        <p>
        Base interface of <type>XNotifyingDispatch</type> is <type>XDispatch</type>
        and can be called for requests if result isn't neccessary for dispatch operation.
        </p>

        @see XDispatch
	 */
    interface XNotifyingDispatch;
};

//=============================================================================

}; }; }; };

#endif
