/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_awt_XSystemChildFactory_idl__
#define __com_sun_star_awt_XSystemChildFactory_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif


//=============================================================================

module com { module sun { module star { module awt {
    
//============================================================================= 

 published interface XWindowPeer;

/** specifies a factory interface for creating system child windows.
 */
published interface XSystemChildFactory : com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
    
	/** creates a system child window.

        @returns 
		the created window.

		@param Parent
		a sytem-specific handle to a window.
		
		<p>You must check the machine ID and the process ID.<BR>
		WIN32: HWND.<BR>
		WIN16: HWND.<BR>
		
		JAVA: global reference to a java.awt.Component
		object provided from the JNI-API.<BR>
		
		OS2: HWND.<BR>
		MAC: Not supported.<BR></p>
		
		@param ProcessId
		the process identifier. Use the sal_getGlobalProcessId
		function of the RTL library.
		
		@param SystemType
		one constant out of the constant group
		<type scope="com::sun::star::lang">SystemDependent</type>.
	*/
	 XWindowPeer createSystemChild( [in] any Parent, [in] sequence< byte > ProcessId, [in] short SystemType );
     
};

//=============================================================================

}; }; }; };

#endif
