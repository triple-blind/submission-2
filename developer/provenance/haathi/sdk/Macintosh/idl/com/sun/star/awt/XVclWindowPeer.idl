/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_XVclWindowPeer_idl__ 
#define __com_sun_star_awt_XVclWindowPeer_idl__ 
 
#ifndef __com_sun_star_awt_XWindowPeer_idl__ 
#include <com/sun/star/awt/XWindowPeer.idl> 
#endif 
 
#ifndef __com_sun_star_util_Color_idl__
#include <com/sun/star/util/Color.idl>
#endif

#ifndef __com_sun_star_awt_FontDescriptor_idl__ 
#include <com/sun/star/awt/FontDescriptor.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 
 
/** gives access to the VCL window implementation.

    @deprecated
 */
published interface XVclWindowPeer: com::sun::star::awt::XWindowPeer
{ 
	//------------------------------------------------------------------------- 

	/** returns <true/> if the window peer is a child, <false/> otherwise.
	 */    
	boolean isChild( [in] com::sun::star::awt::XWindowPeer Peer ); 
 
	//------------------------------------------------------------------------- 
	 
	/** sets the design mode for use in a design editor.
	 */
	[oneway] void setDesignMode( [in] boolean bOn ); 
 
	//------------------------------------------------------------------------- 

	/** returns <true/> if the window peer is in design mode,
        <false/> otherwise.
	 */    
	boolean isDesignMode(); 
 
	//------------------------------------------------------------------------- 

    /** enables clipping of sibling windows.
     */
	[oneway] void enableClipSiblings( [in] boolean bClip ); 
 
	//------------------------------------------------------------------------- 

    /** sets the foreground color.
     */
	[oneway] void setForeground( [in] com::sun::star::util::Color Color ); 
 
	//------------------------------------------------------------------------- 

	/** sets the control font.
     */
	[oneway] void setControlFont( [in] com::sun::star::awt::FontDescriptor aFont ); 
 
	//------------------------------------------------------------------------- 

	/** returns the font, foreground and background color for the specified
        type.
     */
	void getStyles( [in] short nType, 
			 [out] com::sun::star::awt::FontDescriptor Font, 
			 [out] com::sun::star::util::Color ForegroundColor, 
			 [out] com::sun::star::util::Color BackgroundColor ); 
 
	//------------------------------------------------------------------------- 
	 
	/** sets the value of the property with the specified name.
	 */
	void setProperty( [in] string PropertyName, 
			 [in] any Value ); 
 
	//------------------------------------------------------------------------- 

	/** returns the value of the property with the specified name.
     */
	any getProperty( [in] string PropertyName ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
