/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_rendering_XCustomSprite_idl__
#define __com_sun_star_rendering_XCustomSprite_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_rendering_ViewState_idl__
#include <com/sun/star/rendering/ViewState.idl>
#endif
#ifndef __com_sun_star_rendering_RenderState_idl__
#include <com/sun/star/rendering/RenderState.idl>
#endif
#ifndef __com_sun_star_rendering_XSprite_idl__
#include <com/sun/star/rendering/XSprite.idl>
#endif

module com { module sun { module star { module rendering {

published interface XCanvas;

/** Interface to control a custom sprite object on a XSpriteCanvas.<p>

    Every change performed on XCustomSprite objects is only visible
    after a XSpriteCanvas::updateScreen() call, to facilitate
    synchronized screen updates.

    TODO: Maybe more than alpha has to be overridden from render state.
    TODO: Provide means to change the output area
 */
published interface XCustomSprite : XSprite
{

    /** Query a render canvas for this sprite's content.<p>

        Whatever is rendered to this canvas will become visible on the
        screen only after a XSpriteCanvas::updateScreen() call at the
        associated sprite canvas. This canvas is not equivalent to the
        host canvas of the sprite. At the very least, all output
        happens relative to the sprite's upper left corner, i.e. the
        origin of the sprite's canvas device coordinate system will
        move with the sprite across the screen.

        @return the canvas the sprite content can be rendered into.
     */
    XCanvas getContentCanvas();

};

}; }; }; };

#endif
