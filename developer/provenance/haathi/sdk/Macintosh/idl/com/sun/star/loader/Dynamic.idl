/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_loader_SharedLibrary_idl__ 
#define __com_sun_star_loader_SharedLibrary_idl__ 
 
#ifndef __com_sun_star_lang_XServiceInfo_idl_idl__ 
#include <com/sun/star/lang/XServiceInfo.idl> 
#endif 
 
module com {  module sun {  module star {  module loader { 
 
 published interface XImplementationLoader; 
 
 
/** makes it possible to access services accessible via a <code>UnoUrlResolver</code>
	E.g., instantiation of services in another process. This service is still in an
    experimental state and should not be used in a production environment.
 */
published service Dynamic
{ 
	/** is used to write persistent information into the given registry
		for accessing a <code>SingleServiceFactory</code> and for activating this 
				implementation.
	 */
	/** allows registration and activation of described service.
		The url parameter has to be a comma-separated list of attributes.
		The following attribute types are understood:
		servicename = the service name to register this component under
		link        = a parameter given to a resolver to get a <code>SingleServiceFactory</code>
		resolver    = a <code>UnoUrlResolver</code> service, which is used to resolve the link
	*/
	interface XImplementationLoader; 
 
	 
	/** gives information about other supported services
	 */
	interface com::sun::star::lang::XServiceInfo; 
}; 
 
}; }; }; };
 
#endif 
 
