/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_i18n_Currency2_idl__
#define __com_sun_star_i18n_Currency2_idl__

#ifndef __com_sun_star_i18n_Currency_idl__
#include <com/sun/star/i18n/Currency.idl>
#endif

//============================================================================

module com { module sun { module star { module i18n {

//============================================================================

/** 
    Symbols, names, and attributes of a specific currency, returned in a
    sequence by <member>XLocaleData2::getAllCurrencies2()</member>.

    <p> It is derived from
    <type scope="::com::sun::star::i18n">Currency</type> and provides an
    additional flag for currency entries that are available only for legacy
    reasons in context of loaded documents that use them, but otherwise
    should not be offered to the user to be selectable.

    @see XLocaleData
        for links to DTD of XML locale data files.
 */

published struct Currency2 : com::sun::star::i18n::Currency
{
    /** If set, the currency and/or its symbol is only to be used in
        legacy context.

        @since OOo 2.0.3
     */
    boolean LegacyOnly;
};

//============================================================================
}; }; }; };

#endif
