/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sdbcx_Driver_idl__ 
#define __com_sun_star_sdbcx_Driver_idl__ 
 
#ifndef __com_sun_star_sdbc_Driver_idl__ 
#include <com/sun/star/sdbc/Driver.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbcx { 
 
 published interface XDataDefinitionSupplier; 
 published interface XCreateCatalog; 
 published interface XDropCatalog; 
 
 
/** extends the service 
	<type scope="com::sun::star::sdbc">Driver</type>
	by beans for data definition.
<p>
	This service is optional for each driver. Its purpose is to define
	a common way for database definition, as the DDL differs between most DBMS.
</p>
<p>
	Definition and deletion of database catalogs can't be defined in a common
	manner for DBMS, but it should be possible to hide much of the complexity
	of creation and deletion of catalogs. Each driver could provide methods to
	cover these tasks.
</p>
 */
published service Driver
{ 
	service com::sun::star::sdbc::Driver; 
	
	/** used to get access to the catalog.
		@see Catalog
	*/
	interface XDataDefinitionSupplier; 
 
	 
	/** is optional for implementation.
	 */
	[optional] interface XCreateCatalog; 
	 
	/** is optional for implementation.
	 */
	[optional] interface XDropCatalog; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
#endif 
