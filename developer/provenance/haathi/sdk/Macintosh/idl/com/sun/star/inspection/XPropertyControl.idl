/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_inspection_XPropertyControl_idl__
#define __com_sun_star_inspection_XPropertyControl_idl__

#ifndef __com_sun_star_beans_IllegalTypeException_idl__
#include <com/sun/star/beans/IllegalTypeException.idl>
#endif
#ifndef __com_sun_star_awt_XWindow_idl__
#include <com/sun/star/awt/XWindow.idl>
#endif

//=============================================================================
module com {  module sun {  module star {  module inspection {

published interface XPropertyControlContext;

//-----------------------------------------------------------------------------
/** defines the interface for a single control in an <type>ObjectInspector</type>

    @since OOo 2.0.3
*/
published interface XPropertyControl
{
    /** denotes the type of the control, as one of the <type>PropertyControlType</type>
        constants
    */
    [attribute, readonly] short ControlType;

    /** denotes the current content of the control.

        <p>At every point in time, this value is either <void/>, or of the type
        described by <member>ValueType</member>.</p>

        @throws com::sun::star::beans::IllegalTypeException
            if an attempt is made to set a value which is not <void/> and whose
            type does not equal <member>ValueType</member>.
    */
    [attribute] any Value
    {
        set raises ( com::sun::star::beans::IllegalTypeException );
    };

    /** denotes the value type of the control.

        @see Value
    */
    [attribute, readonly] type ValueType;

    /** specifies the context of the control within the <type>ObjectInspector</type>.

        <p>The property control should actively notify its state changes to the context.
        In particular, changes in the focus and the value of the control must be notified.
    */
    [attribute] XPropertyControlContext ControlContext;

    /** determines whether the control content is currently modified

        <p>An <type>XPropertyControl</type> internally manages a flag indicating whether
        its content is modified. This flag is reset to <FALSE/> every time our
        <member>ControlContext</member> is notified of our current value. Also, the control
        implementation must set this flag to <TRUE/> if and only if the user changed the
        control content.</p>

        @see notifyModifiedValue
        @see ControlContext
        @see XPropertyControlContext::valueChanged
    */
    boolean isModified();

    /** notifies the context in which the control lives of the current control value,
        if this value is currently modified

        @see isModified
        @see ControlContext
        @see XPropertyControlListener::valueChanged
    */
    void notifyModifiedValue();

    /** denotes the window which is the real UI representation of the property control.

        <p>The <type>ObjectInspector</type> will automatically position and size this control
        as needed, care for its Z-order, and so on.</p>

        <p>This Window must not be <NULL/>, else the whole control is not usable.</p>
    */
    [attribute, readonly] com::sun::star::awt::XWindow ControlWindow;
};

//=============================================================================

}; }; }; };

#endif

