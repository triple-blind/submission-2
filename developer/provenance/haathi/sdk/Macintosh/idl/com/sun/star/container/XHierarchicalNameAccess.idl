/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_container_XHierarchicalNameAccess_idl__ 
#define __com_sun_star_container_XHierarchicalNameAccess_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_container_NoSuchElementException_idl__ 
#include <com/sun/star/container/NoSuchElementException.idl> 
#endif 

//============================================================================= 
 
module com {  module sun {  module star {  module container {  
 
//============================================================================= 
 
/** is used to have hierarchical access to elements within a container.

	<p>You address an object of a specific level in the hierarchy by giving its
	fully qualified name, e.g., "com.sun.star.uno.XInterface". </p>
	
	<p>To implement inaccurate name access, support the 
	<type scope="com::sun::star::beans">XExactName</type> interface.  </p>

	@see com::sun::star::beans::XExactName
 */
published interface XHierarchicalNameAccess: com::sun::star::uno::XInterface
{ 
	//------------------------------------------------------------------------- 
	 
	/** @returns		 
				the object with the specified name. 
				 
		@param aName 
			the name of the object. 
				 
		@throws NoSuchElementException  
			if an element under Name does not exist.
	 */
	any getByHierarchicalName( [in] string aName ) 
			raises( com::sun::star::container::NoSuchElementException ); 
 
	//------------------------------------------------------------------------- 
	 
	/** @returns  
			<TRUE/> if an element with this name is in 
			the container, <FALSE/> otherwise. 
				 
		<p>In many cases, the next call is <member>XNameAccess::getByName</member>. 
		You should optimize this case. 
				 
		@param aName 
			the name of the object.
	 */
	boolean hasByHierarchicalName( [in] string aName ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
