/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_container_XContainerApproveListener_idl
#define __com_sun_star_container_XContainerApproveListener_idl

#ifndef __com_sun_star_container_ContainerEvent_idl__ 
#include <com/sun/star/container/ContainerEvent.idl>
#endif

#ifndef __com_sun_star_lang_WrappedTargetException_idl__ 
#include <com/sun/star/lang/WrappedTargetException.idl>
#endif

#ifndef __com_sun_star_util_XVeto_idl__
#include <com/sun/star/util/XVeto.idl>
#endif

//=============================================================================

module com { module sun { module star { module container { 

//=============================================================================

/** is notified to approve changes which happen to the content of a generic container
    
    @see XContainerApproveBroadcaster
 */
interface XContainerApproveListener
{
    /** is called for the listener to approve an insertion into the container

        @return
            an instance implementing the <type scope="com::sun::star::util">XVeto</type> interface,
            if the insertion is vetoed, <NULL/> otherwise.
     */
    com::sun::star::util::XVeto approveInsertElement( [in] ContainerEvent Event )
      raises ( com::sun::star::lang::WrappedTargetException );

    /** is called for the listener to approve a replacement inside the container

        @return
            an instance implementing the <type scope="com::sun::star::util">XVeto</type> interface,
            if the replacement is vetoed, <NULL/> otherwise.
     */
    com::sun::star::util::XVeto approveReplaceElement( [in] ContainerEvent Event )
      raises ( com::sun::star::lang::WrappedTargetException );

    /** is called for the listener to approve a removal of an element from the container

        @return
            an instance implementing the <type scope="com::sun::star::util">XVeto</type> interface,
            if the removal is vetoed, <NULL/> otherwise.
     */
    com::sun::star::util::XVeto approveRemoveElement( [in] ContainerEvent Event )
      raises ( com::sun::star::lang::WrappedTargetException );
};

//=============================================================================

}; }; }; }; 

//=============================================================================

#endif
