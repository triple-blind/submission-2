/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_setup_ProductRegistration_idl__
#define __com_sun_star_setup_ProductRegistration_idl__

#ifndef __com_sun_star_task_JobExecutor_idl__
#include <com/sun/star/task/JobExecutor.idl>
#endif

#ifndef __com_sun_star_task_XJob_idl__
#include <com/sun/star/task/XJob.idl>
#endif

module com {  module sun {  module star {  module setup { 

/** provides a mechanism for registering the product.

	<p>Two main functionalities are covered by this service:
	<ul><il><em>Triggering Online Registration</em><br/>
			If, by any user interface of your choice, the user tells she wants to register
			their product copy, ProductRegistration is the service of your choice.
		</il><br/>
		<il><em>Executing Registration Requests</em><br/>
			ProductRegistration allows to remind your users to register, using a dialog with various
			choices.
		</il>
	</ul></p>

    @since OOo 1.1.2
*/
published service ProductRegistration
{
	/** allows to trigger certain events.

		<p>The string argument of <method scope="com::sun::star::task">XJobExecutor::trigger</method> is
			used to determine the type of the event. Currently supported events are:<br/>
			<ul><li><b>RegistrationRequired</b><br/>
					Determines that the registration is required to be executed.<br/>
					This is usually triggered by some user interaction, for instance upon choosing a menu item
					called <em>Registration</em>.</p>
				</li>
			</ul>
		</p>
	*/
	service com::sun::star::task::JobExecutor;

	/** allows the registration request to be scheduled automatically.

		<p>There are processes which allow to schedule events and jobs, for instance there
		can be configuration settings scheduling which operations are to be executed upon an program
		startup. Such processes usually require the jobs to be executed to support the
		<type scope="com::sun::star::task">XJob</type> interface.</p>

		<p>That's why this service supports the <type scope="com::sun::star::task">XJob</type>, too.<br/>
		Calling the <method scope="com::sun::star::task">XJob::execute</method> method results in displaying a
		dialog which asks the user to register. This is done once per session, means you need to restart the
		process which called this.</p>

		<p>At the moment, there is no specification about how to use the arguments given in the
		<method scope="com::sun::star::task">XJob::execute</method> method, but this may change in future versions of the service
		descriptions, so to keep your implementation compatible, you should not use these arguments.</p>
	*/
	interface com::sun::star::task::XJob;
};

}; }; }; }; 

#endif
