/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_packages_manifest_XManifestReader_idl__ 
#define __com_sun_star_packages_manifest_XManifestReader_idl__ 

#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl> 
#endif 

#ifndef __com_sun_star_io_XInputStream_idl__
#include <com/sun/star/io/XInputStream.idl> 
#endif 

//============================================================================= 
 
module com {  module sun {  module star {   module packages {  module manifest {
 
//============================================================================= 
/** This interface reads the manifest data from a file. The user
    must supply an XInputStream when calling readManifestSequence() to recieve 
	a sequence of manifest entries. Each manifest entry is represented by
	a sequence of PropertyValues. */
//============================================================================= 
published interface XManifestReader: com::sun::star::uno::XInterface
{
	/** Supplies the XManifestReader with an XInputStream to read from, reads
	    the data and returns it to the caller.
	*/
	sequence < sequence < com::sun::star::beans::PropertyValue > > readManifestSequence( [in] com::sun::star::io::XInputStream rStream ); 
};
}; }; }; }; };
#endif 
