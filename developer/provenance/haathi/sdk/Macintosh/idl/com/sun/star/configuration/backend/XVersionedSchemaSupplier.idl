/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_configuration_backend_XVersionedSchemaSupplier_idl__
#define __com_sun_star_configuration_backend_XVersionedSchemaSupplier_idl__

#ifndef __com_sun_star_configuration_backend_XSchemaSupplier_idl__
#include <com/sun/star/configuration/backend/XSchemaSupplier.idl>
#endif 

#ifndef __com_sun_star_configuration_backend_BackendAccessException_idl__
#include <com/sun/star/configuration/backend/BackendAccessException.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif 

//============================================================================= 

module com { module sun { module star { module configuration { module backend {

//============================================================================= 

/** 
  provides access to versioned configuration component schemas.

  @since OOo 2.0
*/
interface XVersionedSchemaSupplier : XSchemaSupplier 
{
	//------------------------------------------------------------------------- 

    /**
      Returns the schema version for a particular component.

      @param aComponent 
                component whose schema version will be determined

      @returns   
                a <atom>string</atom> that identifies the schema version for 
                the given component.

                <p> The format of the version string is arbitrary. No meaning 
                should be attached to it, unless an implementing service 
                defines one. If no version can be determined, an empty 
                <atom>string</atom> may be returned.
                </p>

                <p> Clients may assume that all instances of a schema with the 
                same version are identical. The converse is not true.
                In particular an implementation may return the same version 
                string for all schemas it supplies (i.e. return a version for 
                the complete schema, including all components)
                </p>

      @throws   com::sun::star::lang::IllegalArgumentException
                if the component identifier is invalid.

      @throws   com::sun::star::configuration::backend::BackendAccessException
                if an error occurs while accessing the version data.
	*/
    string getSchemaVersion([in] string aComponent)
        raises (BackendAccessException,
                com::sun::star::lang::IllegalArgumentException) ;

	//------------------------------------------------------------------------- 
} ;

//============================================================================= 

} ; } ; } ; } ; } ;

#endif 
