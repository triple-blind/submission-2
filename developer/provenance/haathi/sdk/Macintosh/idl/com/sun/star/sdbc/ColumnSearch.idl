/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sdbc_ColumnSearch_idl__ 
#define __com_sun_star_sdbc_ColumnSearch_idl__ 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
/** indicates in which way a column can be used in the WHERE search.
 */
published constants ColumnSearch
{ 
	//------------------------------------------------------------------------- 
	 
	/** A possible value for column <code>SEARCHABLE</code> in the 
			 <type scope="com::sun::star::sdbc">XResultSet</type>
			 object returned by the method 
			 <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getTypeInfo()</member>
			 . 
			 <p>
			 Indicates that 
			 <code>WHERE</code>
			 search clauses are not supported 
			 for this type.
	 */
	const long NONE = 0; 
	//------------------------------------------------------------------------- 
     
	/** A possible value for column <code>SEARCHABLE</code> in the 
			 <type scope="com::sun::star::sdbc">XResultSet</type>
			 object returned by the method 
			 <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getTypeInfo()</member>
			 .
			 <p>
			 Indicates that the only 
			 <code>WHERE</code>
			 search clause that can 
			 be based on this type is 
			 <code>WHERE...LIKE</code>
			 .
	 */
	const long CHAR = 1; 
	//------------------------------------------------------------------------- 
     
	/** A possible value for column <code>SEARCHABLE</code> in the 
			 <type scope="com::sun::star::sdbc">XResultSet</type>
			 object returned by the method 
			 <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getTypeInfo()</member>
			 .
			 <p>
			 Indicates that one can base all 
			 <code>WHERE</code>
			 search clauses 
			 except 
			 <code>WHERE...LIKE</code>
			 on this data type.
	 */
	const long BASIC = 2; 
	//------------------------------------------------------------------------- 
     
	/** A possible value for column 
			<code>SEARCHABLE</code>
			in the 
			<type scope="com::sun::star::sdbc">XResultSet</type>
			object returned by the method 
			<member  scope="com::sun::star::sdbc">XDatabaseMetaData::getTypeInfo()</member>
			.
			<p>
			Indicates that all 
			<code>WHERE</code>
			search clauses can be 
			based on this type.
	 */
	const long FULL  = 3; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
