/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_xml_dom_XDocumentBuilder_idl__
#define __com_sun_star_xml_dom_XDocumentBuilder_idl__

#ifndef __com_sun_star_uno__XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif

#ifndef __com_sun_star_xml_dom_XDocument_idl__ 
#include <com/sun/star/xml/dom/XDocumentType.idl> 
#endif
#ifndef __com_sun_star_xml_dom_XDOMImplementation_idl__ 
#include <com/sun/star/xml/dom/XDOMImplementation.idl> 
#endif
#ifndef __com_sun_star_io_XInputStream_idl__ 
#include <com/sun/star/io/XInputStream.idl> 
#endif

#ifndef __com_sun_star_xml_sax_SAXException_idl__ 
#include <com/sun/star/xml/sax/SAXException.idl> 
#endif 

#ifndef __com_sun_star_xml_sax_XErrorHandler_idl__ 
#include <com/sun/star/xml/sax/XErrorHandler.idl> 
#endif 
#ifndef __com_sun_star_xml_sax_XEntityResolver_idl__ 
#include <com/sun/star/xml/sax/XEntityResolver.idl> 
#endif 


#ifndef __com_sun_star_io_IOException_idl__ 
#include <com/sun/star/io/IOException.idl> 
#endif 

module com { module sun { module star { module xml { module dom {

interface XInputStream;

/**
Builds a new dom tree
*/
interface XDocumentBuilder : com::sun::star::uno::XInterface
{

    /**
    Obtain an instance of a DOMImplementation object.
    */
    XDOMImplementation getDOMImplementation();

    /**
    Indicates whether or not this parser is configured to understand 
    namespaces.     
    */
    boolean isNamespaceAware();

    /**       
    Indicates whether or not this parser is configured to validate XML 
    documents.
    */
    boolean isValidating();

    /**
    Obtain a new instance of a DOM Document object to build a DOM tree 
    with.          
    */
    XDocument newDocument();

    /**
    Parse the content of the given InputStream as an XML document and 
    return a new DOM Document object.     
    */
    XDocument parse([in] com::sun::star::io::XInputStream is)
			raises( com::sun::star::xml::sax::SAXException, 
					com::sun::star::io::IOException ); 

    /**
    Parse the content of the given URI as an XML document and return 
    a new DOM Document object.
    */
    XDocument parseURI([in] string uri)
			raises( com::sun::star::xml::sax::SAXException, 
					com::sun::star::io::IOException ); 

    /**
    Specify the EntityResolver to be used to resolve entities present
    in the XML document to be parsed.
	*/
    void setEntityResolver([in] com::sun::star::xml::sax::XEntityResolver er);

    /**
	Specify the ErrorHandler to be used to report errors present in
    the XML document to be parsed.
    */
	void setErrorHandler([in] com::sun::star::xml::sax::XErrorHandler eh);

};

}; }; }; }; };

#endif
