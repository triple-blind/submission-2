/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_rendering_Texture_idl__
#define __com_sun_star_rendering_Texture_idl__

module com { module sun { module star { module rendering {

/** Enumeration of possible values to spread a texture across a
    primitive.

    @since OOo 2.0
 */
constants TexturingMode
{
	/** Pixel outside the texture area are fully transparent.<p>

		This completely switches off pixel generation outside the
		texture coordinate range [0,1]. This results in only one
		instance of the texture generated per textured primitive.<p>
  	 */
	const byte NONE=0;

	//-------------------------------------------------------------------------

	/** Clamp texture coordinate.<p>

		This value clamps the texture coordinates to the range
		[0,1]. This results in only one instance of the texture
		generated per textured primitive, with the remaining area
		filled with the color of the outermost texels<p>
  	 */
	const byte CLAMP=1;

	//-------------------------------------------------------------------------

	/** Repeat the texture.<p>

    	This value repeats the texture over the textured primitive,
    	for the given texture coordinate.<p>
	 */
	const byte REPEAT=2;
};

}; }; }; };

#endif
