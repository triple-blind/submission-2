/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sheet_Shape_idl__
#define __com_sun_star_sheet_Shape_idl__

#ifndef __com_sun_star_drawing_Shape_idl__
#include <com/sun/star/drawing/Shape.idl>
#endif
#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module sheet {

//=============================================================================

/** specifies the service of shapes in a spreadsheet document
 */
service Shape
{
	service com::sun::star::drawing::Shape;
	//-------------------------------------------------------------------------
	/** contains the object where this shape is anchored on.
		<p> Possible objects are XSpreadsheet and XCell.</p>
	*/
	[readonly, property] com::sun::star::uno::XInterface Anchor;
    	//-------------------------------------------------------------------------
	/** contains the horizontal position of the object (1/100 mm).
		<p> The position is relative to the anchor object.</p>
		<p> If the underlying table layout direction is left to right
		the position is the difference of the left top edge of the anchor
		object and the left top edge of the drawing object.</p>
		<p> If the underlying table layout direction is right to left
		the position is the difference of the right top edge of the anchor
		object and the right top edge of the drawing object.</p>
	 */
	[property] long HoriOrientPosition;
	//-------------------------------------------------------------------------
	/** contains the vertical position of the object (1/100 mm).
		<p> The position is relative to the anchor object.</p>
		<p> If the underlying table layout direction is left to right
		the position is the difference of the left top edge of the anchor
		object and the left top edge of the drawing object.</p>
		<p> If the underlying table layout direction is right to left
		the position is the difference of the right top edge of the anchor
		object and the right top edge of the drawing object.</p>
	 */
	[property] long VertOrientPosition;

};

//=============================================================================

}; }; }; };

#endif
