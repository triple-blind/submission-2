/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sdbc_DataTruncation_idl__ 
#define __com_sun_star_sdbc_DataTruncation_idl__ 
 
#ifndef __com_sun_star_sdbc_SQLWarning_idl__ 
#include <com/sun/star/sdbc/SQLWarning.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
/** reports a DataTruncation warning, on reads, or is thrown as a DataTruncation exception,
	on writes, when a data value is unexpectedly truncated.
	
	<p>
	The SQL state for a 
	<code>DataTruncation</code>
	is
	<code>01004</code>
	.
	</p>
 */
published exception DataTruncation: SQLWarning
{ 
	 
	/** is the index of the parameter or column value.
	 */
	long Index; 
 
	 
	/** is
		<TRUE/>
		if a parameter value is truncated.
	 */
	boolean IsParameter; 
 
	 
	/** is
		<TRUE/>
		if a read was truncated.
	 */
	boolean DuringRead; 
 
	 
	/** contains the number of bytes of data that should have been transferred.
		This number may be approximate if data conversions were being
		performed. The value may be
		<code>-1</code>
		if the size is unknown.
	 */
	long DataSize; 
 
	 
	/** contains the number of bytes of data actually transferred.
		The value may be
		<code>-1</code>
		if the size is unknown.
	 */
	long TransferSize; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
/*=========================================================================== 
===========================================================================*/ 
#endif 
