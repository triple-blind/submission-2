/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_text_ControlCharacter_idl__ 
#define __com_sun_star_text_ControlCharacter_idl__ 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module text {  
 
//============================================================================= 
 
// DocMerge from idl: constants com::sun::star::text::ControlCharacter
/** These constants are the codes for inserting control characters 
		using <method>XSimpleText::insertControlCharacter</method> interface.
 */
published constants ControlCharacter
{ 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from idl: value com::sun::star::text::ControlCharacter::PARAGRAPH_BREAK
	/** This control character starts a new paragraph.
	 */
	const short PARAGRAPH_BREAK = 0; 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from idl: value com::sun::star::text::ControlCharacter::LINE_BREAK
	/** This control character starts a new line in a paragraph.
	 */
	const short LINE_BREAK = 1; 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from idl: value com::sun::star::text::ControlCharacter::HARD_HYPHEN
	/** This control character equals a dash but prevents this  
				position from being hyphenated.
	 */
	const short HARD_HYPHEN = 2; 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from idl: value com::sun::star::text::ControlCharacter::SOFT_HYPHEN
	/** This control character defines a special position as a 
				hyphenation point. If a word containing a soft hyphen  
				must be split at the end of a line, then this position 
				is preferred.
	 */
	const short SOFT_HYPHEN = 3; 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from idl: value com::sun::star::text::ControlCharacter::HARD_SPACE
	/** This control character is used to link two words and 
				prevents this concatenation from being hyphenated. 
				It is printed as a space.
	 */
	const short HARD_SPACE = 4; 

	//-------------------------------------------------------------------------
	/** This control character appends a new paragraph.
	*/
	const short APPEND_PARAGRAPH = 5;
};

//=============================================================================

}; }; }; };

#endif
