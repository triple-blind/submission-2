/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_configuration_backend_LayerUpdateMerger_idl__
#define __com_sun_star_configuration_backend_LayerUpdateMerger_idl__

#ifndef __com_sun_star_lang_XInitialization_idl__
#include <com/sun/star/lang/XInitialization.idl>
#endif 

#ifndef __com_sun_star_configuration_backend_XUpdateHandler_idl__
#include <com/sun/star/configuration/backend/XUpdateHandler.idl>
#endif 

//============================================================================= 

module com { module sun { module star { module configuration { module backend {

//============================================================================= 

/** 
    applies updates to a configuration layer.

    <p> The configuration layer data is read from a <type>XLayer</type> 
    and the changed layer is provided as <type>XLayer</type> again or 
    described to a <type>XLayerHandler</type>.
    </p>
  
    @see com::sun::star::configuration::backend::UpdatableLayer
        Service describes a layer and accepts a changed layer..

    @since OOo 1.1.2
*/
published service LayerUpdateMerger
{
	//------------------------------------------------------------------------- 

    /** accepts events describing the changes.
      */
    interface com::sun::star::configuration::backend::XUpdateHandler ;

	//------------------------------------------------------------------------- 

    /** allows initializing layer data source and target.

        <p> Both source and target of the update can be provided by passing a
            <type>XUpdatableLayer</type> object. Alternatively they can be 
            provided individually by providing a <type>XLayer</type> object as
            data source and an <type>XLayerHandler</type> object to receive the 
            updated data.
        </p> 
        <p> Implementations can provide more arguments to finetune the behavior. 
            Such arguments are provided as 
            <type scope="com::sun::star::beans">NamedValue</type>. 
            Implementations should support the following named arguments:
        <dl>
            <dt><code>Overwrite</code> : <atom>boolean</atom></dt>
            <dd>If <FALSE/>, specifies that changes should be applied
                only if the existing layer is empty.
            </dd>
            <dt><code>Truncate</code> : <atom>boolean</atom></dt>
            <dd>If <TRUE/> requests that changes should not be merged onto 
                existing data, but that the changes should be applied  
                to a layer that is completely empty.
            </dd>
        </dl>
        </p>
      */
    interface com::sun::star::lang::XInitialization ;

	//------------------------------------------------------------------------- 
} ;

//============================================================================= 

} ; } ; } ; } ; } ; 

#endif 
