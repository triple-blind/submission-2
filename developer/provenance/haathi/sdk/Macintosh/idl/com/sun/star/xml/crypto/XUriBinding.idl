/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


 
//i20156 - new file for xmlsecurity module

/** -- idl definition -- **/

#ifndef __com_sun_star_xml_crypto_xuribinding_idl_
#define __com_sun_star_xml_crypto_xuribinding_idl_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/uno/Exception.idl>
#include <com/sun/star/io/XInputStream.idl>

module com { module sun { module star { module xml { module crypto {

/**
 * Interface of Uri Binding.
 * <p>
 * This interface is used to dynamically bind a uri with a
 * XInputStream interface.
 */
interface XUriBinding : com::sun::star::uno::XInterface
{
	/**
	 * Sets the XInputStream interface for a uri.
	 *
	 * @param uri       the uri to bind
	 * @param aStream   the XInputStream to be binded
	 */
	void setUriBinding([in] string uri, [in] com::sun::star::io::XInputStream aInputStream)
		raises( com::sun::star::uno::Exception );
		
	/**
	 * Gets the XInputStream interface for a uri.
	 *
	 * @param uri   the uri whose binding is to get
	 * @return      the XInputStream binded with the uri
	 */
	com::sun::star::io::XInputStream getUriBinding([in] string uri)
		raises( com::sun::star::uno::Exception );
};

} ; } ; } ; } ; } ;


#endif

