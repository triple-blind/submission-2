/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_ui_dialogs_FilterOptionsDialog_idl__
#define __com_sun_star_ui_dialogs_FilterOptionsDialog_idl__

#ifndef __com_sun_star_ui_dialogs_XExecutableDialog_idl__
#include <com/sun/star/ui/dialogs/XExecutableDialog.idl>
#endif

#ifndef __com_sun_star_beans_XPropertyAccess_idl__
#include <com/sun/star/beans/XPropertyAccess.idl>
#endif

//=============================================================================

module com { module sun { module star { module ui { module dialogs {

//=============================================================================

/**	This service enables a filter developer to register a dialog to query
	for user options before the filter operation is performed.

	<p>The user options are stored inside the <type scope="com::sun::star::document">MediaDescriptor</type>
	and can be queried from the <type scope="com::sun::star::document">MediaDescriptor</type> by
	the component that implements <type scope="com::sun::star::document">XFilter</type>.</p>

	<p>The application will set the <type scope="com::sun::star::document">MediaDescriptor</type>
	using the interface <type scope="com::sun::star::beans">XPropertyAccess</type> and then
	call <method>XExecutableDialog::execute<method>.</p>

	<p>If that method returns <code>ExecutableDialogResults::OK</code>,
	the application will retrieve the changed <type scope="com::sun::star::document">MediaDescriptor</type>
	back using the interface <type scope="com::sun::star::beans">XPropertyAccess</type>. The filter
	operation is than continued, using the new <type scope="com::sun::star::document">MediaDescriptor</type>.</p>
	
	<p>Otherwise, the filter operation is canceled.</p>

    @since OOo 1.1.2
 */
published service FilterOptionsDialog
{
	//-------------------------------------------------------------------------
	/**	this interface is used to set the property values of the
		<type scope="com::sun::star::document">MediaDescriptor</type> before executing
		the dialog and to retrieve the changed <type scope="com::sun::star::document">MediaDescriptor</type>

		afterwards.
 	*/
	interface com::sun::star::beans::XPropertyAccess;

	//-------------------------------------------------------------------------
	/**	this interface executes a dialog that displays the options
		for a filter.
		If <method>XExecutableDialog::execute<method>
		returns <code>ExecutableDialogResults::OK</code>,
		the options can be retrieved by calling <method scope="com::sun::star::beans">XPropertyAccess::getPropertyValues<method>.
	 */
	interface ::com::sun::star::ui::dialogs::XExecutableDialog;
};

//=============================================================================

}; }; }; }; };

#endif
