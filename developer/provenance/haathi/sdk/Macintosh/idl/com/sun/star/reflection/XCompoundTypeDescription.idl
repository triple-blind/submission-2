/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_reflection_XCompoundTypeDescription_idl__ 
#define __com_sun_star_reflection_XCompoundTypeDescription_idl__ 
 
#ifndef __com_sun_star_reflection_XTypeDescription_idl__ 
#include <com/sun/star/reflection/XTypeDescription.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module reflection {  
 
//============================================================================= 
 
/** Reflects a compound type, i.e. a struct or exception.

    <p>For struct types, this type is superseded by
    <type>XStructTypeDescription</type>, which supports polymorphic struct
    types.</p>
*/
published interface XCompoundTypeDescription: com::sun::star::reflection::XTypeDescription
{ 
	/** Returns the type of the base type of the compound type.
        If the compound does not have a base type, the method returns a null interface.
        
        @return
                base interface or null
    */
	com::sun::star::reflection::XTypeDescription getBaseType(); 
    
	/** Returns the member types of the struct/exception in IDL declaration order.

        <p>For a polymorphic struct type template, a member of parameterized
        type is represented by an instance of
        <type scope="com::sun::star::reflection::">XTypeDescription</type> whose
        type class is <code>UNKNOWN</code> and whose name is the name of the
        type parameter.</p>

        @return
                members of struct/exception
    */
	sequence<com::sun::star::reflection::XTypeDescription> getMemberTypes(); 
    
	/** Returns the member names of the struct/exception in IDL declaration order.

        @return
                members names of struct/exception
    */
	sequence<string> getMemberNames(); 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
