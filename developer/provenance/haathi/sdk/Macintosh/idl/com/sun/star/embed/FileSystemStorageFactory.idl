/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_embed_FileSystemStorageFactory_idl__
#define __com_sun_star_embed_FileSystemStorageFactory_idl__

#ifndef __com_sun_star_lang_XSingleServiceFactory_idl__ 
#include <com/sun/star/lang/XSingleServiceFactory.idl>
#endif


//============================================================================

 module com {  module sun {  module star {  module embed {

//============================================================================
/** The <type>FileSystemStorageFactory</type> is a service that allows to
	create a <type>FileSystemStorage</type> based on URL. The URL must point
	to a folder.
 */
published service FileSystemStorageFactory
{
	// ----------------------------------------------------------------------
	/** A storage can be created through this interface.

		<p>
		In case
		<method scope="com::sun::star::lang">XSingleServiceFactory::createInstance</method>
		call is used the result storage will be open in readwrite mode based
		on an arbitrary file system folder.
		</p>

		<p>
		In case 
		<method scope="com::sun::star::lang">XSingleServiceFactory::createInstanceWithArguments</method>
		call is used a sequence of the following parameters can be used:
		</p>

		<dl>
			<dt>parameter 1</dt>
			<dd>
					  specifies source of the object, it must be a string
					  containing URL.
			</dd>
			
			<dt>parameter 2</dt>
			<dd>
					  specifies mode the storage should be open in, can take
					  values from <type>ElementModes</type> constant set.
			</dd>
			
			<dt>parameter 3</dt>
			<dd>
					  allowes to provide
					  <type scope="com::sun::star::document">MediaDescryptor</type>
					  to the storage so some parts can be used for
					  initialization, it can be for example
					  <type scope="com::sun::star::task">XInteractionHandler</type>
					  implementation.
			</dd>
		</dl>

		<p>
		The parameters are optional, that means that sequence can be empty or
		contain only first parameter, or first and second one. In case
		no parameters are provided the call works the same way as
		<member scope="com::sun::star::lang">XSingleServiceFactory::createInstance</member>.
		In case only first parameter is provided, the storage is opened in
		readonly mode.
		</p>

		<p>
		The opened storages can support read access in addition to
		specified one.
		</p>
	 */
	interface ::com::sun::star::lang::XSingleServiceFactory;
};

//============================================================================

}; }; }; };

#endif

