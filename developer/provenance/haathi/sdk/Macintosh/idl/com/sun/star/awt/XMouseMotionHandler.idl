/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_XMouseMotionHandler_idl__ 
#define __com_sun_star_awt_XMouseMotionHandler_idl__ 
 
#ifndef __com_sun_star_lang_XEventListener_idl__ 
#include <com/sun/star/lang/XEventListener.idl> 
#endif 
 
#ifndef __com_sun_star_awt_MouseEvent_idl__ 
#include <com/sun/star/awt/MouseEvent.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 
 
/** makes it possible to receive mouse motion events on a window.
 */
published interface XMouseMotionHandler: com::sun::star::lang::XEventListener
{ 
	//------------------------------------------------------------------------- 
	 
	/** is invoked when a mouse button is pressed on a window and then 
		dragged.  
						
		<p>Mouse drag events will continue to be delivered to
		the window where the first event originated until the mouse button is
		released (regardless of whether the mouse position is within the
		bounds of the window).</p>

        @return
            When <FALSE/> is returned the other handlers are called and a
            following handling of the event by the broadcaster takes place.
            Otherwise, when <TRUE/> is returned, no other handler will be
            called and the broadcaster will take no further actions
            regarding the event.

	 */
	boolean mouseDragged( [in] com::sun::star::awt::MouseEvent e ); 
 
	//------------------------------------------------------------------------- 
	 
	/** is invoked when the mouse button has been moved on a window
		(with no buttons down).

		@return
            When <FALSE/> is returned the other handlers are called and a
            following handling of the event by the broadcaster takes place.
            Otherwise, when <TRUE/> is returned, no other handler will be
            called and the broadcaster will take no further actions
            regarding the event.

	 */
	boolean mouseMoved( [in] com::sun::star::awt::MouseEvent e ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
