/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_text_GraphicCrop_idl__ 
#define __com_sun_star_text_GraphicCrop_idl__ 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module text { 
 
//============================================================================= 
 
// DocMerge from xml: struct com::sun::star::text::GraphicCrop
/** describes the cropping of graphic objects.
	Cropping means to show only parts of the object.
	
	
	
	<p>Negative values cut the visible area; positive values
	extend the visible area by filling it with background color.
	The absolute sum of top and bottom crop must be smaller
	than the objects original height.  The absolute sum of the left and
	right crop must be smaller than the object's original width.
	
	</p>
	<p>If this property is applied to a graphic object, then this object
	will correct these values if necessary.
	</p>
 */
published struct GraphicCrop
{
	// DocMerge from xml: field com::sun::star::text::GraphicCrop::Top
	/** contains the top value to cut (if negative) or to extend (if positive)
	 */
	long Top; 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from xml: field com::sun::star::text::GraphicCrop::Bottom
	/** contains the bottom value to cut (if negative) or to extend (if positive)
	 */
	long Bottom; 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from xml: field com::sun::star::text::GraphicCrop::Left
	/** contains the left value to cut (if negative) or to extend (if positive)
	 */
	long Left; 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from xml: field com::sun::star::text::GraphicCrop::Right
	/** contains the right value to cut (if negative) or to extend (if positive)
	 */
	long Right; 
 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
#endif 
