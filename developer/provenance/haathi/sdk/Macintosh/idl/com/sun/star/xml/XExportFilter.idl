/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef _COM_SUN_STAR_XML_XEXPORTFILTER_IDL__
#define _COM_SUN_STAR_XML_XEXPORTFILTER_IDL__

#ifndef __com_sun_star_uno_RuntimeException_idl__
#include <com/sun/star/uno/RuntimeException.idl>
#endif

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/PropertyValue.idl>
#include <com/sun/star/xml/sax/XDocumentHandler.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>

//=============================================================================

module com { module sun { module star { module xml { 


//=============================================================================  

/** interface to implement for an XML-based import filter. i

    @since OOo 1.1.2
 */
published interface XExportFilter: com::sun::star::uno::XInterface				
{	  
	/** performs the import. 
	 
	 	<p>The source data (location indicated by <var>aSourceData</var>), and 
		the XML representation of the document must be generated by calls to 
		xocHandler (???) methods. 
      
      @param aSourceData 
          <type scope="com::sun::star::document">MediaDescriptor</type>
          which defines the data source

      @param msUserData
          Sequence of strings which contains the userdata defined in the 
          TypeDetection.xml (???)

      @returns
          <TRUE/> if import process is successful
     */
	boolean exporter( 
			 [in] sequence< com::sun::star::beans::PropertyValue > aSourceData,
			 [in] sequence< string > msUserData )
		raises( com::sun::star::lang::IllegalArgumentException ); 
};

}; }; }; };
#endif
