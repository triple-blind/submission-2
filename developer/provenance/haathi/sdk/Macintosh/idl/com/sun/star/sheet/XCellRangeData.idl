/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sheet_XCellRangeData_idl__
#define __com_sun_star_sheet_XCellRangeData_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================
module com {  module sun {  module star {  module sheet {

//=============================================================================

/** allows to get and set an array of data from a cell range.
	<p>The outer sequence represents the rows and the inner sequence
	the columns of the array.</p>
 */

published interface XCellRangeData: com::sun::star::uno::XInterface
{
	/** gets an array from the contents of the cell range.

		<p>Each element of the result contains a <atom>double</atom>
		or a <atom>string</atom>.</p>
	 */
	sequence< sequence< any > > getDataArray();

	/** fills the cell range with values from an array.

		<p>The size of the array must be the same as the size of the cell
		range. Each element of the array must contain a <atom>double</atom>
		or a <atom>string</atom>.</p>

		@throws <type scope="com::sun::star::uno">RuntimeException</type>
			If the size of the array is different from the current size.
	 */
	void setDataArray( [in] sequence< sequence< any > > aArray );
};

//=============================================================================
}; }; }; };

#endif

