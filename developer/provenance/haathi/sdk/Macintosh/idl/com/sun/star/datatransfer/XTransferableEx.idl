/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_datatransfer_XTransferableEx_idl__
#define __com_sun_star_datatransfer_XTransferable_idl__

#ifndef __com_sun_star_datatransfer_DataFlavor_idl__
#include <com/sun/star/datatransfer/DataFlavor.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer {

//=============================================================================
/** Interface to be implemented by objects used to provide data for a transfer
    operation.

    @see com::sun::star::datatransfer::DataFlavor
    @see com::sun::star::datatransfer::XTransferable
*/


published interface XTransferableEx: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/**	@param requestedFlavors
		Sequence of <type>DataFlavor</type> of interest. Specify an empty sequence for interest
		in all data flavors with top-level MIME content-types. To get all MIME 
		content-types, call <member scope="com::sun::star::datatransfer">XTransferable::getTransferDataFlavors()</member>.
	
		@returns
		The list of the matching supported <type>DataFlavor</type> that were requested. For
		each requested top-level MIME content-type, all supported subtypes are returned.
	*/
	sequence < DataFlavor > queryTransferDataFlavors( [in] sequence< DataFlavor > requestedFlavors );
};

//=============================================================================

}; }; }; }; 

#endif
