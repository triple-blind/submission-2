/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sheet_XCellRangesQuery_idl__
#define __com_sun_star_sheet_XCellRangesQuery_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_sheet_XSheetCellRanges_idl__
#include <com/sun/star/sheet/XSheetCellRanges.idl>
#endif

#ifndef __com_sun_star_table_CellAddress_idl__
#include <com/sun/star/table/CellAddress.idl>
#endif

#ifndef __com_sun_star_table_CellRangeAddress_idl__
#include <com/sun/star/table/CellRangeAddress.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides methods to query for cell ranges with specific contents.

	<p>All methods return a collection of cell ranges.</p>

	@see com::sun::star::sheet::SheetRangesQuery
	@see com::sun::star::sheet::SheetCellRanges
 */
published interface XCellRangesQuery: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------

	/** queries all visible cells.

		@returns
			the visible (not hidden) cells of the current cell range(s).
	 */
	com::sun::star::sheet::XSheetCellRanges queryVisibleCells();

	//-------------------------------------------------------------------------

	/** queries all empty cells.

		@returns
			the empty cells of the current cell range(s).
	 */
	com::sun::star::sheet::XSheetCellRanges queryEmptyCells();

	//-------------------------------------------------------------------------

	/** queries all cells with the specified content type(s).

		@param nContentFlags
			a combination of <type>CellFlags</type> flags.

			<p>Attention: Despite the <type>CellFlags</type> flags are
			<atom>long</atom> values, this method expects a <atom>short</atom>
			parameter.

		@returns
			all cells of the current cell range(s) with the specified
			content type(s).
	 */
	com::sun::star::sheet::XSheetCellRanges queryContentCells(
			[in] short nContentFlags );

	//-------------------------------------------------------------------------

	/** queries all formula cells with the specified result type.

		@param nResultFlags
			a combination of <type>FormulaResult</type> flags.

		@returns
			all formula cells of the current cell range(s) with the
			specified result type(s).
	 */
	com::sun::star::sheet::XSheetCellRanges queryFormulaCells(
			[in] long nResultFlags );

	//-------------------------------------------------------------------------

	/** queries all cells with different values in a specified row.

		<p>This method takes each column of the current cell range(s) and
		compares all cells with the cell in the specified row. All cells
		which are different to this comparison cell will be returned.</p>

		@param aCompare
			contains a cell address with the row index used for comparison.
			Only this row index is of interest.

		@returns
			all cells of the current cell range(s) which are different
			to the comparison cell of each column.
	 */
	com::sun::star::sheet::XSheetCellRanges queryColumnDifferences(
			[in] com::sun::star::table::CellAddress aCompare );

	//-------------------------------------------------------------------------

	/** queries all cells with different values in a specified column.

		<p>This method takes each row of the current cell range(s) and
		compares all cells with the cell in the specified column. All cells
		which are different to this comparison cell will be returned.</p>

		@param aCompare
			contains a cell address with the column index used for
			comparison. Only this column index is of interest.

		@returns
			all cells of the current cell range(s) which are different
			to the comparison cell of each row.
	 */
	com::sun::star::sheet::XSheetCellRanges queryRowDifferences(
			[in] com::sun::star::table::CellAddress aCompare );

	//-------------------------------------------------------------------------

	/** intersects the current cell range(s) with the specified cell range.

		@param aRange
			contains the cell range for intersection.

		@return
			all cells of the current cell range(s) which are contained
			in the passed cell range.

	 */
	com::sun::star::sheet::XSheetCellRanges queryIntersection(
			[in] com::sun::star::table::CellRangeAddress aRange );

};

//=============================================================================

}; }; }; };

#endif

