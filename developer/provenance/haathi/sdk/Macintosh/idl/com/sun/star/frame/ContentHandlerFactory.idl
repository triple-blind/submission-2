/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_frame_ContentHandlerFactory_idl__
#define __com_sun_star_frame_ContentHandlerFactory_idl__

#ifndef __com_sun_star_lang_XMultiServiceFactory_idl__
#include <com/sun/star/lang/XMultiServiceFactory.idl>
#endif

#ifndef __com_sun_star_container_XNameAccess_idl__
#include <com/sun/star/container/XNameAccess.idl>
#endif

#ifndef __com_sun_star_container_XContainerQuery_idl__
#include <com/sun/star/container/XContainerQuery.idl>
#endif

//=============================================================================

module com { module sun { module star { module frame {

//=============================================================================
/** factory to create content loader

    <p>
    With this factory it's possible to
    <ul>
        <li>have access on configuration of set of registered content handler objects</li>
        <li>create a content handler by his internal name</li>
        <li>query for a content handler by using special query or property description.</li>
    </ul>
    </p>
 */
published service ContentHandlerFactory
{
	//-------------------------------------------------------------------------
    /** interface to create handler objects by using his internal name

		<p>
        Returned objects must support the service specification of a <type>ContentHandler</type>.
        They can be created by using of his internal name, which must be unambigous everytime, only.
        To get this name use further specified interfaces of this factory for access on
        the flat configuration.
        </p>
	*/
	interface com::sun::star::lang::XMultiServiceFactory;

	//-------------------------------------------------------------------------
    /** provides access to the whole content handler configuration

		<p>
        This interface supports an access to the internal configuration
        of all accessible handler objects. The return value of
        <member scope="com::sun::star::container">XNameAccess::getByName()</member> is a property sequence
        packed in an any.
        </p>
        <table border=1>
            <tr>
                <td><b>Types<b></td>
                <td>[string]</td>
                <td>file types for which handler is registered</td>
            </tr>
            <tr>
                <td><b>UIName<b></td>
                <td>[string]</td>
                <td>UI representable and localized name</td>
            </tr>
        </table>
    */
	interface com::sun::star::container::XNameAccess;

	//-------------------------------------------------------------------------
    /** supports query mode for configuration access

        <p>
        This interface can be used to get sub sets of current configuration entries
        which represent given search parameters.
        </p>
     */
    interface com::sun::star::container::XContainerQuery;
};

//=============================================================================

}; }; }; };

#endif
