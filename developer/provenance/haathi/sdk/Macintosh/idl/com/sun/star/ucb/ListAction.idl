/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_ucb_ListAction_idl__
#define __com_sun_star_ucb_ListAction_idl__


//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** This struct contains information needed in the notifications of a
	<type>XDynamicResultSet</type>.

	@see ListEvent
*/

published struct ListAction
{
	//-------------------------------------------------------------------------
	/** The position where something has happened (index begins with
	    <code>1</code> as usual with JDBC ).

		<p>Its value does not necessary indicate the new position in the new
		<type scope="com::sun::star::sdbc">XResultSet</type>, but a position
        while doing the changes step by step beginning with the old
        <type scope="com::sun::star::sdbc">XResultSet</type>.
	*/
	long Position;

	//-------------------------------------------------------------------------
	/** The count of involved rows.
	*/
	long Count;


	//-------------------------------------------------------------------------
	/** specifies the kind of modification happened to all assigned rows.

		<p>The value of the other members of this struct depend on the value
		of this member:

		<table border=1>
		<tr align=left> <th>ListActionType</th>
						<th>Position</th>
						<th>Count</th>
						<th>ActionInfo</th></tr>

		<tr align=left>	<td>WELCOME</td>
						<td>n/a</td>
						<td>n/a</td>
						<td><type>WelcomeDynamicResultSetStruct</type> required</td></tr>

		<tr align=left>	<td>CLEARED</td>
						<td>n/a</td>
						<td>n/a</td>
						<td>n/a</td></tr>

		<tr align=left>	<td>INSERTED</td>
						<td>required 1-x</td>
						<td>required 1-x</td>
						<td>allowed but not required... @todo </td></tr>

		<tr align=left>	<td>REMOVED</td>
						<td>required 1-x</td>
						<td>required 1-x</td>
						<td>n/a</td></tr>

		<tr align=left>	<td>MOVED</td>
						<td>required 1-x</td>
						<td>required 1-x</td>
						<td>type long required</td></tr>

		<tr align=left>	<td>PROPERTIES_CHANGED</td>
						<td>required 1-x</td>
						<td>required 1-x</td>
						<td>allowed but not required... @todo</td></tr>
		</table>

		<p>The value for this member can be one of the
		<type>ListActionType</type> constants group.
	*/
	long ListActionType;

	//-------------------------------------------------------------------------
	/** dependend on the content of <member>ListAction::ListActionType</member>
		the <member>ListAction::ActionInfo</member> could contain additional
		information about the changes happened (see table above).
	*/

	any ActionInfo;
};

//=============================================================================

}; }; }; };

#endif
