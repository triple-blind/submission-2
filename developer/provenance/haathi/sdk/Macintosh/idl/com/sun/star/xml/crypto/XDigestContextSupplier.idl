/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_xml_crypto_xdigestcontextsupplier_idl_
#define __com_sun_star_xml_crypto_xdigestcontextsupplier_idl_

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_beans_NamedValue_idl__
#include <com/sun/star/beans/NamedValue.idl>
#endif

#ifndef __com_sun_star_xml_crypto_XDigestContext_idl__
#include <com/sun/star/xml/crypto/XDigestContext.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

//============================================================================

 module com {  module sun {  module star {  module xml { module crypto {

//============================================================================
/** This interface allows to get an object to generate a digest of a specified
    format.

    @since OOo 3.4
 */
interface XDigestContextSupplier : com::sun::star::uno::XInterface
{
    //------------------------------------------------------------------------
    /** returns an object that allows to generate the specified digest.

        @param nDigestID
            the internal ID specifying the algorithm,
            should take value from <type>DigestID</type>
        
        @param aParams
            optional parameters that could be used to initialize the digest,
            for example, it could contain a key and etc.

        @throws ::com::sun::star::lang::IllegalArgumentException
            one of provided arguments is illegal
     */
    XDigestContext getDigestContext(
                [in] long nDigestID,
                [in] sequence< ::com::sun::star::beans::NamedValue > aParams )
        raises( ::com::sun::star::lang::IllegalArgumentException );
};

//============================================================================

}; }; }; }; };

#endif

