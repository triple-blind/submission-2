/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_ui_UIElementFactory_idl__
#define __com_sun_star_ui_UIElementFactory_idl__

#ifndef __com_sun_star_lang_XMultiComponentFactory_idl__
#include <com/sun/star/lang/XMultiComponentFactory.idl>
#endif

#ifndef __com_sun_star_ui_XUIElementFactoryRegistration_idl__
#include <com/sun/star/ui/XUIElementFactoryRegistration.idl>
#endif

//============================================================================= 

module com { module sun { module star { module ui {

//============================================================================= 

/** specifies a user interface factory manager that controls all registered user 
    interface element factories.
    
    <p>An implementation is usually obtained from a
    <type scope="com::sun::star::lang">ServiceManager</type>.
    </p>
    
    @since OOo 2.0
*/

service UIElementFactoryManager
{
    /** provides a function to create new instances of user interface elements.
    
        <p>
        A user interface element factory manager is also a user interface element factory. It 
        retrieves the responsible user interface element factory from the provided arguments and passes
        the arguments to it.
        
        see @XUIElementFactory
        </p>
     */
    interface XUIElementFactory;

    /** provides functions to query, retrieve, register and deregister user interface element factories.
    */
    interface XUIElementFactoryRegistration;
};

}; }; }; };

#endif
