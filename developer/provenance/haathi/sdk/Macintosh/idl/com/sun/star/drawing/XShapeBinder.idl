/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_drawing_XShapeBinder_idl__ 
#define __com_sun_star_drawing_XShapeBinder_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_drawing_XShape_idl__ 
#include <com/sun/star/drawing/XShape.idl> 
#endif 
 
#ifndef __com_sun_star_drawing_XShapes_idl__ 
#include <com/sun/star/drawing/XShapes.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module drawing {  
 
//============================================================================= 
 
/** connects or breaks the lines of <type>Shape</type>s
 */
published interface XShapeBinder: com::sun::star::uno::XInterface
{ 
	//------------------------------------------------------------------------- 
	 
	/** binds <type>Shape</type>s together.

		@param xShapes
			a container with <type>Shape</type>s that will be bind toghether.
			All <type>Shapes</type> will be converted to a <type>PolyPolygonBezierShape</type>
			and the lines will be connected. The <type>Shape</types>s in xShape will be
			removed from the <type>GenericDrawPage</type> and disposed.

		@returns
			a newly created <type>PolyPolygonBezierShape</type> which contains all
			line segment from the supplied <type>Shape</type>s. It is also added
			to the <type>GenericDrawPage</type> of the source <type>Shape</type>s.
	 */
	com::sun::star::drawing::XShape bind( [in] com::sun::star::drawing::XShapes xShapes ); 
 
	//------------------------------------------------------------------------- 
	 
	/** breaks a <type>Shape</type> into its line segments

		@param xShape
			the given <type>Shape</type> will be converted to a <type>PolyPolygonBezierShape</type>
			and the line segments of this <type>Shape</type> will be used to create
			new <type>PolyPolygonBezierShape</type> shapes. The original <type>Shape</type>
			will be removed from its <type>GenericDrawPage</type> and disposed.
	 */
	void unbind( [in] com::sun::star::drawing::XShape xShape ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 

