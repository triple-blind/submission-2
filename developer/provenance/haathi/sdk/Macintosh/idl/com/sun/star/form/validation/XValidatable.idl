/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_form_validation_XValidatable_idl__
#define __com_sun_star_form_validation_XValidatable_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_util_VetoException_idl__
#include <com/sun/star/util/VetoException.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module form { module validation {

interface XValidator;

//=============================================================================

/** specifies support for validating a component

    @see XValidator
*/
interface XValidatable : com::sun::star::uno::XInterface
{
	/** sets an external instance which is able to validate the component

        <p>Any previously active validator will be revoked - there can be only one!</p>

        @param Validator
            the new validator which is to be used by the component. May be <NULL/>,
            in this case only the current validator is revoked.

        @throws <type scope="com::sun::star::util">VetoException</type>
            if changing the validator is not allowed in the current component state
	 */
    void    setValidator( [in] XValidator Validator )
                raises ( com::sun::star::util::VetoException );

	/** retrieves the external instance which is currently used to validate the component
    */
    XValidator
            getValidator( );
};

//=============================================================================

}; }; }; }; };

#endif
