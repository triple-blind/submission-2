/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef	__com_sun_star_accessibility_XAccessibleEventBroadcaster_idl__
#define	__com_sun_star_accessibility_XAccessibleEventBroadcaster_idl__

#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 

module com { module sun { module star { module accessibility {

 published interface XAccessibleEventListener;

/** makes it possible to register listeners which are called whenever
	an accessibility event (see <type>AccessibleEventObject</type>) occurs.

	@see AccessibleEventObject
	@see XAccessibleEventListener

    @since OOo 1.1.2
 */
published interface XAccessibleEventBroadcaster: ::com::sun::star::uno::XInterface
{  
	//------------------------------------------------------------------------- 
		
	/** registers the given <type>XAccessibleEventListener</type>.
	 */
	[oneway] void addEventListener( [in] XAccessibleEventListener xListener ); 
 
	//------------------------------------------------------------------------- 
		
	/** unregisters the given <type>XAccessibleEventListener</type>.
	 */
	[oneway] void removeEventListener( [in] XAccessibleEventListener xListener ); 
};  
 
}; }; }; };

#endif
