/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_configuration_backend_XCompositeLayer_idl__
#define __com_sun_star_configuration_backend_XCompositeLayer_idl__

#ifndef __com_sun_star_configuration_backend_XLayer_idl__
#include <com/sun/star/configuration/backend/XLayer.idl>
#endif

#ifndef __com_sun_star_lang_NullPointerException_idl__
#include <com/sun/star/lang/NullPointerException.idl>
#endif 

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_lang_WrappedTargetException_idl__
#include <com/sun/star/lang/WrappedTargetException.idl>
#endif

#ifndef __com_sun_star_configuration_backend_MalformedDataException_idl__
#include <com/sun/star/configuration/backend/MalformedDataException.idl>
#endif

//==============================================================================

module com { module sun { module star { module configuration { module backend {

//==============================================================================

/**
  provides read access to layers that contain sublayers accessible through an 
  additional criterion (for instance the locale they contain data for).

    @since OOo 1.1.2
  */
published interface XCompositeLayer : XLayer 
{
    //--------------------------------------------------------------------------
    
    /**
      Returns a list of the criteria that can be used to access the
      sublayers.

      @return   
            a list supported sublayer identifiers

      @throws com::sun::star::lang::WrappedTargetException
            if an error occurs in the retrieval of the data.
      */
    sequence<string> listSubLayerIds() 
        raises (com::sun::star::lang::WrappedTargetException) ;
    
    //--------------------------------------------------------------------------
    
    /**
      Describes the content of a particular sublayer to
      an <type>XLayerHandler</type>.

      @param aHandler   
            Handler object that will receive calls 
            describing the contents of the sublayer.

      @param aSubLayerId    
            Identifier of the sublayer to be read.
            <p> Must be one the identifiers returned by
                <member>XCompositeLayer::listSubLayerIds()</member>
            </p>

      @throws com::sun::star::lang::NullPointerException
              if a <NULL/> handler is passed.
      @throws com::sun::star::lang::IllegalArgumentException
              if the identifier is invalid.
      @throws com::sun::star::lang::WrappedTargetException
              if an error occurs in the access to or processing of the data.
      @throws com::sun::star::configuration::backend::MalformedDataException
              if the data read from the layer is rejected as invalid by the
              <type>XLayerHandler</type>.
      */
    void readSubLayerData([in] XLayerHandler aHandler, [in] string aSubLayerId) 
        raises (com::sun::star::lang::NullPointerException,
                com::sun::star::lang::IllegalArgumentException,
                com::sun::star::lang::WrappedTargetException,
                MalformedDataException) ;

    //--------------------------------------------------------------------------
} ;

//==============================================================================

} ; } ; } ; } ; } ;
#endif 
