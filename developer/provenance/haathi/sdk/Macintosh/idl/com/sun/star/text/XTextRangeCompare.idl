/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_text_XTextRangeCompare_idl__ 
#define __com_sun_star_text_XTextRangeCompare_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__ 
#include <com/sun/star/lang/IllegalArgumentException.idl> 
#endif 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module text {  
 
 published interface XText; 
 published interface XTextRange; 
 
//============================================================================= 
 
// DocMerge from xml: interface com::sun::star::text::XTextRangeCompare
/** compares the positions of two <type>TextRange</type>s within a
	<type>Text</type>.
	
	
	
	<p>Only <type>TextRange</type> instances within the same <type>Text</type>
	can be compared.
	</p>
 */
published interface XTextRangeCompare: com::sun::star::uno::XInterface
{ 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from idl: method com::sun::star::text::XTextRangeCompare::compareRegionStarts
	/** @returns 
					1 if <var>xR1</var> starts before <var>xR2</var>, 
					0 if <var>xR1</var> starts at the same position as <var>xR2</var> and 
					-1 if <var>xR1</var> starts behind <var>xR2</var>. 
		 
				@throws com::sun::star::lang::IllegalArgumentException 
					if either <var>xR1</var> or <var>xR2</var> is not within this 
					text.
	 */
	short compareRegionStarts( [in] XTextRange xR1, [in] XTextRange xR2 ) 
			raises( com::sun::star::lang::IllegalArgumentException ); 
 
	//------------------------------------------------------------------------- 
	 
	// DocMerge from idl: method com::sun::star::text::XTextRangeCompare::compareRegionEnds
	/** @returns 
					1, if <var>xR1</var> ends before <var>xR2</var>, 
					0, if <var>xR1</var> ends at the same position as <var>xR2</var> and 
					-1, if <var>xR1</var> ends behind <var>xR2</var>. 
		 
				@throws com::sun::star::lang::IllegalArgumentException 
					if either <var>xR1</var> or <var>xR2</var> is not within this 
					text.
	 */
	short compareRegionEnds( [in] XTextRange xR1, [in] XTextRange xR2 ) 
			raises( com::sun::star::lang::IllegalArgumentException ); 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
