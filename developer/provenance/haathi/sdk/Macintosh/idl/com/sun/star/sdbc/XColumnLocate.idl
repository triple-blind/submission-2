/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sdbc_XColumnLocate_idl__ 
#define __com_sun_star_sdbc_XColumnLocate_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_sdbc_SQLException_idl__ 
#include <com/sun/star/sdbc/SQLException.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbc { 
 
 published interface XResultSetMetaData; 
 
 
/** provides the possibility to find columns by their name.
	
	
	<p>
	When several columns have the same name, then the value
	of the first matching column will be returned. The column name option is
	designed to be used when column names are used in the SQL
	query. For columns that are NOT explicitly named in the query, it
	is best to use column numbers. If column names are used, there is
	no way for the programmer to guarantee that they actually refer to
	the intended columns.
	</p>
 */
published interface XColumnLocate: com::sun::star::uno::XInterface
{ 
	 
	/** maps the given Resultset column name to its ResultSet column index.
		@param columnName
			the name of the column
		@returns
			the position of the column
		@throws SQLException 
				if a database access error occurs.
	 */
	long findColumn([in]string columnName) raises (SQLException); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
