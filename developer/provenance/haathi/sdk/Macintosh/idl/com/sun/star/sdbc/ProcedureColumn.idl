/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sdbc_ProcedureColumn_idl__ 
#define __com_sun_star_sdbc_ProcedureColumn_idl__ 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
/** indicates the type of a procedure column.
 */
published constants ProcedureColumn
{ 
	 
	/** indicates that the type of the column is unknown. A possible value for 
			 the column 
			 <code>COLUMN_TYPE</code>
			 in the 
			 <type scope="com::sun::star::sdbc">XResultSet</type>
			 returned by the method 
			 <member scope="com::sun::star::sdbc">XDatabaseMetaData::getProcedureColumns()</member>
			 .
	 */
	const long UNKNOWN		 	= 0; 
    //------------------------------------------------------------------------- 
	 
	/** indicates that the column stores IN parameters. 
			 A possible value for the column 
		     <code>COLUMN_TYPE</code>
			 in the 
			 <type scope="com::sun::star::sdbc">XResultSet</type>
			 returned by the method
			 <member scope="com::sun::star::sdbc">XDatabaseMetaData::getProcedureColumns()</member>
			 .
	 */
	const long IN				= 1; 
    //------------------------------------------------------------------------- 
	 
	/** indicates that the column stores INOUT parameters. 
			 A possible value for the column 
		     <code>COLUMN_TYPE</code>
			 in the
			 <type scope="com::sun::star::sdbc">XResultSet</type>
			 returned by the method
			 <member scope="com::sun::star::sdbc">XDatabaseMetaData::getProcedureColumns()</member>
			 .
	 */
	const long INOUT		 	= 2; 
    //------------------------------------------------------------------------- 
	 
	/** indicates that the column stores results. 
			 A possible value for the column 
		     <code>COLUMN_TYPE</code>
			 in the
			 <type scope="com::sun::star::sdbc">XResultSet</type>
			 returned by the method
			 <member scope="com::sun::star::sdbc">XDatabaseMetaData::getProcedureColumns()</member>
			 .
	 */
	const long RESULT 			= 3; 
    //------------------------------------------------------------------------- 
	 
	/** indicates that the column stores OUT parameters. 
			 A possible value for the column 
		     <code>COLUMN_TYPE</code>
			 in the
			 <type scope="com::sun::star::sdbc">XResultSet</type>
			 returned by the method
			 <member scope="com::sun::star::sdbc">XDatabaseMetaData::getProcedureColumns()</member>
			 .
	 */
	const long OUT		 		= 4; 
    //------------------------------------------------------------------------- 
	 
	/** Indicates that the column stores return values. 
			 A possible value for the column 
		     <code>COLUMN_TYPE</code>
			 in the
			 <type scope="com::sun::star::sdbc">XResultSet</type>
			 returned by the method
			 <member scope="com::sun::star::sdbc">XDatabaseMetaData::getProcedureColumns()</member>
			 .
	 */
	const long RETURN 			= 5; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
