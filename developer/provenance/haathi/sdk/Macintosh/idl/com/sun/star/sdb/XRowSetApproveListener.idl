/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sdb_XRowSetApproveListener_idl__ 
#define __com_sun_star_sdb_XRowSetApproveListener_idl__ 
 
#ifndef __com_sun_star_lang_XEventListener_idl__ 
#include <com/sun/star/lang/XEventListener.idl> 
#endif 
 
#ifndef __com_sun_star_sdb_RowChangeEvent_idl__ 
#include <com/sun/star/sdb/RowChangeEvent.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdb { 
 
 
/** is used for approving the moving and changing of rowset actions.
 */
published interface XRowSetApproveListener: com::sun::star::lang::XEventListener
{ 
	 
	/** is called before a rowset's cursor is moved.
		@param event
			the event which happend
		@returns <TRUE/> when moving is allowed, otherwise <FALSE/>
	 */
	boolean approveCursorMove([in]com::sun::star::lang::EventObject event); 
	//------------------------------------------------------------------------- 
     
	/** is called before a row is inserted, updated, or deleted.
		@param event
			the event which happend
		@returns <TRUE/> when changing is allowed, otherwise <FALSE/>	 
	 */
	boolean approveRowChange([in]RowChangeEvent event); 
	//------------------------------------------------------------------------- 
     
	/** is called before a rowset is changed, or in other words
		before a rowset is reexecuted.
		@param event
			the event which happend
		@returns <TRUE/> when changing is allowed, otherwise <FALSE/>	 
	*/
	boolean approveRowSetChange([in]com::sun::star::lang::EventObject event); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
