/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_frame_XNotifyingDispatch_idl__
#define __com_sun_star_frame_XNotifyingDispatch_idl__

#ifndef __com_sun_star_frame_XDispatch_idl__
#include <com/sun/star/frame/XDispatch.idl>
#endif

#ifndef __com_sun_star_frame_XDispatchResultListener_idl__
#include <com/sun/star/frame/XDispatchResultListener.idl>
#endif
//=============================================================================

module com {  module sun {  module star {  module frame {

//=============================================================================
/** dispatch with guaranteed notify (instead of <type>XDispatch</type>)

    @see XDispatch
    @see XStatusListener
 */
published interface XNotifyingDispatch: XDispatch
{
	//-------------------------------------------------------------------------
    /** Do the same like <member>XDispatch::dispatch()</member> but notifies
        listener in every case. Should be used if result must be known.

        @param URL
            full parsed URL describes the feature which should be dispatched (executed)

        @param Arguments
            optional arguments for this request
            (see <type scope="com::sun::star::document">MediaDescriptor</type>)

        @param Listener
            optional listener for guaranteed notifications of this request
    */
    [oneway] void dispatchWithNotification(
        [in] com::sun::star::util::URL URL,
        [in] sequence<com::sun::star::beans::PropertyValue> Arguments,
        [in] XDispatchResultListener Listener);
};

//=============================================================================

}; }; }; };

#endif
