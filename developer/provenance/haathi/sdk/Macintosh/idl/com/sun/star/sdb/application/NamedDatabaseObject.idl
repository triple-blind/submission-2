/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sdb_application_NamedDatabaseObject_idl__
#define __com_sun_star_sdb_application_NamedDatabaseObject_idl__

//=============================================================================

module com { module sun { module star { module sdb { module application { 

//=============================================================================

/** denotes a named database object, or a named folder of database objects
    
    @since OOo 3.0
*/
struct NamedDatabaseObject
{
    /** denotes the type of the object.

        <p>This member is one of the <type>DatabaseObject</type> or <type>DatabaseObjectContainer</type> constants.</p>
    */
    long    Type;

    /** denotes the name of the object

        <p>In case of forms, reports, form folders and report folders, this is the hierarchical
        path to the object, where the path elements are separated by a slash (<code>/</code>).</p>

        <p>In case of tables, this is the fully qualified name of the table, as required
        by the database's table name composition rules.</p>

        <p>In case of queries, this is the name of the query.</p>

        <p>In case of virtual folders denoted by <member>DatabaseObjectContainer::CATALOG</member> and
        <member>DatabaseObjectContainer::SCHEMA</member>, it is
        <ul><li><code>&lt;schema&gt;</code>, if the database supports schemas only</li>
            <li><code>&lt;catalog&gt;</code>, if the database supports catalogs only</li>
            <li><code>&lt;catalog&gt;.&lt;schema&gt;</code>, if the database supports both
            catalogs and schemas, and catalogs are to appear at the beginning of an identifier.</li>
            <li><code>&lt;schema&gt;.&lt;catalog&gt;</code>, if the database supports both
            catalogs and schemas, and catalogs are to appear at the end of an identifier.</li>
        </ul>
        </p>

        <p>In case of the virtual folders denoted by <member>DatabaseObjectContainer::TABLES</member>,
        <member>DatabaseObjectContainer::QUERIES</member>, <member>DatabaseObjectContainer::DATA_SOURCE</member>,
        <member>DatabaseObjectContainer::FORMS</member> or <member>DatabaseObjectContainer::REPORTS</member>,
        this denotes the name of the data source (as denoted by
        <member scope="com::sun::star::sdb">DataSource::Name</member>)</p>

        @see XDatabaseMetaData::isCatalogAtStart
        @see DatabaseObjectContainer
    */
    string  Name;
};

//=============================================================================

}; }; }; }; }; 

//=============================================================================

#endif
