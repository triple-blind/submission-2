/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_ActionEvent_idl__ 
#define __com_sun_star_awt_ActionEvent_idl__ 
 
#ifndef __com_sun_star_lang_EventObject_idl__ 
#include <com/sun/star/lang/EventObject.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 
 
/** a semantic event which indicates that a component-defined action occurred.
	
	<p>This high-level event is generated by a component (such as a Button)
	when the component-specific action occurs (such as being pressed). 
	The event is passed to every <type>XActionListener</type> object 
	that registered to receive such events using the component's 
	<code>addActionListener</code> method.</p>
    
	<p>The object that implements the <type>XActionListener</type> interface 
	gets this ActionEvent when the event occurs. The listener is therefore 
	spared the details of processing individual mouse movements and mouse 
	clicks, and can instead process a "meaningful" (semantic) event like 
	"button pressed".</p>
 */
published struct ActionEvent: com::sun::star::lang::EventObject
{ 
	//------------------------------------------------------------------------- 
		
	/** contains the command string associated with this action.
	 */
	string ActionCommand; 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
