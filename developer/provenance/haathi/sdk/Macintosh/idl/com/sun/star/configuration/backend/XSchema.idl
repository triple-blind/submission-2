/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_configuration_backend_XSchema_idl__
#define __com_sun_star_configuration_backend_XSchema_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif 

#ifndef __com_sun_star_configuration_backend_XSchemaHandler_idl__
#include <com/sun/star/configuration/backend/XSchemaHandler.idl>
#endif 

#ifndef __com_sun_star_lang_NullPointerException_idl__
#include <com/sun/star/lang/NullPointerException.idl>
#endif 

#ifndef __com_sun_star_lang_WrappedTargetException_idl__
#include <com/sun/star/lang/WrappedTargetException.idl>
#endif 

#ifndef __com_sun_star_configuration_backend_MalformedDataException_idl__
#include <com/sun/star/configuration/backend/MalformedDataException.idl>
#endif

//============================================================================= 

module com { module sun { module star { module configuration { module backend {

//============================================================================= 

/** 
  Handles access to the elements of a component schema,
  i.e its templates and its component definition.

    @since OOo 1.1.2
*/
published interface XSchema : ::com::sun::star::uno::XInterface 
{
	//------------------------------------------------------------------------- 

    /** 
      Describes the full schema (templates + component) to a 
      <type>XSchemaHandler</type>.

      @param aHandler   
            schema handler that will receive calls 
            describing the contents of the templates
            and the component definition

      @throws com::sun::star::lang::NullPointerException
              if a <NULL/> handler is passed.
      @throws com::sun::star::lang::WrappedTargetException
              if an error occurs in the access to or processing of the data or
			  if a subsequent call to any of the <type>XSchema</type>methods is made.
			  The elements of a component schema are only parsed once,a repeat call 
			  leads to exception.
      @throws com::sun::star::configuration::backend::MalformedDataException
              if the data read from the layer is rejected as invalid by the
              <type>XSchemaHandler</type>.
	*/
    void readSchema([in] XSchemaHandler aHandler)
        raises (com::sun::star::lang::NullPointerException,
                com::sun::star::lang::WrappedTargetException,
                MalformedDataException) ;

	//------------------------------------------------------------------------- 

    /**
      Describes only the component definition to a <type>XSchemaHandler</type>.

      @param aHandler   
            schema handler that will receive calls 
            describing the contents of the component
            definition

      @throws com::sun::star::lang::NullPointerException
              if a <NULL/> handler is passed.
      @throws com::sun::star::lang::WrappedTargetException
              if an error occurs in the access to or processing of the data or
			  if a subsequent call to any of the <type>XSchema</type>methods is made.
			  The elements of a component schema are only parsed once,a repeat call 
			  leads to exception.
      @throws com::sun::star::configuration::backend::MalformedDataException
              if the data read from the layer is rejected as invalid by the
              <type>XSchemaHandler</type>.
	*/
    void readComponent([in] XSchemaHandler aHandler)
        raises (com::sun::star::lang::NullPointerException,
                com::sun::star::lang::WrappedTargetException,
                MalformedDataException) ;

	//------------------------------------------------------------------------- 

    /** 
      Describes the component templates to a <type>XSchemaHandler</type>.

      @param aHandler   
            schema handler that will receive calls 
            describing the contents of the templates

      @throws com::sun::star::lang::NullPointerException
              if a <NULL/> handler is passed.
      @throws com::sun::star::lang::WrappedTargetException
              if an error occurs in the access to or processing of the data or
			  if a subsequent call to any of the <type>XSchema</type>methods is made.
			  The elements of a component schema are only parsed once,a repeat call 
			  leads to exception.
      @throws com::sun::star::configuration::backend::MalformedDataException
              if the data read from the layer is rejected as invalid by the
              <type>XSchemaHandler</type>.
	*/
    void readTemplates([in] XSchemaHandler aHandler)
        raises (com::sun::star::lang::NullPointerException,
                com::sun::star::lang::WrappedTargetException,
                MalformedDataException) ;

	//------------------------------------------------------------------------- 
} ;

//============================================================================= 

} ; } ; } ; } ; } ;
#endif 
