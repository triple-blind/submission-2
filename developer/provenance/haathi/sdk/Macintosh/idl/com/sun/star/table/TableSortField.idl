/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_table_TableSortField_idl__ 
#define __com_sun_star_table_TableSortField_idl__ 
 
#ifndef __com_sun_star_lang_Locale_idl__ 
#include <com/sun/star/lang/Locale.idl> 
#endif 
#ifndef __com_sun_star_table_TableSortFieldType_idl__ 
#include <com/sun/star/table/TableSortFieldType.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module table {  
 
//============================================================================= 
/** describes how to sort a single field (row/column) in a tables 
    sort descriptor.

    @see com::sun::star::table::TableSortDescriptor2

	@since OOo 1.1.2
 */
published struct TableSortField
{
    //------------------------------------------------------------------------- 
    /** index of the row or column in the table to be sorted; 0-based.
     */
    long Field; 
 
    //------------------------------------------------------------------------- 
    /** <TRUE/> if data are sorted in ascending order,
        <FALSE/> if in descending order.
     */
    boolean IsAscending; 
 
    //------------------------------------------------------------------------- 
    /** specifies if the case of letters is important when comparing entries.
     */
    boolean IsCaseSensitive; 

    //------------------------------------------------------------------------- 
    /** type of contents in the field.

        <p>If the value is 
        <member scope="com::sun::star::table::TableSortFieldType">AUTOMATIC</member>
        the algorithm used for sorting is application specific.
        Especially it may or may not use the values given by 
        'CollatorLocale' and 'CollatorAlgorithm'.</p>
     */
    com::sun::star::table::TableSortFieldType FieldType; 

    //------------------------------------------------------------------------- 
    /** the locale used by the collator when comparing/sorting text.
        
        <p>This property will not be used when the 'FieldType' is
        <member scope="com::sun::star::table::TableSortFieldType">NUMERIC</member>
        </p>

        @ see   com::sun::star::i18n::XCollator
	 */
    com::sun::star::lang::Locale CollatorLocale; 
 
    //------------------------------------------------------------------------- 
    /** the algorithm used by the collator when comparing/sorting text.

        <p>This property will not be used when the 'FieldType' is
        <member scope="com::sun::star::table::TableSortFieldType">NUMERIC</member>
        </p>

        @ see   com::sun::star::i18n::XCollator
     */
    string CollatorAlgorithm; 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
