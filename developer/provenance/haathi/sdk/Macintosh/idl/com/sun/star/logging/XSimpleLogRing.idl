/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_logging_XSimpleLogRing_idl__
#define __com_sun_star_logging_XSimpleLogRing_idl__

#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module logging { 

//=============================================================================

/** a simple log ring allowing to collect a limited number of last events

    <p>
    The intention of this interface is to provide a simple possibility
    for developer to collect the most important events without affecting
    the performance. For this reasons the messages related API is quite
    simple, the strings should be produced by the preprocessor mainly.
    </p>

    @since OOo 3.2
 */
interface XSimpleLogRing
{
    /** allows to add a message to the logger
     */
    void logString( [in] string aMessage );

    /** allows to get the collected messages from the logger
        
        <p> 
        It is up to logger implementation to provide only the limited
        number of last messages.
        </p>
     */
    sequence< string > getCollectedLog();
};

//=============================================================================

}; }; }; }; 

//=============================================================================

#endif
