/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_ucb_XSourceInitialization_idl__
#define __com_sun_star_ucb_XSourceInitialization_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_ucb_AlreadyInitializedException_idl__
#include <com/sun/star/ucb/AlreadyInitializedException.idl>
#endif

//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** provides the initialization of a component with any source object.
*/

published interface XSourceInitialization: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/**	provides the initialization of a component with any source object.

		<p>The service description has to specify which type of interface must
		be set as parameter.

		<p>Hopefully you will only use this, when <var>Source</var>
		is an <type scope="com::sun::star::lang">XComponent</type> and this
		is an <type scope="com::sun::star::lang">XEventListener</type>.
		Than you should call
		<member scope="com::sun::star::lang">XComponent::addEventListener()</member>
		from inside the implementation of this method.

		@param Source
		the source.

		@throws AlreadyInitializedException
		if this method is called more than once during the lifetime of the
		object implementing this interface.

	*/
	void setSource(	[in] com::sun::star::uno::XInterface Source )
		 raises (AlreadyInitializedException);
};

//=============================================================================

}; }; }; };

#endif
