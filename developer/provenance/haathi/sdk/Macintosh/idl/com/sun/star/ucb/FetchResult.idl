/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_ucb_FetchResult_idl__
#define __com_sun_star_ucb_FetchResult_idl__

//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** contains data of several rows of a <type>ContentResultSet</type>.

	<p>This struct is returned from <member>XFetchProvider::fetch</member>,
	for example.
*/

published struct FetchResult
{
	//-------------------------------------------------------------------------
    /** contains the demanded data.

		<p>One any contains the data of one whole row. Those methods which
		use this struct have to specify, what the any has to contain.
	*/
	sequence< any >	Rows;

	//-------------------------------------------------------------------------
    /** indicates the index of the first row contained in
        <member>FetchResult::Rows</member> in the original resultset. So if
        <member>FetchResult::StartIndex</member> equals <code>3</code>, the
        first element in the sequence <member>FetchResult::Rows</member>
        contains the data of the index <code>3</code> in the original resultset.

		<p>The following rows are one after the other, but the direction
        depends on the value of <member>FetchResult::Direction</member>
	*/
	long StartIndex;

	//-------------------------------------------------------------------------
	/** indicates the orientation in which the rows are fetched and set into
        the sequence <member>FetchResult::Rows</member>.

        <p>When <member>FetchResult::Orientation</member> equals <TRUE/>, the
        rows in <member>FetchResult::Rows</member> are ordered in the same way
        as in the original resultset.
	*/
	boolean	Orientation;

	//-------------------------------------------------------------------------
	/** indicates whether and which error has occured, while fetching.

		<p>The value may contain zero or more constants of the
		<type>FetchError</type> constants group.
	*/
	short FetchError;
};

//=============================================================================

}; }; }; };

#endif
