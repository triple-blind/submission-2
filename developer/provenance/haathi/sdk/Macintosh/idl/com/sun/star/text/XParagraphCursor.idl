/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_text_XParagraphCursor_idl__ 
#define __com_sun_star_text_XParagraphCursor_idl__ 
 
#ifndef __com_sun_star_text_XTextCursor_idl__ 
#include <com/sun/star/text/XTextCursor.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module text {  
 
//============================================================================= 
 
/** makes it possible to move paragraph by paragraph.
 */
published interface XParagraphCursor: com::sun::star::text::XTextCursor
{ 
	//------------------------------------------------------------------------- 
	 
	/** determines if the cursor is positioned at the start of a paragraph.
	 */
	boolean isStartOfParagraph(); 
 
	//------------------------------------------------------------------------- 
	 
	/** determines if the cursor is positioned at the end of a paragraph.
	 */
	boolean isEndOfParagraph(); 
 
	//------------------------------------------------------------------------- 
	 
	/** moves the cursor to the start of the current paragraph.

        @returns
            <true/> if the cursor is now at the start of a paragraph, 
            <false/> otherwise. If <false/> was returned the cursor
            will remain at its original position.
     */
	boolean gotoStartOfParagraph( [in] boolean bExpand ); 
 
	//------------------------------------------------------------------------- 
	 
	/** moves the cursor to the end of the current paragraph.

        @returns
            <true/> if the cursor is now at the end of a paragraph, 
            <false/> otherwise. If <false/> was returned the cursor
            will remain at its original position.
     */
	boolean gotoEndOfParagraph( [in] boolean bExpand ); 
 
	//------------------------------------------------------------------------- 
	 
	/** moves the cursor to the next paragraph.

        @returns
            <true/> if the cursor was moved. It returns <false/> it the
            cursor can not advance further.
	 */
	boolean gotoNextParagraph( [in] boolean bExpand ); 
 
	//------------------------------------------------------------------------- 
	 
	/** moves the cursor to the previous paragraph.

        @returns
            <true/> if the cursor was moved. It returns <false/> it the
            cursor can not advance further.
	 */
	boolean gotoPreviousParagraph( [in] boolean bExpand ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
