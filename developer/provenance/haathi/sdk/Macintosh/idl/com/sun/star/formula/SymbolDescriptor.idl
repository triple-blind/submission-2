/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_formula_Symbol_idl__
#define __com_sun_star_formula_Symbol_idl__
 
//============================================================================= 
 
 module com {  module sun {  module star {  module formula { 
 
//============================================================================= 
/** @deprecated draft
    - nWeight should be changed to float as in FontWeight.idl
    - nItalic probably needs to have FontItalic extended by the two
      extra defines REVERSE_* listed in FontSlant.idl
    - nCharSet should have the CharSet.idl extended by the new defines
      from rtl/textenc.h
*/
published struct SymbolDescriptor
{
	/** The name of the symbol.
	*/
	string sName;

	/** The export name of the symbol.
	*/
	string sExportName;

    /** Specifies the name of the symbol set to which this symbol belongs.
	*/
	string sSymbolSet;

	/** Specifies the unicode character of the symbol.
	*/
	long nCharacter;

	/** Specifies the exact name of the font ("Arial", "Courier", etc.).
	*/
	string sFontName;

	/** Specifies the character set which is supported by the font.
        
        @see   <type scope="com::sun::star::awt">CharSet</type>
	*/
	short nCharSet;

	/** Specifies the general style of the font.
    
        @see   <type scope="com::sun::star::awt">FontFamily</type>
    */
	short nFamily;

	/** Specifies the pitch of the font.
    
        @see   <type scope="com::sun::star::awt">FontPitch</type>
	*/
	short nPitch;

	/** Specifies the thickness of the line.
    
        @see   <type scope="com::sun::star::awt">FontWeight</type>

        The allowed integer values correspond as follows:
        0 : <member scope="com::sun::star::awt">FontWeight::DONTKNOW</member>
        1 : <member scope="com::sun::star::awt">FontWeight::THIN</member>
        2 : <member scope="com::sun::star::awt">FontWeight::ULTRALIGHT</member>
        3 : <member scope="com::sun::star::awt">FontWeight::LIGHT</member>
        4 : <member scope="com::sun::star::awt">FontWeight::SEMILIGHT</member>
        5 : <member scope="com::sun::star::awt">FontWeight::NORMAL</member>
        7 : <member scope="com::sun::star::awt">FontWeight::SEMIBOLD</member>
        8 : <member scope="com::sun::star::awt">FontWeight::BOLD</member>
        9 : <member scope="com::sun::star::awt">FontWeight::ULTRABOLD</member>
        10 : <member scope="com::sun::star::awt">FontWeight::BLACK</member>
        
	*/
	short nWeight;

	/** Specifies if the font is italic.
    
        @see   <type scope="com::sun::star::awt">FontSlant</type>

        The values
        <member cope"com::sun::star::awt">FontSlant::REVERSE_OBLIQUE</member> and 
        <member scope="com::sun::star::awt">FontSlant::REVERSE_ITALIC</member> 
        may not be used.
	*/
	short nItalic;
};
}; }; }; }; 
#endif 
