/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_tree_TreeDataModelEvent_idl__
#define __com_sun_star_awt_tree_TreeDataModelEvent_idl__

#ifndef __com_sun_star_lang_EventObject_idl__
#include <com/sun/star/lang/EventObject.idl>
#endif

#ifndef __com_sun_star_awt_tree_XTreeNode_idl__
#include <com/sun/star/awt/tree/XTreeNode.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module awt { module tree {

//=============================================================================

/** An event used by a <type>XTreeDataModel</type> to notify changes in the data
    model to the <type>XTreeControl</type>.
    You usually need to fill this event only if you implement the <type>XTreeDataModel</type>
    yourself.

    @see XTreeDataModel
    @see XTreeControl
    @see XTreeDataModelListener
 */
published struct TreeDataModelEvent : ::com::sun::star::lang::EventObject
{
    /** contains the changed, added or removed nodes.
        <p> All nodes must have <member>ParentNode</member> as parent. */
    sequence< XTreeNode > Nodes;

    /** holds the parent node for changed, added or removed nodes.
        <p> If this is null, <member>Nodes</member> must contain only the root node */
    XTreeNode ParentNode;
};

//=============================================================================

}; }; }; }; };

#endif
