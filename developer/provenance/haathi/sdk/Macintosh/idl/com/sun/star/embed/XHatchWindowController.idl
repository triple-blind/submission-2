/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_embed_XHatchWindowController_idl__
#define __com_sun_star_embed_XHatchWindowController_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_awt_Rectangle_idl__
#include <com/sun/star/awt/Rectangle.idl>
#endif

//============================================================================

 module com {  module sun {  module star {  module embed {

//============================================================================

/** specifies the operations for a hatch window.

	<p>
	A hatch window owner is responsible to handle resize/move requests
	sent by the window. It is also responsible to validate tracking
	rectangle size.
    </p>
 */
published interface XHatchWindowController: com::sun::star::uno::XInterface
{
	//------------------------------------------------------------------------
	/** requests window owner to resize/move the window.

		@param aRect
			the new requested position and size of the window
	 */
	void requestPositioning( [in] com::sun::star::awt::Rectangle aRect );

	//------------------------------------------------------------------------
	/** returns the closest valid rectangle to the provided one.

		@param aRect
			a new selected position and size of the tracking rectangle

		@returns
			the closest valid position and size to the provided one
	 */
	com::sun::star::awt::Rectangle calcAdjustedRectangle(
					[in] com::sun::star::awt::Rectangle aRect );

    void activated();
    void deactivated();
};

//============================================================================

}; }; }; };

#endif

