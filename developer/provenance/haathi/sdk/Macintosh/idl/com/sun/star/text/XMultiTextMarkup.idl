/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_text_XMultiTextMarkup_idl__
#define __com_sun_star_text_XMultiTextMarkup_idl__

#ifndef __com_sun_star_container_XStringKeyMap_idl__
#include <com/sun/star/container/XStringKeyMap.idl>
#endif

#ifndef __com_sun_star_text_TextMarkupDescriptor_idl__
#include <com/sun/star/text/TextMarkupDescriptor.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module text {

//=============================================================================

/** provides functionality to apply multiple text markups in one call.

    @since OOo 3.0.1
 */

interface XMultiTextMarkup
{
    //-------------------------------------------------------------------------
    /** submits multiple new markup ranges.
        
        <p>The main use of this function will probably be for proofreading to 
        allow for setting the markup of all found errors in a sentence in a single
        call. For this the sequence needs to provide the markups for all errors along
        with the markup for the identified sentence boundaries.
        The order of those entries is arbitrary.</p>
     
        @param aMarkups
                a sequence of single text markups.
        
        @see com::sun::star::text::XTextMarkup
        @see com::sun::star::text::TextMarkupType
     
     */
    void commitMultiTextMarkup( 
					[in] sequence< com::sun::star::text::TextMarkupDescriptor > aMarkups )
            raises( com::sun::star::lang::IllegalArgumentException ); 
};

}; }; }; };

#endif
