/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_sdb_DefinitionContainer_idl__
#define __com_sun_star_sdb_DefinitionContainer_idl__

 module com {  module sun {  module star {  module container {
 published interface XNameAccess;
 published interface XNameContainer;
 published interface XIndexAccess;
 published interface XEnumerationAccess;
};};};};

 module com {  module sun {  module star {  module util {
 published interface XRefreshable;
};};};};
 module com {  module sun {  module star {  module lang {
 published interface XSingleServiceFactory;
};};};};

 module com {  module sun {  module star {  module sdb {


/** describes a container which provides access to database related definitions like
	commands, forms, and reports.

	<p>
	The container supports access to its elements by the elements name or
	by the elements position.
	</p>
	<p>
	Simple enumeration must be supported as well.
	</p>
	<p>
	To reflect the changes with the underlying database, a refresh mechanism
	needs to be supported. 
	</p>
 */
published service DefinitionContainer
{
	// gives access to the elements by name.
	interface com::sun::star::container::XNameAccess;

	// allows to insert and remove by name.
	interface com::sun::star::container::XNameContainer;

	// gives access to the elements by index.
	interface com::sun::star::container::XIndexAccess;

	// allows to create an enumeration of the elements.
	interface com::sun::star::container::XEnumerationAccess;


	/** is used to refresh the container, to reflect changes in the underlying database.
	 */
	[optional] interface com::sun::star::util::XRefreshable;

	/** can be used to create container elements.
		<p>
		If this interface is supported, the object created using it (e.g., the object returned by
		<method scope="com.sun.star.lang">XSingleServiceFactory::createInstance()</method>
		) can be used as container elements.
		</p>
	 */
	[optional] interface com::sun::star::lang::XSingleServiceFactory;
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif
