/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_container_XImplicitIDContainer_idl__ 
#define __com_sun_star_container_XImplicitIDContainer_idl__ 
 
#ifndef __com_sun_star_container_XImplicitIDReplace_idl__ 
#include <com/sun/star/container/XImplicitIDReplace.idl> 
#endif 
 
#ifndef __com_sun_star_container_NoSuchElementException_idl__ 
#include <com/sun/star/container/NoSuchElementException.idl> 
#endif 
 
#ifndef __com_sun_star_lang_WrappedTargetException_idl__ 
#include <com/sun/star/lang/WrappedTargetException.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module container {  
 
/** makes it possible to insert and remove elements in/from a container 
	using an implicit (unique) ID.
 */
published interface XImplicitIDContainer: com::sun::star::container::XImplicitIDReplace
{  
	/** adds a new object to the container and generates an implicit (unique)
		ID for this object.

		@returns
			the implicit ID for the new object.
	 */
	string addWithImplicitID( [in] any aElement );
	
	/** removes an object from the container which is specified by
		an implicit (unique) identifier.
	 */
	void removeByImplicitID( [in] string ID ) 
		raises( com::sun::star::container::NoSuchElementException ); 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
