/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_ucb_XRemoteContentProviderSupplier_idl__
#define __com_sun_star_ucb_XRemoteContentProviderSupplier_idl__

#ifndef __com_sun_star_lang_XMultiServiceFactory_idl__
#include <com/sun/star/lang/XMultiServiceFactory.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif


//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** Provide access to a collection of remote content providers.

	@version 1.0
	@author Stephan Bergmann
	@see XRemoteContentProviderAcceptor
*/
published interface XRemoteContentProviderSupplier: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** Get a factory through which a remote content provider's
		<type>UniversalContentBroker</type> service can be instantiated.

		@param Identifier  An arbitrary identifier uniquely identifying a
		remote content provider.

		@return  the appropriate factory, or null if none is available.
	*/
	com::sun::star::lang::XMultiServiceFactory
	queryRemoteContentProvider([in] string Identifier);
};

//=============================================================================

}; }; }; };

#endif
