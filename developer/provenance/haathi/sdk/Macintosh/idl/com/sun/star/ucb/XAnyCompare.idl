/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_ucb_XAnyCompare_idl__
#define __com_sun_star_ucb_XAnyCompare_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** compares two <atom>any</atom>s.
*/

published interface XAnyCompare: com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/**	allows comparision of two <atom>any</atom>s.

		@param Any1
		is the first compare value

		@param Any2
		is the second compare value

		@returns
		<ul>
		<li>
		<code>-1</code>, if the first any is less than the second ( Any1 &lt; Any2 )
		</li>
		<li>
		<code>0</code>, if the first any is equal to the second ( Any1 == Any2 )
		</li>
		<li>
		<code>+1</code>, if the first any is greater than the second ( Any1 &gt; Any2 )
		</li>
		</ul>
	*/

	short	compare( [in] any Any1, [in] any Any2 );
};

//=============================================================================

}; }; }; };

#endif
