/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_bridge_OleObjectFactory_idl__ 
#define __com_sun_star_bridge_OleObjectFactory_idl__ 
 
#ifndef __com_sun_star_lang_XMultiServiceFactory_idl__ 
#include <com/sun/star/lang/XMultiServiceFactory.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module bridge {  
 
//============================================================================= 
 
/** makes it possible to create COM objects as UNO objects.
	
	<p>A COM object must have a ProgId since the ProgId is used as argument for
	XMultiServiceFactory::createInstance. The only interfaces which are mapped
	are <code>IUnknown</code> and <code>IDispatch</code>.
	The created UNO objects support <type scope="com::sun::star::script">XInvocation</type> 
	if the original COM objects support IDispatch. </p>
	
	<p>The optional parameters of the method
	<member scope="com::sun::star::lang">XMultiServiceFactory::createInstanceWithArguments()</member>
	are reserved for future use; at this time they are ignored.  </p>

	@deprecated
 */
published service OleObjectFactory
{
	interface com::sun::star::lang::XMultiServiceFactory;
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
