/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_i18n_XNativeNumberSupplier_idl__
#define __com_sun_star_i18n_XNativeNumberSupplier_idl__

#include <com/sun/star/lang/Locale.idl>
#include <NativeNumberXmlAttributes.idl>

//=============================================================================

module com { module sun { module star { module i18n {

//=============================================================================

/** Methods to convert between strings of ASCII Arabic digits and native
    numeral strings.

	 @since OOo 1.1.2
 */

published interface XNativeNumberSupplier : ::com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** Returns native number string for given number string.
    
        @param nNativeNumberMode
            One of <type>NativeNumberMode</type> values.
     */

    string getNativeNumberString( [in] string aNumberString,
                    [in] ::com::sun::star::lang::Locale aLocale,
                    [in] short nNativeNumberMode );

    //-------------------------------------------------------------------------
    /** Check if the NatNum is valid for the given locale.
    
        @param nNativeNumberMode
            One of <type>NativeNumberMode</type> values.
     */

    boolean isValidNatNum( [in] ::com::sun::star::lang::Locale aLocale,
                    [in] short nNativeNumberMode );

    //-------------------------------------------------------------------------
    /** Convert a specific NatNum/Locale combination to attributes used
        in the XML file format.

        @param nNativeNumberMode
            One of <type>NativeNumberMode</type> values.
     */

    NativeNumberXmlAttributes convertToXmlAttributes(
            [in] ::com::sun::star::lang::Locale aLocale,
            [in] short nNativeNumberMode );

    //-------------------------------------------------------------------------
    /** Convert XML attributes to a NatNum value.

        @returns
            One of <type>NativeNumberMode</type>
     */

    short convertFromXmlAttributes( [in] NativeNumberXmlAttributes aAttr );

};

//=============================================================================
}; }; }; };

#endif
