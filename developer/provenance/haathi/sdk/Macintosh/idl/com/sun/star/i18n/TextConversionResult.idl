/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_i18n_XTextConversionResult_idl__
#define __com_sun_star_i18n_XTextConversionResult_idl__


#ifndef __com_sun_star_i18n_Boundary_idl__
#include <com/sun/star/i18n/Boundary.idl>
#endif


//=============================================================================

module com {  module sun {  module star {  module i18n {

//=============================================================================

/** Text conversion result to be used with <type>XTextConversion</type>.

	 @since OOo 1.1.2
*/

published struct TextConversionResult
{
	/** The boundary of the first convertible word in the given text.

        <p>If there is no convertible word found in the text, <var>startPos</var> 
	    and <var>endPos</var> for Boundary equal 0. 
	*/
    ::com::sun::star::i18n::Boundary Boundary;

	/** A list of replacement candidates for the first convertible word
	    found in the given text.
	*/
	sequence < string >		Candidates;
};

//=============================================================================

}; }; }; };

#endif
