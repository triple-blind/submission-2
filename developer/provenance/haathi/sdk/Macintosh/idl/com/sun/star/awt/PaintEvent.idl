/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_PaintEvent_idl__ 
#define __com_sun_star_awt_PaintEvent_idl__ 
 
#ifndef __com_sun_star_lang_EventObject_idl__ 
#include <com/sun/star/lang/EventObject.idl> 
#endif 
 
#ifndef __com_sun_star_awt_Rectangle_idl__ 
#include <com/sun/star/awt/Rectangle.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 
 
/** specifies the paint event for a component.
			
	<p>This event is a special type which is used to ensure that
	paint/update method calls are serialized along with the other
	events delivered from the event queue.</p>

    @see WindowEvent
 */
published struct PaintEvent: com::sun::star::lang::EventObject
{ 
	//------------------------------------------------------------------------- 
	 
	/** contains the rectangle area which needs to be repainted.
	 */
	com::sun::star::awt::Rectangle UpdateRect; 
 
	//------------------------------------------------------------------------- 
	 
	/** contains the number of paint events that follows this event if
		it is a multiple PaintEvent. You can collect the PaintEvent
		until Count is zero.
	 */
	short Count; 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
