/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_i18n_FormatElement_idl__
#define __com_sun_star_i18n_FormatElement_idl__

//============================================================================

module com {  module sun {  module star {  module i18n {

//============================================================================

/**
    One number format code and its attributes, returned in a sequence by
    <member>XLocaleData::getAllFormats()</member>.
    
    <p> Contains raw data defined in the XML locale data files. </p>

    @see XLocaleData
        for links to DTD of XML locale data files.
 */

published struct FormatElement
{
    /** The format code, for example, "YYYY-MM-DD". */
    string  formatCode;

    /** A name or description that is displayed in the number formatter
        dialog. */
    string  formatName;

    /** A unique (within one locale) identifier. */
    string  formatKey;

    /** Type may be one of "short", "medium", "long". */
    string  formatType;

    /** Usage category, for example, "DATE" or "FIXED_NUMBER",
        corresponding with <type>KNumberFormatUsage</type> values. */
    string  formatUsage;

    /** The index used by the number formatter, predefined values
        corresponding with <type>NumberFormatIndex</type> values. */
    short   formatIndex;

    /** If a format code is the default code of a <em>formatType</em>
        group. */
    boolean isDefault;
};

//============================================================================
}; }; }; };

#endif
