/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_drawing_ShapeCollection_idl__
#define __com_sun_star_drawing_ShapeCollection_idl__

#ifndef __com_sun_star_drawing_Shapes_idl__
#include <com/sun/star/drawing/Shapes.idl>
#endif

#ifndef __com_sun_star_lang_XComponent_idl__
#include <com/sun/star/lang/XComponent.idl>
#endif

//=============================================================================

module com { module sun { module star { module drawing { 

//=============================================================================
/** This service describes a generic container to manage collections of
	<type>Shape</type>. The <type>Shape</type> that are added to this
	collection are not owned by the collection.

	This service is used by the view f.e. to return a collection of
	<type>Shape</type> that are selected at the ui.
*/
published service ShapeCollection
{
	/** gives access to the shapes
	 */
	interface com::sun::star::drawing::XShapes;

    /** allows controlling or observing the lifetime of this collection
	 */
    interface com::sun::star::lang::XComponent;

};

//=============================================================================

}; }; }; }; 

#endif

