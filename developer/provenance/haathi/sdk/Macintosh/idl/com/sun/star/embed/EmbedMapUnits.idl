/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_embed_EmbedMapUnits_idl__
#define __com_sun_star_embed_EmbedMapUnits_idl__


//============================================================================

module com { module sun { module star { module embed {

//============================================================================
/** contains list of possible map modes supported by embedded object.

	@see XVisualObject
*/
published constants EmbedMapUnits
{
	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one-hundredth
		of milimetre.
	 */
    const long ONE_100TH_MM = 0;

	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one-tenth
		of milimetre.
	 */
    const long ONE_10TH_MM = 1;

	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one
		milimetre.
	 */
    const long ONE_MM = 2;

	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one
		centimetre.
	 */
    const long ONE_CM = 3;

	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one-thousandth
		of inch.
	 */
    const long ONE_1000TH_INCH = 4;

	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one-hundredth
		of inch.
	 */
    const long ONE_100TH_INCH = 5;

	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one-tenth
		of inch.
	 */
    const long ONE_10TH_INCH = 6;

	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one inch.
	 */
    const long ONE_INCH = 7;

	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one
		typographical point.
	 */
    const long POINT = 8;

	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one twentieth
		of typographical point.
	 */
    const long TWIP = 9;

	// ----------------------------------------------------------------------
	/** In this type of map mode one logical point is equal to one pixel.
	 */
    const long PIXEL = 10;
};

//=============================================================================

}; }; }; };

#endif

