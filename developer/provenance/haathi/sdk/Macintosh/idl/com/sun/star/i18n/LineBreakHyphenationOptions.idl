/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_i18n_LineBreakHyphenationOptions_idl__
#define __com_sun_star_i18n_LineBreakHyphenationOptions_idl__

#ifndef __com_sun_star_linguistic2_XHyphenator_idl__
#include <com/sun/star/linguistic2/XHyphenator.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module i18n {

//=============================================================================

/** Hyphenation options passed in calls to <member>XBreakIterator::getLineBreak()</member>.
 */
published struct LineBreakHyphenationOptions
{
    /// Reference to the specific hyphenator - can be zero.
    ::com::sun::star::linguistic2::XHyphenator rHyphenator;

    /** Sequence of property values to be used by the hyphenator - can be 
        empty if the default values (from the property set) should be used. */
    ::com::sun::star::beans::PropertyValues aHyphenationOptions;

    /** The first character not fitting to the current line,
        considering an additional "-" for hyphenation */
    long  hyphenIndex;
};

//=============================================================================
}; }; }; };

#endif
