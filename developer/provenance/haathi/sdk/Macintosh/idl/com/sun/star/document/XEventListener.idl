/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_document_XEventListener_idl__
#define __com_sun_star_document_XEventListener_idl__

#ifndef __com_sun_star_lang_XEventListener_idl__
#include <com/sun/star/lang/XEventListener.idl>
#endif

#ifndef __com_sun_star_document_EventObject_idl__
#include <com/sun/star/document/EventObject.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module document {

//=============================================================================
/** makes it possible to register listeners, which are called whenever
    a document or document content event occurs

    <p>Such events will be broadcasted by a <type>XEventBroadcaster</type>.</p>

    @deprecated
    @see XDocumentEventListener
 */
published interface XEventListener: com::sun::star::lang::XEventListener
{
	//-------------------------------------------------------------------------
    /** is called whenever a document event (see <type>EventObject</type>) occurs

        @param Event
            specifies the event type
	 */
    [oneway] void notifyEvent( [in] EventObject Event );
};

//=============================================================================

}; }; }; };

#endif
