/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_sdb_application_XCopyTableListener_idl__
#define __com_sun_star_sdb_application_XCopyTableListener_idl__

#ifndef __com_sun_star_lang_XEventListener_idl__ 
#include <com/sun/star/lang/XEventListener.idl>
#endif
#ifndef __com_sun_star_sdb_application_CopyTableRowEvent_idl__
#include <com/sun/star/sdb/application/CopyTableRowEvent.idl>
#endif

//=============================================================================

module com { module sun { module star { module sdb { module application { 

//=============================================================================

/** specifies the interface required to listen for progress in copying
    table rows via a <code>CopyTableWizard</code>.

    @see CopyTableRowEvent
    @see CopyTableWizard
 */
interface XCopyTableListener : ::com::sun::star::lang::XEventListener
{
    /** is called when a row is about to be copied.

        <p>This method is called immediately before a row is copied. It might be used, for instance,
        to update a progress indicator.</p>

        @param Event
            describes the current state of the copy operation.
            <member>CopyTableRowEvent::SourceData</member> is positioned at the row
            which is about to be copied.
    */
    void    copyingRow( [in] CopyTableRowEvent Event );

    /** is called when a row was successfully copied.

        <p>This method is called right after a row has been successfully copied. It might be used,
        for instance, to update a progress indicator.</p>

        @param Event
            describes the current state of the copy operation.
            <member>CopyTableRowEvent::SourceData</member> is positioned at the row
            which was just copied to the target database.
    */
    void    copiedRow( [in] CopyTableRowEvent Event );

    /** is called when copying a row failed.

        @param Event
            describes the current state of the copy operation.
            <member>CopyTableRowEvent::SourceData</member> is positioned at the row
            which was attempted to be copied to the target database.
            <member>CopyTableRowEvent::Error</member> will contain the actual error which
            happened.

        @return
            how to continue with copying. Must be one of the <type>CopyTableContinuation</type>
            constants.
    */
    short   copyRowError( [in] CopyTableRowEvent Event );
};

//=============================================================================

}; }; }; }; }; 

//=============================================================================

#endif
