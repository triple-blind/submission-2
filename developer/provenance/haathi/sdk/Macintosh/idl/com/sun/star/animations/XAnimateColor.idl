/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_animations_XAnimateColor_idl__ 
#define __com_sun_star_animations_XAnimateColor_idl__ 

#ifndef __com_sun_star_animations_XAnimate_idl__
#include <com/sun/star/animations/XAnimate.idl>
#endif

//============================================================================= 
 
 module com {  module sun {  module star {  module animations {  
 
//============================================================================= 

/** Interface for animation by defining color changes over time.
	<br>
	Only color value will be legal values for the following members
	<ul>
	<li><member>XAnimate::Values</member></li>
	<li><member>XAnimate::From</member></li>
	<li><member>XAnimate::To</member></li>
	<li><member>XAnimate::By</member></li>
	</ul>
	@see http://www.w3.org/TR/smil20/animation.html#edef-animateColor
*/
interface XAnimateColor : XAnimate
{
	/** defines the color space which is used to perform the interpolation.
		<br>
		@see <const>AnimateColorSpace</const>
	*/
	[attribute] short ColorInterpolation;

	/** defines the direction which is used to perform the interpolation
		inside the color space defined with <member>ColorSpace</member>.
		<br>
		Values could be <true/> for clockwise and <false/> for counterclockwise.

		This attribute will be ignored for color spaces where this does
		not make any sense.
	*/
	[attribute] boolean Direction;
};

//============================================================================= 
 
}; }; }; };  

#endif
