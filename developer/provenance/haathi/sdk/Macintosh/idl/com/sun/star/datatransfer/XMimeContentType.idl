/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/




#ifndef __com_sun_star_datatransfer_XMimeContentType_idl__
#define __com_sun_star_datatransfer_XMimeContentType_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_container_NoSuchElementException_idl__
#include <com/sun/star/container/NoSuchElementException.idl>
#endif

module com { module sun { module star { module datatransfer {

//-------------------------------------------------------------------------
/** An implementation of this interface represents a MIME content-type that 
	is conform to <a href="ftp://ftp.isi.edu/in-notes/rfc2045.txt">Rfc2045</a> and 
	<a href="ftp://ftp.isi.edu/in-notes/rfc2046.txt">Rfc2046</a>.
	Instances that implement this interface could be created using the
	interface <type>XMimeContentTypeFactory</type>.
*/

published interface XMimeContentType : com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/** To get the media type of the MIME content-type.

		@returns
		The media type of the MIME content-type.
	*/
	string getMediaType( );

	//-------------------------------------------------------------------------
	/** To get the media subtype of the MIME content-type.

		@returns
		The media subtype of the MIME content-type.
	*/
	string getMediaSubtype( );

	//-------------------------------------------------------------------------
	/** To get the full media/submedia type of the MIME content-type.

		@returns
		The full media/submedia type of the MIME content-type.
	*/
	string getFullMediaType( );

	//-------------------------------------------------------------------------
	/** To get a list of parameters that the MIME content-type contains.

		@returns
		A list of the names of all parameters of the MIME content-type.
	*/
	sequence< string > getParameters( );
	
	//-------------------------------------------------------------------------
	/** To query if a specific parameter is supported.
	
		@param aName
		The name of the parameter to query for.

		@returns
		A value of <TRUE/> if the MIME content-type has the specified parameter.
		<p>A value of <FALSE/> if the MIME content-type has not the specified parameter.</p>
	*/
	boolean hasParameter( [in] string aName );

	//-------------------------------------------------------------------------
	/**	To get the value of a specified parameter.

		@param aName
		The name of the parameter for which the value is requested.

		@returns
		The value of the specified parameter.

		@throws com::sun::star::container::NoSuchElementException
		if the specified parameter doesn't exist.
	*/
	string getParameterValue( [in] string aName )
		raises ( com::sun::star::container::NoSuchElementException );
};

}; }; }; };

#endif

