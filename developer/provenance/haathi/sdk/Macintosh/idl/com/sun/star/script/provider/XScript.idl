/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/



#ifndef __com_sun_star_script_provider_XScript_idl__
#define __com_sun_star_script_provider_XScript_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_script_CannotConvertException_idl__
#include <com/sun/star/script/CannotConvertException.idl>
#endif

#ifndef __com_sun_star_reflection_InvocationTargetException_idl__
#include <com/sun/star/reflection/InvocationTargetException.idl>
#endif

#ifndef  __com_sun_star_script_provider_ScriptFrameworkErrorException_idl__
#include <com/sun/star/script/provider/ScriptFrameworkErrorException.idl>
#endif

//===========================================================================

module com { module sun { module star { module script { module provider {

//===========================================================================
/**
    This interface represents an invokable script or UNO function.
*/
interface XScript : ::com::sun::star::uno::XInterface {

    //----------------------------------------------------------------------
    /** 
        invoke the script or function represented by the implementing 
            object

		@param aParams 
            all parameters; pure, out params are undefined in sequence,
            i.e., the value has to be ignored by the callee
		@param aOutParamIndex 
            out indices, indicating the position of the out or inout 
            parameters in the list of arguments to the script
		@param aOutParam 
            out parameters<p>
            For example, if the script had the signature<br>
            <code>long foo( [inout] string a, [in] string b, [out] string c )</code>
            <br> the call would look like<br>
            <code>bar.invoke( {"foo", "foo2", "this-is-ignored" }, aOutParamIndex, aOutParam);</code>
            <br> and after the call the out sequences would contain<br>
            <listing>
            aOutParamIndex={0,2};
            aOutParam={"string from a", "string from c"};   
            </listing>

        @returns 
            the value returned from the function being invoked

        @throws ::com::sun::star::reflection::InvocationTargetException
            if and error occurs while attempting to invoke a script the information is captured. If the error or exception is generated by the script itself it is wrapped as either ScriptErrorRaisedException or ScriptExceptionRaisedException or ScriptingFrameworkErrorException are wrapped as ScriptFrameworkErrorExceptions.
    */
    any invoke( 
        [in] sequence<any> aParams, 
		[out] sequence<short> aOutParamIndex, 
		[out] sequence<any> aOutParam ) raises( 
        ::com::sun::star::script::provider::ScriptFrameworkErrorException ,
        ::com::sun::star::reflection::InvocationTargetException);
    
};

//===========================================================================
}; }; }; }; }; // ::com::sun::star::script::provider

#endif
