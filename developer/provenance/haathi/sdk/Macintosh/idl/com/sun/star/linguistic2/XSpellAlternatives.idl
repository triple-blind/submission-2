/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_linguistic2_XSpellAlternatives_idl__
#define __com_sun_star_linguistic2_XSpellAlternatives_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_lang_Locale_idl__
#include <com/sun/star/lang/Locale.idl>
#endif

//=============================================================================

module com { module sun { module star { module linguistic2 {

//=============================================================================
/** Gives access to the results of failed
	spellchecking attempts and may provide spelling alternatives.

	<P>This is used by the
	<member scope="com::sun::star::linguistic2">XSpellChecker::spell</member>
	function when the word was not found to be correct.
	Suggestions for other words to be used may be provided along with
	a failure-type that may specifiy why the word was not correct.
	</P>

    @see    <tyoe scope="com::sun::star::linguistic2">SpellFailure</type>
*/
published interface XSpellAlternatives : com::sun::star::uno::XInterface
{
	//-------------------------------------------------------------------------
	/**
	 	@returns
 			the word that was misspelled.
	 */
	string getWord();

	//-------------------------------------------------------------------------
	/**
		@returns
			the Locale which specifies the language of the misspelled word.
	*/
	com::sun::star::lang::Locale getLocale();

	//-------------------------------------------------------------------------
	/**
		@returns
			the type (reason) for spellchecking to have failed verification.

    @see    <tyoe scope="com::sun::star::linguistic2">SpellFailure</type>
	*/
	short getFailureType();

	//-------------------------------------------------------------------------
	/**
		@returns
			the number of suggested spelling alternatives available.
	*/
	short getAlternativesCount();

	//-------------------------------------------------------------------------
	/**
	 	@returns
			the sequence of suggested spelling alternatives.
	*/
	sequence<string> getAlternatives();

};

//=============================================================================

}; }; }; };

#endif
