/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_embed_XInplaceClient_idl__
#define __com_sun_star_embed_XInplaceClient_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_container_XIndexAccess_idl__
#include <com/sun/star/container/XIndexAccess.idl>
#endif

#ifndef __com_sun_star_frame_XDispatchProvider_idl__
#include <com/sun/star/frame/XDispatchProvider.idl>
#endif

#ifndef __com_sun_star_frame_XLayoutManager_idl__
#include <com/sun/star/frame/XLayoutManager.idl>
#endif

#ifndef __com_sun_star_awt_XWindow_idl__
#include <com/sun/star/awt/XWindow.idl>
#endif

#ifndef __com_sun_star_awt_Rectangle_idl__
#include <com/sun/star/awt/Rectangle.idl>
#endif

#ifndef __com_sun_star_awt_Size_idl__
#include <com/sun/star/awt/Size.idl>
#endif

#ifndef __com_sun_star_awt_KeyEvent_idl__
#include <com/sun/star/awt/KeyEvent.idl>
#endif

#ifndef __com_sun_star_embed_WrongStateException_idl__
#include <com/sun/star/embed/WrongStateException.idl>
#endif


//============================================================================

 module com {  module sun {  module star {  module embed {

//============================================================================
/** represents common functionality for inplace clients.
 */
interface XInplaceClient: com::sun::star::uno::XInterface
{
	//------------------------------------------------------------------------
    /** checks if the container can activate the object inplace.

		@return
			<TRUE/> the container can activate the object inplace.
			<FALSE/> otherwise.
	 */
	boolean canInplaceActivate();

	//------------------------------------------------------------------------
    /** notifies container through the client that the object is to be
		inplace activated.

        @throws com::sun::star::embed::WrongStateException
			the container is not ready for activation
	 */
	void activatingInplace()
		raises( ::com::sun::star::embed::WrongStateException );

	//------------------------------------------------------------------------
    /** notifies container through the client that the object is to be
		UI-activated.

        @throws com::sun::star::embed::WrongStateException
			the container is not ready for activation
	 */
	void activatingUI()
		raises( ::com::sun::star::embed::WrongStateException );

	//------------------------------------------------------------------------
    /** notifies container through the client that the object is deactivated.

        @throws com::sun::star::embed::WrongStateException
			the container is not ready for deactivation
	 */
	void deactivatedInplace()
		raises( ::com::sun::star::embed::WrongStateException );

	//------------------------------------------------------------------------
    /** notifies container through the client that the object is
		UI-deactivated.
		
		<p>
		After this notification the container can restore it's own UI and take focus.
		</p>

        @throws com::sun::star::embed::WrongStateException
			the container is not ready for deactivation
	 */
	void deactivatedUI()
		raises( ::com::sun::star::embed::WrongStateException );

	//------------------------------------------------------------------------
	/** allows to retrieve the 
		<type scope="com::sun::star::frame">LayoutManager</type> of the
		container.
		
		@return
			reference to object representing the 
			<type scope="com::sun::star::frame">LayoutManager</type> of the
			container

        @throws com::sun::star::embed::WrongStateException
		    the object is in unexpected state to make such request
	 */
	::com::sun::star::frame::XLayoutManager getLayoutManager()
		raises( ::com::sun::star::embed::WrongStateException );

	//------------------------------------------------------------------------
	/** allows to retrieve the container's dispatch provider.
		
		@return
			reference to object implementing the
			<type scope="com::sun::star::frame">XDispatchProvider</type>

        @throws com::sun::star::embed::WrongStateException
		    the object is in unexpected state to make such request
	 */
	::com::sun::star::frame::XDispatchProvider getInplaceDispatchProvider()
		raises( ::com::sun::star::embed::WrongStateException );

	//------------------------------------------------------------------------
    /** gets the inplace object position rectangle.

		<p>
		The rectangle is provided in object's parent window coordinates in
		pixels. The intersection of position and clip rectangles specifies
		the visible part of the object. In case the position window has a size
		that is bigger than object's size, the object should either scale or
		deactivate.
		</p>

        @return
			specifies a new position rectangle

        @throws com::sun::star::embed::WrongStateException
		    the object is in unexpected state to make such request
	 */
	::com::sun::star::awt::Rectangle getPlacement()
		raises( ::com::sun::star::embed::WrongStateException );

	//------------------------------------------------------------------------
    /** gets the inplace object clip rectangle.

		<p>
		The rectangle is provided in object's parent window coordinates in
		pixels. The intersection of position and clip rectangles specifies
		the visible part of the object. 
		</p>

		@return
			specifies a new clip rectangle

        @throws com::sun::star::embed::WrongStateException
		    the object is in unexpected state to make such request
	 */
	::com::sun::star::awt::Rectangle getClipRectangle()
		raises( ::com::sun::star::embed::WrongStateException );

	//------------------------------------------------------------------------
	/** provides accelerator table the object whants to use while it is
		inplace active.

		@param aKeys
			an accelerator table from object

		@throws com::sun::star::embed::WrongStateException
			the object is in unexpected state
	*/
	void translateAccelerators( [in] sequence< ::com::sun::star::awt::KeyEvent > aKeys )
		raises( ::com::sun::star::embed::WrongStateException );

	//------------------------------------------------------------------------
    /** scrolls the object.

		@param aOffset
			scrolls the object to specified offset in pixels

        @throws com::sun::star::embed::WrongStateException
		    the object is in unexpected state
	 */
	void scrollObject( [in] ::com::sun::star::awt::Size aOffset )
		raises( ::com::sun::star::embed::WrongStateException );

	//------------------------------------------------------------------------
    /** notifies the container that the position of the object is changed.

        @param aPosRect
			specifies a new position rectangle

        @throws com::sun::star::embed::WrongStateException
		    the object state is not correct

        @throws com::sun::star::uno::Exception
			in case of other problems
	 */
	void changedPlacement( [in] ::com::sun::star::awt::Rectangle aPosRect )
		raises( ::com::sun::star::embed::WrongStateException,
		        ::com::sun::star::uno::Exception );
};

//============================================================================

}; }; }; };

#endif

