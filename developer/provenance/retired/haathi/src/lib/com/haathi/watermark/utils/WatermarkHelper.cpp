/******************************************************************************
Header
******************************************************************************/
// $Header: //MyDataDepot/Projects/provenance-autoType2/retired/haathi/src/lib/com/haathi/watermark/utils/WatermarkHelper.cpp#1 $
/******************************************************************************
Include self
******************************************************************************/
#include "com/haathi/watermark/WatermarkHelper.hpp"
/******************************************************************************
Include others
******************************************************************************/
#include <limits> // CHAR_BIT

#ifndef CHAR_BIT
#	define CHAR_BIT 8
#endif
/******************************************************************************
Using
******************************************************************************/

/******************************************************************************
Namespace
******************************************************************************/
namespace com {
	namespace haathi {
		namespace watermark {
/******************************************************************************
Class
******************************************************************************/
unsigned char WatermarkHelper::shiftLeftAndGetBit(void *object, size_t size) {
	unsigned char lbit = (static_cast<unsigned char*>(object)[0]) & (1 << (CHAR_BIT - 1)) ? 1 : 0;

	for (unsigned char* data = static_cast<unsigned char*>(object); size--; ++data ) {
		unsigned char bit = size ? (data[1] & (1 << (CHAR_BIT - 1)) ? 1 : 0) : 0;
	      
	   	*data <<= 1;
	   	*data |= bit;
	}
	return lbit;
}
/******************************************************************************
Namespace
******************************************************************************/
		};
	};
};
/*****************************************************************************/
