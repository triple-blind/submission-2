/******************************************************************************
Header
******************************************************************************/
// $Header: //MyDataDepot/Projects/provenance-autoType2/retired/haathi/src/lib/com/haathi/document/NewLineTracker.cpp#1 $
/******************************************************************************
Include self
******************************************************************************/
#include "com/haathi/watermark/NewLineTracker.hpp"
/******************************************************************************
Include others
******************************************************************************/

/******************************************************************************
Using
******************************************************************************/
using namespace com::sun::star::awt;
/******************************************************************************
Namespace
******************************************************************************/
namespace com {
	namespace haathi {
		namespace watermark {
/******************************************************************************
Class
******************************************************************************/
NewLineTracker::NewLineTracker() {
	reset();
}

void NewLineTracker::reset() {
	isOldPoint = false;
}

bool NewLineTracker::isNewLine(Point newPoint) {
	// Returns true if point is known to have moved left.
	// This may not work for narrow text columns!
	bool result = isOldPoint && newPoint.X < oldPoint.X;

	isOldPoint = true;
	oldPoint = newPoint;
	return result;
}
/******************************************************************************
Namespace
******************************************************************************/
		};
	};
};
/*****************************************************************************/
